/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v13.1, Version=13.1.8.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\Microsoft.Net\assembly\GAC_MSIL\DevExpress.XtraReports.v13.1\v4.0_13.1.8.0__b88d1754d700e49a\DevExpress.XtraReports.v13.1.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>en-US</Localization>
///   <Version>13.1</Version>
///   <References>
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_32\System.Data\v4.0_4.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System\v4.0_4.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Configuration\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Xml\v4.0_4.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Data.SqlXml\v4.0_4.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Security\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_32\System.Transactions\v4.0_4.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_32\System.EnterpriseServices\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.DirectoryServices\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Runtime.Remoting\v4.0_4.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_32\System.Web\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\Microsoft.Build.Framework\v4.0_4.0.0.0__b03f5f7f11d50a3a\Microsoft.Build.Framework.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Xaml\v4.0_4.0.0.0__b77a5c561934e089\System.Xaml.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.ComponentModel.DataAnnotations\v4.0_4.0.0.0__31bf3856ad364e35\System.ComponentModel.DataAnnotations.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Core\v4.0_4.0.0.0__b77a5c561934e089\System.Core.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Numerics\v4.0_4.0.0.0__b77a5c561934e089\System.Numerics.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Runtime.Caching\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Runtime.Caching.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Web.ApplicationServices\v4.0_4.0.0.0__31bf3856ad364e35\System.Web.ApplicationServices.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Drawing\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Web.Services\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Design\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Windows.Forms\v4.0_4.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\Accessibility\v4.0_4.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Deployment\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Drawing.Design\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_32\System.Data.OracleClient\v4.0_4.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Web.RegularExpressions\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\Microsoft.Build.Utilities.v4.0\v4.0_4.0.0.0__b03f5f7f11d50a3a\Microsoft.Build.Utilities.v4.0.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.DirectoryServices.Protocols\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\Microsoft.Build.Tasks.v4.0\v4.0_4.0.0.0__b03f5f7f11d50a3a\Microsoft.Build.Tasks.v4.0.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.ServiceProcess\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Configuration.Install\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Runtime.Serialization\v4.0_4.0.0.0__b77a5c561934e089\System.Runtime.Serialization.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.ServiceModel.Internals\v4.0_4.0.0.0__31bf3856ad364e35\System.ServiceModel.Internals.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\SMDiagnostics\v4.0_4.0.0.0__b77a5c561934e089\SMDiagnostics.dll" />
///   </References>
///   <Resources>
///     <Resource Name="XtraReportSerialization.XR_Report">
/// zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAADAAAAAAAAAFBBRFBBRFDpMUDGRcP05SDz3wdyAAAAAAAAACEAAABxAQAAHGwAbwBnAG8ALgBWAGEAbAB1AGUASQBuAGYAbwAAAAAATHAAaQBjAHQAdQByAGUAQgBvAHgAMQAuAEkAbQBhAGcAZQAmAFMAeQBzAHQAZQBtAC4ARAByAGEAdwBpAG4AZwAuAEkAbQBhAGcAZQDYTgAALnMAcQBsAEMAbwBtAG0AYQBuAGQAMQAuAEMAbwBtAG0AYQBuAGQAVABlAHgAdABmUgAAAdSdAWlW
/// Qk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFMVUFBQUIvQ0FJQUFBQW1RaFFzQUFBQUJHZEJUVUVBQUxHUEMveGhCUUFBQUFsd1NGbHpBQUFPd3dBQURzTUJ4MitvWkFBQUFCbDBSVmgwVTI5bWRIZGhjbVVBUVdSdlltVWdTVzFoWjJWU1pXRmtlWEhKWlR3QUFEcWNTVVJCVkhoZTdkMEgyRlhWbFQ3d1pFd3hHbnZ2aUMybW16NlovOHhvakJsTEVqVnE3QnBGRTdHaVJnTVdFQUVGVVpDcWdGSXNVUVFSYkNnZ1RWUkFSVVVSc0NCcVJCUkZzSGZuZCsvN2VYTHlnZWhNbUwrWEQ5WnpudlBzYzg0K2U2KzkxcnZmdGRhOTk0TXZmTFM4eW52dnZmZisrKytuL2NFSEg2UkJ0RC84OE1PNmk5SWpOL1V2WGxsT1pIbkVSeGtOSkpmdnZ2dnV2SG56bm52dXVRVUxGcFR4QVViMStvT0lt
/// M1VYRFYyV08zd1V6dVptbUNpZ01HUEdqQ2xUcGp6NjZLUHo1OC8zNkoxMzN2SFVmUjBpNlVieXRPNmlvY3R5aDQ4aVFMenh4aHZCeXNLRkN5ZFBuangwNk5DNzc3NTd6cHc1Zk84UkxubjExVmZUTXdJaTNpVmxyRFI0V1I3NW8reGdJQmcxYWxTSERoMXV1dW1teHg1N0xBZ0Fqci85N1cvT3I3MzIydHR2djExUWpvYW5hUzhuc3R6aG93d08wZVNLSzY3bzJyVnIvLzc5SDMvODhkZGZmOTFObUhqKytlZGZlT0dGRjE5ODhkbG5uNTA3ZHk2Q0tXRGg5WG9JYTlpeVBPYW41SlZYWHJuenpqc3Z2UERDTTg4ODgrcXJyMzdpaVNmRWxDcDN2QThmVWhBZDRPT1pxdUFTY01FMFJVYXlJajl0eUpLWWN0WlpaNTE4OHNrREJneVlPbldxc2dVKzNuenpUWTduZmpFRlJNU1hsMTU2
/// U1VieTVKTlBUcDgrZmRhc1dVbGRqYkNDUHhxSWNLUk5INmNTb1VHZDBxbFRwK09QUDc1Tm16YkN5dGl4WXlFZ2ZPQU1Jb0R5MWx0dmFZUklRQWQvUFBYVVV6Tm56aFNQTklTYmpFWWtzMlV1Q2NFMEpHa0krQUNDWkk1Y1ZZa1E3Ny92VW9ESVU1ZHBpQkhEaHc5djE2N2RLYWVjY3ZycHAxOXl5U1YzM0hFSFZwQjJjRE0wRkZXcmNkeUVnd1VMRm1BUkw0SklXQVJLbm43NmFVbUpEbVpKZjFNMFBHUkVsbmw4RkU1YXJDUVFjTjVERHozVXMyZFB0SEhjY2NkSlNGVXJhbHJNNFJHcWVQbmxsM1V6RklpUUtzWXFIM0tFUllJU0VBR21zTWkwYWRObXo1Nk5YWXBBbzMrREREb05FeDljeGJ0eEdCb1lObXlZVkFNNEpLUTlldlFRVXhJcCtGNkdNV0hDaEd1dXVRWko4SGRTRUdN
/// Nmc0NUJ4QnJkc0pHZWFFTzZxdEtCRHlPb2g1TzRaRkxpOWJwV1E1RUdFbCt5NC9tMUVQZDU3dUdISDc3ODhzdFBPKzAwTWFWang0NVhYbm5sZmZmZGh3TlVzTkNBVkhDSlJHVElrQ0ZYWFhVVm9LaFpNcVlVTllsSUNFWktpMFdncENBUzRIamtrVWVNajBnS2lKUnprWVloRFFRZnZBZ2ZkZGRWNGNoYmI3MVZrU0tndEc3ZG12dEhqaHdKQWM4Kys2eW56aGRkZE5HZi8vem5QbjM2REJvMDZOSkxMKzNldmJ0YVpzU0lFUkpZaEpGQndpVllCQUxjaEJJUXdUUm9BNUVrSTBFa0dxWnJlT0FnRFFFZlpiSFhiZTVKa3lhZGYvNzVrdERtelp0elBIb1FVd1FVSFJBRE5CeDg4TUhObWpWREhyTFVibFVCb0Y2OWVvaytWMTk5ZGZGQnUvNWc5MG14UmgrNUtqeGhFWnprVGpuV05B
/// eHBVUGpnSHVFRElIREdYLzd5bC9QT093ODlxRm5zYjQvRUZMaHAyclRwSVljY0l1SklWNkhoNG9zdkJoZmRZTVZaeGR1N2QyK2dHVHg0TUc0QWpqQVRpa29VSzdnRWl4aXdYUG9LTjZST2xZWWlOWWNQUGlCSklBcHh5VTlweDA5cEYrS3BoTURXUCtPTU0wU050bTNiOHIzNDh1Q0REOXJXZVNyLytPMXZmNHRScnJ2dXV1dXZ2NzVUcDA2ZE8zY0dqaTVkdXNoYkw3amdBcTlBeG1XWFhkYTNiMS9SQjRER2pSdm5kYlJoQ2pwQUJzRkFVQ0x0UlNRS0h4MmtJSUVJU0Qzd3dBTVFrNC9xaWM0azdRajlEVVUwNm03VnNOUXVmMVEyN01mQ21nVW1YQ1l0Y09ZNTkvbEdBZEt5WmNzVFR6eVIrMUdDWUhIWFhYZWxCTFhMYjd6eHhnTVBQRkJNa1Y3SVF1Njg4MDRrb2IrZTdkcTFh
/// OUdpQmVZSVBtQUl0cUFFUkZ5S081QjAvLzMzUzA0ek5hZ0pZZHdmeDBPSktJTkZ6Q0t1Z1NNZ3ByU1I2aGFZSmxrRnFidXVTcjNMR3BSbExMNGtGV0JyYlg3aUE4ZzQ4OHd6anpqaWlGTlBQWlcvVlNnUWdPZHRkRTZWU1VBTVpIQTJXTng4ODgwb1llREFnUWhEZGtJNmRPaUFLckRPMldlZjdhYXNSY05ONUFFY09NYVlzQ0pJNFFaalJnMzRvRWFVY1RNZncwT0p2RlZHWW5aaERrckVvREo1VUxzZU5XWWh0U3cxaHc4R0xZZVAyRFIzUEZKQnhLYnFCU21DVUhMeXlTZHpjL3YyN1ZVZjNIL1BQZmR3a2c1cVZ6Und3QUVIeUVVQVl1alFvYU5IaithYmJPdFJvMGFoRGNDQ0RDTWdEN0JvMWFyVnVlZWVpeitJaHB2SldPRUdyMENKOG9mTEN3ZERDWDFjVWd4L21OZWx1dWFK
/// SjU0QXBueEdJdldCSGtqS0swUi95eW1qcEphbDV2REJjRUdBc3piTFJvcTl5OEdnY1B6eHh4OTk5TkhTekRadDJ2VHIxKysyMjI2Nzk5NTdPWS9waGY4YmJyaWhTWk1tZSs2NUp3UU1HellNYnJpV24vTDVWZHhqeDNzUndzZ3BwNXdpM0dpQTJqbm5uQU1jc0VLMGdRT0w0QmdRd1NXZ3BscUpNc0ZyWXB5elhNU1lCRkRVejFBeWRlcFU2VWcrYmtGbVpTNVpWaUJTby9HRjdSWTFuMDJaRDd0UWd0MnY0cENRUW9iQUFSTXdaRU1qQ1FGbGp6MzJPT3l3dzNoVVpUdCsvSGpaUURhM1FiaktHZmowTjRYY0FocDBocWRqamprR1JCUSs0SUpYSUVZRFJOUkI4QUVvR2tpRkRoSWFZL0t4b1F4aVpKeEVRQVFPd0ZTc1FTUXBiVUlraEE1bGlHUUQxRjNVcXRRaVBpclErTmh3dkNq
/// SHRCM2xpUW9Oc0xDdFpaZHFrNGtUSndvaWZLUGF0S0h0VjVYdHZ2dnV5OWsyZW40dnFMamd5TnR2djkzVERGZ0lWOFZiZklraFRqcnBwS09PT3VyWVk0L1YrTk9mL2lUVkJSRjBnb0VBemxrbUN4d1NGSXhGaEJ1TVpXcXdNTHVob2phS29qQ0k0RGxubWovKytPT1FMWFdkTVdNR2lIaWxXRjJZc3BhbEZ1TkxZVDVHVnhRb092cjM3eS94RkRWVUpUeU5BNWhlZVluVkFZalJCdzBhMUt4Wk0wNlZydHExSEtheWtDcm1HelZKaVJmdFk5bEFQdlVpZkZPNGgxT0ZJVEZycjczMkVyWk9PT0VFRkFVb0d0SmVnbFRPcWdxZ0FBYzhKVjlSS09HSkRHSlNRaVhucENhU3BMQUlUVkxYME1FbHpjTTl0UzgxR2wrWUw1OUI4YjJJRGhBaENkWUhHdTdVZG5ZSkIyUEdqSkdycWhvQ3JJ
/// cVgzbmdEYzNnWFB1eGROS09nbUZ3Vkc3cWNNSm9JQVFRb25DZU9ISDc0NFlwaHNRWTRuREVLMk1FS0VXN0NKYVIxNjlZQ0VNUjA3dHhadG12TWpHWnFHa1l4NFlZZ0Vrc0lVSEFKdk5MS3pRS3BoRDdlb2tuZGRjMUlMZUlqSHoweHNUT2Jjak83STIyaEhVcHN6UWhQQkM3YWhhMERIVUN4ZmIwQ0pmWnV2bkhGOExJTm14aVMzUEUwcnhEakp6c3g5YlhYWGdzV0NoODE4eC8vK0VmUkNxL2tHejROV0VuUWtiVWdFaFRpMGxPeEQwc0ZIRUZiOUllYm9BVEVCVExJRUdYb0FDV3paOCtHR3dwWFZhZ0lOWnk5YmtXNTg3bEx6ZUdEbnhRSWtrcVpQeThXN21STld6K1JCVyt6Tyt0enB6WlBzS25OcHdFb0xPNlJCbStCbEo1UVl2dGllRU5ObVRKRlhrSWd4cnZsTFZ2RU5aa05u
/// dGh2di8xd2ljWWhoeHl5eno3N0FJMDJsQWc5VU9Lc0RSL3lraFRKRUNNcFViUHdlb2JsYjhxRVNCQUdDYXRSQm1vdFI5dE5hQ2dpWGExSnplRURRMENEbkVOdGN0MTExNDBjT1hMY3VIRUlYSUNBR0U2MTg2UWdlSVY5ZVlMRmlhMUp2SnRCQUlWdmJHVjN1Q2NvNFF3Z000SndnMGhrbDg1RzB5RnZjUkpVQlNVR3YrS0tLMkJpNzczM2RnWUlXRG4wMEVNMXBDUHVoRTdFSVB3Qkh3b2ZDUkNScWVBU0JZN0JnUUJTd1RRb0FYMFNWZ01SWEdJaDRFN3pnc3lvWFZOUnBrYnpEKzRFQzl1eFQ1OCtjZ3R3R1Q1OE9KVGdGWnNiVnZnWXRhQUVMbWRydmlmZ2doTDRJOXRSVUFjVWx6WW94OWpFbk1GbnNPVkY0VWJTaWtpMEFTaXc4Q0pVVlZXby9NYmRVNkVFVllnMThsYmhSa01s
/// bk5URU9SL0RFQTBVQWg4NktIODB2Q2cxK2V0Zi82clVvbmxVeFgvVU1CMjRCREZXaWtMY3BHcm1KZVhVNVBPVkdzVUhzWTNzZGRsQXQyN2RldlRvb1ZMSXg2Q0Fjc2NkZDl4NTU1MEJDajRYajFBT2xDaFBnTWFtWkhIZ3NCZEpVajhvNFF5T0FTRDcxZDcxaXZGeGtvZ0RLN0RGWVhWemYvekxEdzF2bVJveXdBSlFwQ095VjRBNDZLQ0Q0S0RJWVlGRCs4Z2pqd3lYdUtPdFlQYUsreTd4aW1Da1FsYUVYMzc1NVZtT29sMVJwdnkrK2VhYmJRUHBzM2xOV2p2aHB1YndZZXNJQ2dYSDhxSW9vNnhBMmoxNzlzUW80ZzVUSXZEYmJydk52a1Rqek9xc1R1RjFBaVVZQWxYd3QzSFl1aUNTY0FuMGdFZ29CNWhRa1ZpRG1aSTNlRXUzekE0Y1FZa3h1M2J0Q2haTm16Ymw3ei84NFEv
/// S0dmZ0FsNE1QUGhoMEVtczhkZE1aSU9CR0F6NDBkSUF3RGFJRDNFQVBjVjlicU1xM1A1aUcycVlENityOG43L1VMbjhBU3JZUmswRkEyN1p0TzNUb2NISDE1eHI5K3ZVTFN0Q0p6YWUrUlNjVEprekFLTWxSa3RWaUZGRGpZT1kyR2haeGhoVVFFZThSTzdaUHJDSGdwUUNaTkdrUzZLUmJuRVFIbHhvdWhSdjBJQXRKV0pHUkFBckg4N0diTGdHQzE5M3gxQ1BvY1FrUVlPR21Cc2xUWjUyTlE2UzlWMTU1cGNCWFdYWXRrUWVwWFh6VUUvNFdaZEI0ZnZWVCtjbFh0MjVRZ3FLaEJEK2prOUdqUjBzcGtzbUtHczZBSXRNTURiQjdnSUlrWUNWSmlTUURiV0FSUkNWT0pXa0ZGd2xCa1pGRWdUQy8vcWlMR2x3T0FUREIwd1FVdExrL1FBRUxJQ0FhTHQxRUpNN0s1cVF2Q01aYitz
/// TzZFTG5ZdVdwQmxobDgyTzY4T0d6WXNOYXRXNHZsblRwMVFpUVNRTFRmdTNmdlFZTUdxWFNFbTF0dXVVVXlhNk5qQXF6RDMxQ2lTRUVWK2FRQk1xQWtMTUxaY0NBalVWRFl2c1pQZFFNbzJtN0tWNHBJVi9oTUE4Y01HRERnbkhQTzRYNWU1M0pwcVRKWVVxSUJONEVPU2R2Ti9mZmZYMmNvY1ZZVGVVdTRsUGVZUGJDZ2xiZ1cwcW9kV1did0VlRXd5V25IamgxQnBHWExsb2s0VWhQVUl1bTc1cHByY0lrb0xvZkZKU29nV2NYWXNXTTFVbTBpRElQWXJNbFljUWwvd0Ezd2lXSUFnV3lRaHczTmM3Q0NWTXBiV1RzYm5YQ3EvaUthMENCN0VHTHdnZExYR1FMUUNheVFoQmczY1FaTUFBcmw4MlZ5TVZRaEJYL1VqaXhMK0NqTUoycGNkdGxsdkVMa0pmQkJ6ai8vZkhRQ0lqaEdh
/// YUF1QUJSZ0lxakZXWHFCR3pnR2M0QUY5eEFOV0tuM01RbnlNRVh5R0Z3aVJ5bEtHLzB4U2ozWFNuNVJsT242OSs5UHNWNjllb2w5Z0VzMFhMcUoyOERPRkhtRkRsR0RKTjNKZldLWkJXbDk3ckxNNElNUmVhV0FDT05paUhidDJqVnIxZ3lScUJ2dFMyY3VFVzc0U1FHcDhFbVpJNGQxVGtNeWl4VjQxR2dvaE9PMURSdEc0VDhSSndXT21tWEdqQm15R2FtTVY0b1AzMGpVNEZwcWxEKzNLTVFqUGlZYXVXTTZJQ2d1NjBtNVc3SEdXcEJsQmgrRkc0cUd1R0JIeXUvT3F2NlJpek9JWUpIOE9sQU9LK0pjY2NVVjExNTc3WkFoUXdEbHBvOUZ4RUVrcVc0eVZCeFpKSzFBZzBnQ0VVRkV4TkVmVnNTZ2dNa3JrRlIySkdWUzVueXFRSWxCeUtKWU1hQ2JLL0R4djVFeXBYT252UjQ3
/// OHBuaTVkeHp6NVdSU0JpRm0veUtSOFRCN2ZLUzBJbTRJNGNGRkZGQTZGSDFpRGl6WnMweWxFRjRxN0xacTNXTk5wUndmemx2QmNSOEZpZEJNWFZWaTRwQUdDbDBDOGt0Vmp3aTlUQUJWV1JSb0N4NjUvT1NaU3cvTFlURkM3cm1WNTREQmVsaGl4WXRRRVNOa3g4ZXEyNXdTVElBRlllZ2s3Z3plUEJnWjF3aWJ4VlFETUpQeGpHZ1liWGplRkJBTS9Pclh4M1BuajFiMGtyRUdpaUJwS29pRmNsYlZLcTdyakpCSVhXM1BoWjM5Ri8wdnRrQktPMUZuMzVlc3F6aW95eXN5YkxDQVdKbzNyeTVXQ052elU4MGtwSGdrZ0JGMEFFVWRDTG9vQk5wckxPTTVKSHE3OTNqWTJmQ2hSQUFGbXBnK01BbGMrYk1BUkd4SnFtcmd0bFRQZXVVK0FTaG16R0Q0MlZSbG5sOGxMZWFwRUVwMjZu
/// Nno3OGdFaEhIR1VyYXQyOHZOVkhkZE8vZUhVcUlvQ054SWJBQ0pTSVVJc2xuMnlTSktoWXhPQmFSanVBWVQ1VTJ3bzJvSk9Jb1dOUTFNdGwweTR0bENta1kwa0R3VVVhSnpTMlVuSERDQ1NoRTBucHk5UThnRW00a0tMZ0VVSkJLL2xTT0lCVWlrMVhkU0VLTFVoWW5RWWt6SWdHQ0pDVXBiU0RETEVSL3NjWXJCVVBRcEt6TXNpN0xQRDZ5WmZFOC94WGJWMFFZTVdJRVFKeDAwa25Bb1FER0pXZWNjUVlXQVJRMVR1SU9pRWhObk9VdUJLOUF5Zmp4NHdzaUFRc2lZd1VSUU5FQUJSQkJKUElTTENJd0VXVU82cEpBNUsxSWdFSWxzaUsrZkc1U05uMDFjL2g3UWlBRUtISHh4N0hISGlzdmFkV3FWUmhGUTcyanpBbXBoRTR1dmZSU0VNbkhXVkxYeVpNbll3dURCQmtCUjFIOU9v
/// TWdHQ0VTNlFpSVNGcGRDa2FadWhBUW9XRTk2Q3hEMGhEeTA0STJDSGNTRFk1eDVtTVpLSEFna21iTm1oMVQvUXNYS0FFUnBFTGF0R21EVGlRb3NoWkFJYWpGSlZMQlFCQldIYlVpWnBHWEFBZVVtTUxJSkIrVEFNZjA2ajlOSmpYeENFWXpleVFzVW5leHJFbER3QWQvOEVwOHdCbUZiemd5YmM1VDlCNTExRkdBSWk4NTdiVFQ1SzNhSWc2Z1NHQ2RwU2JobGNBRnV3aEdxcDZISG5wSWhvRThqSU1KUUlTNHJOYS9sWDh4UnVxcWxsSGFRSWwwUk9nUmdEd3FNOW15S3cwaHZoU0FpQUJLbWMrREcybUU2cmRKVllTYkUwODhNWG1yU2xqRTBRQU9iV2VNQWlXb0JXSmdSZU9xcTY0U1JFSkxSa3U0TVlVeDBVbFJBRU1HbEV5ZE9sVU5yQmdHa1dVMzdTaWs1dkRCN2t0Z1kxRHds
/// QVFUQlRJMGluYWszSTF3RlRxeDEva2JQbzQ0NG9qanFuOEJwUTBvS0FTcEVFQkJMUUVIdUNBWVdIRUdtc0dEQnlPU2pHWW95TUFRcGtqUWdRWkFFV3NnUTdxYTZrWXg3RkZlb1VCWm4waTl5eHFVR3VVUGhtUFEyRFJTOTJBUlNiZkZHdHJONGtYdDdIaU9IREpraUZ6a3lDT1BCQTdTdEdsVGRPSXM0b0FGaUlDT01LVGtRUzF1dWtOUWk2Umt6Smd4d2tmR2xIOW9oNnNFR20wUUtUNUpVOTBBQ2xMUkxkd1RvUWxnMGJudXVyYWxSdkVScjlkZFZDVjNDZ2xvU04zamtuaGF4UDVQNmlOZVNESU9QL3h3R1d2K2RnRmk4b3N2ZEhMS0thZTRmL3p4eDJNT1Q0RURWaURHVFlpNTl0cHJwMHlaVW9Rd0RlbUlpR05TQWlKQkNTN0pqMkd4anRLR1Z1bFBxT1J5c1ppdU5hazVmTERk
/// UDJPNGNBYkpaZHJsQVlXRE5HenJHMis4OGRSVFR6MzAwRVAvOUtjL0laSmtKMkNoeGdFUmdFQWsrWU1YRUVtZFREVGc1cFpiYm5ubTQ3KzhoUThDSExDQ240aXdvclJCSlBxSU1zNWhGOTN5Q3FFWVZOVmQxS3JVSEQ3S3ZyVEpXSnpkbVZJamUwNDduaWd1TlNvN3QwcmF4ZXZsY1lqTGlEYXY2Sm43eWhNMUxkclllKys5UVFGUGFNdE80QU1zeENCb2dCZ0FTaGhLeWdKR09paHd4bzRkS3hjeERzZkgvUVozaGtJb0thb2JFQkZ4bkNIR3phaEJyQ0tObXBVYWpTOGtqaTlNV1pZQVlyR1BDdkY2WGFzS2pyeVNjMjdpanpURWdtdXV1UVlJL3ZDSFB4eDQ0SUZpRFlqa3g4TnVpaW5hN3JoRUorN0FoNXZ1UUltVTl1cXJyMWJaRnROcDhEcUl5RGtJb0lBSVdLUzZFVzV3Q1NU
/// VlBqSWl0WWlQZXU3WEtQTXd5eks2WFp1Ynpqb3Zpb2JGM3NtWTVmNWV6ODBKRXlhb1pzVWFuQUVIc0FJb0NBT1h3SWM3QkN5S1AxMUJKKzVVSTFLVERoMDYzSFBQUGJ5ZUQrTUREaU9UWk1TdzZLa1FJeW1CRWhrSjBPZ1RIV3BaYWhRZnhmWmlZaHZ1L3Z2dnp6Y2QrWjNPM1ZYSkQzWWVmUERCNmRPbnN6Z2ZsRGRsR1IvYXhxeTdxTUtsM3RNMEVNbWdRWU00ZnA5OTlvRURQSEhZWVljQlIvZ0REbUNGYUxqMFNFTm5QYkdPeG9BQkF4Q0p0RVB5RVlnNHc0Y0d4WVNWNUNWeVZTc0NsR1dDUldvT0h6eDk2NjIzOXVyVnEyZlBuaGRjY0lGNlFVNUFXbFpGL2RtdVhUc1pRNTgrZmY3NjE3OE9Iano0OXFxTStGakdqUnMzcmZyakRJNzVKT3VIVHVvdXFnS0ZTU1BJekprenUz
/// VHB3djM3N2JjZm5zaGZKd0FCTkxpSlZOd01VTUl4Qk9zNGc0aHdRNlZKa3lhbHJBM0pFWVNIdEtnRUgvUG56MGNlS1lNdE5sbExwcTVCcVRsOE1PVmRkOTFsTC9idTNidEhqeDZkT25VNjc3enpvRVMycUtDd2NYbWw4Qk8zUWN5RkYxN1l2My8vRzI2NDRhYWJibEtTcUN6dXVPTU9tU05xc1UzdFdrQXBTS0lNR283aHdpSWppWEFuNzhKYzY5YXRRd3pveEtReTB6QUhYdGwvLy8zaGd3NkJ5RUVISGFRUGNWK2Z0bTNiUWdtR2U3ajZyL2RqbEFSRTA1a0xOSjIxTVFvTUZZSEdmVGZOSGpWcVJHb09IeHc1ZCs3Y1J4OTlGRXF1di81NlFPbmJ0eTg2dWVpaWk5aTllZlBtTWtTdzRKVkREam5rNElNUDNtV1hYWDc3MjkrNkJLQTJiZHAwN2RyMXFxdXVBcFJodzRiQnl2RGh3
/// eVVXUnNQcXRtK1pOaEowa254RWNpZHRQaE8vNUszcUdqTkNDYXpnQ1hMQUFRY0FxRE0wUUVaUUVtVnkvM2UvKzkzdmYvOTdlS0xNMEtGRExlU0JCeDdBRnRZbEJTR1VjVVlrSUNMV3VJOU9pbnlad0hSZDYvT1dXc3cvSWphY1NISG5uWGVLR2tPR0RMbjIybXVSUlBmdTNTV0RPS05GaXhhcFBQbUduMEJranozMjJIUFBQZmxKNVFsSlYxeHhCYUFvTHZnWXRZd2VQZHB1NWd3Z0lHVllrQkNNYlUwMGNsTWZsMmhBV21wd2RCVk1RS2VHZVNFR0RpSXdzZGRlZXprRGtQdXdFbnBUOVFnNktKRG1zSTdiOG1jNE1pZWdrVmZCN2hQVnZ4RWZOV29VemxNRDE5UHQ4NVhheFFjLzJmRTIyWXdaTTI2ci9xbit6VGZmUEhEZ3dINzkraVUxT2Z2c3MvTmxQYUNnL2Z3clB4ejU2MS8v
/// bXFza2xXQjArZVdYZzBoK1NnZ2xzaFArc0hmcjVxaUdHRlFSVERnRENremtFY2w5UlNudkNod0VRd1FpM0c5R1FDRUZQcEROcnJ2dXV2UE9PNGZWM0FSWld1bnBYVy9oSWRyU0dkVzFiOS9lS2tESEt1aHZPYWd1ODlJcWpjOWRhaEVmUmJxQTdRbXl0YXNrRS9LK01XUEdDQmxJVzNKNjZhV1h5azdPT09NTUc1VFJtelZyeHZxMjc3Nzc3c3RWdi9yVnJ6akcxbS9WcXBWOE0vL2tCaTRSczJ6VHg2ci9Ka3daQ29zS0hYUW84aFY3M1N6d2dSSjIyMjAzTHNjVEJUNGdJL3dCRU83ckkxc0NDR0J5azBvWUpmMkZKRmd4bFB4RzVrU3g4ZVBISjZHT1B2aGpCVDQrVVFDaWNCdmZKSGNqVW4xT25USmxDbjVtVUVFSEgwQ0pRdWJpNmorekh6cmhtREE4bisyKysrNjJNcmR4bGMw
/// cTI4MXZUbkdKT3RabUZXNTRJamd3YnlZaTVpM25pYkpMb29ITXJyenlTbFBJT2ZCSGNoRVRxWFRnd0owVFR6d1IwMkE3c1VQMkl3aENocWZvZ2NpeWFldSs5Tm5zOGhzaFQxNENHWm1JRHFaMnJwMFFVNHY4c1dnYUgzdHhrbnBFdUJHdEowNmN5TXJDdWRSRXFpSGlLSHB4TlRxUkdCNTMzSEgyTitFODRjWjJoeGhGTWlSQmljcElLcENmclNkN0JiN01VbllNM0VCbkFkYUNTOHlPa3hBSlNnQVJjQkV2T0Y2cWhPY29pV2tvazBpRUp3U1JidDI2QVkxRTFic2dUbmw5VEZxZ241aU9sQldvQmFuZC9HT3hBam9LUW02WVBuMDZRMCtlUEZuaXljMnlWNnlBSHBRNUxWdTJWTXZZeWxMSWJHNE1uK3dWU2pwMjdKaWZFdktaaE5kdUhsbVYvUHRCbWFXQVFzU2twUERjSzlWLzNS
/// WmpuWHZ1dVdLRUlvWHY1Wmo1RlJuOG1SbzRCRHVheUg3QUF1ZWhDcGdRSWtHRS9pb1hzd0JFeHF4WldXYndVWmlTbnhDeUhETS93OEhrU2d3TzVtbFJnOHRsRy9uSVJGZzU0b2dqYkhFUXdTSWdraXdTd1lBUnlza2ZUY2xMSkRSd0ZzN242WUx3N1cvVEZhRW5VWWJZK2tBZy8xVjRpM1N6WnMwU3Fnd2l3TGt2K3B4Kyt1bURxLytlR0V6UThKRkhIcUdrdGhDWlNydldlT0tUWkpuQlIzbERFNXR2WWZWUERSNnYvcnMvOWlVQ2dKSmh3NGJ4TjdiSEVQeW4xajMyMkdNUmlWeFZRU0dMM0hISEhaMEZoZWJObTRNUmlNaHp1VmtxQTE3NTYrMlpNMmZtNDlSNFViQ3ozWFBIZEx5T0dFUU5xWXhJd2QvdW9CUDVoN2ltYmpJN3prQnZjbXJnZ0RraWlnbU9CZkpJRFVhVFJXV1p3
/// Y2VpcG5TSGlaOTc3amxFQWlMMzNuc3ZBcENVOExFaUJaSHdmZHUyYlNVSCtiV1k0Q0loSUxoRWRZTkxFRW1IRGgxMFF6bEVIaVBuaGJCOFNwRW9BSVYxODFYcEJBSUFUaDZqa3RKQlFBRkhWUktpTXBGQllKUWFxRUtlQkJiWFhYZWRnc3NnNEZWT2dlRjdSWHhaeWdJUVRNeXM1UXhmWmlBaFFQajhZYlBhMEFpQWszaWE1NFFQQ1FjaWtTZXFOc1VhR1FrdWtZdEFpYk5ZZ0VqVW1WeXJzNjJmU2hoS1JCdzBBQ0taaFpnYTRIU1EvVUNHaE5TTHlBaytwQjF3ZWV1dHQ4S0VjQU9zTHJFYWRvR01jaDY2Yk1teWxIOHNsa0tjUGVKRjZhSFVZZXJVcWRqZURrN2VlczAxMTNDNTdTNlJ6QzhJMFlaMFJGMnFzZXV1dS83WGYvMFh4SEN3RHVkWC93VWlLQkU0MUxHMnZ1TG85dHR2
/// TjJhK2VqVytWQlJqYVVnOHBSb0hIWFNRSUFWTXNoQndFWmlrbnhxQUJiSndEQmtGT09oWlJqWlpkRVcxSnNzU2Y5UVR4aTBZVzBQeStOSkxMOGtUYmU1OG1DWWpzYUhsaVp6TjY3YSt0QkVVRkJjd3NlKysrNElJRm9FU0JUQnFFVzd5NWJBQ0I2VHdoSXhFcUpLYXlDNWxIbUJoY01OS2ZnV3NzODgrdTIvZnZvSVJPS0l1eUJCV0NBQ0Y1RkJPMUNzU1d6b1htTkNuMXI2TlcxU1dQWHpFeENTWDVSQ3ViYVBQcmY2SG94d0dJbUtOSGErMFVRQ3JmdlBkalgwUERSS1JKSzBnNHZ6TFgvNFNZdVFXMGdpRmEvdjI3ZVVsaU1TTEVnamdtRDkvdmpMRUhhOExTY3BqWVFoTFlSZjNrUmJjakJzM0xqcEVuMEpKb2gzK0FBdFNWcnVXWlJubWo4VktGVGtWc1lrNVZSR0I2aE5yaWc5
/// YmhSS2xyOHhEbE1tbkl4SVJGTEw3N3JzRGlqVFdVeENSdUNoU29FVFVBQTQ4a1k5b1FRZEtwRGhTamZ4eklMSU5qRlgrV3FmQlNJUEZCMHBISkNraUFoR3hSajRoSW5BNTk1OTY2cW41TUI2TG9KRGYvT1kzZSt5eGgzUkVhUU11VFpvMGFkR2loZHdDZVFneFVoT2RUenZ0dE42OWV5TWtXVERhQUQ0c3BYb3FhcHg2UlhnRGtJYUdEeEo4YUFqL3lnZlZoQzB1TFpBMjJ2VDVwRlcxQWlMRjl6WFNFY3dCRmdTTDdMTExMcElTMUNMSmtOV3FmVTQ1NVpRMmJkb29nSUZNdGlHZ3lEYnl1OGJhK2EzRy80VTBRSHdVQWlVMjlKdHZ2dm55eXkrbjVzUWk2aEdsTDRqa2szaU9sN0VxZlpPdVJ0REp6anZ2TENPQkZaZTRSRStsRUpCQkJrTENITk9tVFFPK1RDU2ZRRmZPdVd4STBt
/// RHhFUXFKeUFvbEVLcVBmRUF5WnN5WW9VT0g5dS9mWHk2U2owWkFCRldBZ3ZnQ0V3azBBY2ZCQngrc3FGSElTSFhCQWo2a05TSVhRSlNqU1pXektsSjMzVkJrbWNmSFovU0t6UzBRUUlsS2xhZVRpNmg3bFNHdFdyVUNrZU9QUDE2NmlqbjIybXN2VVVZV0FpTHdnV0NBNCtHSEg0WU1TYWlZb29xdUc3UmFNUzBybGNqL1Rob0lQa2pkOVNKUzc1RmlSSmhBSWVvUmdRWkVVdEhrUjF4eUVRSWl2L2pGTDJTc3NwTVJJMFpJYjZGS2VKb3paMDd4aVVzNW1pQ1NkejcrTzVvR0pnMGZINFVVM1Y1NTVSWFZSNHJlZ1FNSEtra3V2UEJDR2NhSjFiK0cybi8vL1dVZU8rMjBVOU9tVGRYRHFoVlJTYlZjL2xLM2lDejE1cTEzMlFDa0llZW5pNVY4Wk1tUnp6Ly92RnhrMkxCaFYxOTk5
/// WUFCQTFRMCtXdjl3dzgvWFAyeTk5NTdkK3pZOFk0NzdwZzBhZEpUVHoxVmZOQ0pQd29LV1I1a3VjTkhCRDVVditxYXh4NTdiTlNvVVZkZGRaVkVwRzNidG9yZTQ0NDdicmZkZGp2aGhCTXdoMVMweHY5KzZmOWFsbE44RklJTWxMN2p4NCsvL3Zyck8zZnUzS0pGaS93dVVHUjV0dnJ2ZHRUMWE0aXg0N1BJY29lUFJUL2lkR2Zod29VMzNYUlR2Mzc5bWpkdmZ0QkJCeWxuaGc4Zlh2NGFSWkZTNEVPNzlyOVhXMXF5L09JRGM1U3hvdlFWVUNRZlRabzBVY2ZtWm43VXMzd3lSMlE1alMvMXdJRVNKQm12dnZycWhBa1R4bzBibHd5MCtGSytFUGNiOXFjZGk4cnltNThHQkpGeWVWSzBOY3BvOE9pOXFpeFhkTExjNGFPQUJUZWprTUxaN2hjLzlKSjU1T092TW9iS3N2eEFaRG5s
/// anhYeUdXVUZQbGJJa21RRlBsYklrbVFGUGxiSWttUUZQbGJJa21RRlBsYklrbVFGUGxiSWttUUZQbGJJa3FTQ2o5ZGZyL3ZseXp2djFQMG1xdm9MbUxxUGhqNzQ0S1AzM2l0L2pGajMwVkQ1STZLOHVHaTMxK3IrajV6S1A3UlM5K25UaHgrOS85NUg3N3o5d1FmdmYvVGV1NVhMdkZYOUFxelNzOUpuY1VLbHVwYUozcTBNVW5uMzQzdHZ2ZlgzTDh3bzdLRGVVamtpaFlreU1pbnNrNzkxeWlyS0ZsaXN4Q3dmNnZYaFIyKy85YjV6SkM4V3RpVmxIY29IZWZQTmlpVzFZM2FhNUQ0cEZIQW5HdWFSTmlYTDR4T2QyYTE0NVkwM0tqOWorT0REZnpqcStLT3dyMFpoQ3k1WnNPQlZ4NXc1YysrK2UrSmxsL1Z0M2JyTkpaZjBHalRvK3Z2dmYyRHUzQmRmZmZYMTExNTd3OFFrNThq
/// OCtaVi9xdEdMenRXZlhWV2VmZmpoaDYrOStoWmtWSXhDKzNjKzl2RjdIMlRHZDk5OSs3WFgvdjdIOG92S3dvV3Y1ZlhZdHpnczNzcXpCQ2FMK1phV1pCV1JsMTZhbjBiaGo3S1VleTRxZFZiOThLT0ZDOTZJMm5hSTgrdXYxV2tiNStsbThMSXhGeFVydGNheXMvWG5yTnlKSFFxSGtySkI5T0UxamNMTEJaSWlWZFgrZmxUd2tiRXNQbSsrOHNwQ0RqN3BwSlAvOHo5M1duZmQ5Yi8rOWRYWFhudmRkZFpaYi8zMU45eDg4MGFiYmJiRldtdXRzK3FxcTYyKytwcXJyYmJHZXV0dDhLLy8rbTlISG5uVXJGbXpIMzEwUnJFd3VIR2VPM2R1OWFweTkrbW5uejZ2M1FVWFhkaWxlN2RlbDE1eWViZXVsL2JvM3J2THhUMjZkKzk1MFVXZHEzOG1yOXNuR3ViRkYxOXEwNlpkeHdzNmQr
/// M1MwN2xuajk2ZEx1cldyZXNsTHErNDRxcTZUaDk5TkhyMDJQUFA3OUNsUzdmT25ic3NsZVBpaTd0MjdkcTlUNS9MTS80TEw4eWpiYnQyNS9mb2NVbkhqaGZwb04ydFd3OHp1b1RnZFBza2VXbmVnclp0MmxQNzRzN2R1M2E1eENyb3p3TGU3ZFdyVDEybnl2ODI5THBaRm51Y2UyN2JiSFRDMnZVMkE3TS85ZFRUQXdaYzJiZHYvL2J0THpDc2cvNXNZaGJiMitXMTExN1hvc1daVTZZOGFCeWJjK2pRRzQxcENUMTdYcXJuaFJkMUtSOFZmTlFSUzlVMXQ5MDJZdHR0djdIQkJodHR1dW5tY09BQWlNYU50M2E1MFVhYmFFT01tOXE2T1RiY2NPTTExMXdiZXNCbHUrMjIvL09mVHcrdkZLSHFyY3EvelBUK2l5KytPSGp3NEZWWFdXUE5OZFpkZmJWMVZsMWx6VFhYV0crZHRUZGMr
/// YXRmQnp1djMzZmZmUlVWUHFoN2ExRVpNMmFjaWRaZFo4UDExOXQ0bGErdDdtd1FsMS8rMHRkKytNTWZtODQrc0pEamp6OXhwWlcrdlBMS3E4RDBVamxzaVM5ODRWOHNQSnZuOXR0SGZ2V3JYek1GTzFpeTVYL2xLeXZiSjJ1c3NkWW1tMncyWThaajBYWlJzWEZwT0g3YzNWLzU4aXBycjdVK3RkbGhyVFhYMjJqRHpieit4Uyt1dE9XV1c4MmI5M0o2UHZ6d3RCaC8wWU90bm4vK0JXeFJlTzNsbDE4eHNqdWNmZSs5OSsrd3d3OHA3T0FkdTVlR3hyZWYyWm5POVB6YTExYUZrb0pnbWpjL3cvMHN4MXJXWEd1OTh2R0ZRQjVubU84NzMvbWVFYi94alc5dXZQR21MRUpqQjJTWUF5QTAzTng2NjIzZFpBc1ljbk9MTGJiY2FxdHRBQ2dZc2dDYUhYWFVIK0hhVnZ2NCs4L0tlZXpZ
/// c2ZDeHhlWmJiYkg1MXB0czNHakREVFpydE1VMjNHeEF5ajMvL1BOTHhzY3p6L3pOMmpiY1lOTkdXMnk5d2ZxYmJObG9tNDAyM0Z3YlJINzBvNS9VZGZyb0l6dUREc2FrNnRJNnJQUW5QL2taSDVENzdwdkMwQ3pBSnF6MHpXOStHNEFhTldyc0p0TUZRMHVRcDJZOSs3V1ZWOXVxOFhhV3NQbG1XMjJ5OFJhYmJicWxFWXhtZDJVS01udjJNMjR1OXJCSm1JS3owaGttaXJjNmRPaUk3TG1EZWthRENXMUtSay9lY1FrRVE0WU1GVkJDOEZCMSt1bk5iUVBMOU5ZMjIyeTMyZWFOeTBkZC92SEVFN01zenhEZi9lNzN2L1NscitqSFowREEvVUdBK1ZnaEtNdE1SclNxSEVDOXlpcGYxd0ZtVGFQUDk3NjNBNGhJUHQ2cFNPVmZWaGt4WWdUVE5ONXkyOFpiYmdjWnJMUE4xdC9jZEpO
/// R2h1TFI0R01KK1lldFNURm9ZRndnMjN5enhodHZ0SVhOdC9WVzN6QlhFVmJQUHJ1VmhSUjIrZWNQNEdBQm9aWXAyWFRpeE1rOGxPV3pUL2FNUzF2Rk5uMzIyZWVpN2FJU2Z6ejV4Tk9ZZ3hFc25CMkFReU5ianVuc2FRZTdpZFJHWHV4aGRYLzdXOTIvby9mY2M0eFdrVWNlZVhTbm5YWm1meDBZLzl2Zi9pNTk3Rml1Y2NmWlRXdUJBOHhVNENuU3R1MTVIbG1GbFdwc3NtbWo4bEhoRHl1SE5WcnlrelU3MHpWODRCMEtPWWMvNEZmRFlTQ1hPWmhQNSsyMy8xWVl6THR1WW5nOGxtL0pxNFhKUjhPSEQ4Y2ZQTHJldWh0dnNQNm1LQVNSckxmdVJvRlg5WS9mbDVSL1RKczJuV05zdU8yMi9kWTJXMjl2SENEYmVLUE5BZVVIUC9nUm5rb2UzckxsT1dqR0VpeDRxUnpXenF3Lys5
/// blBrLzFKelAvbFg3NFVDRHF5aXpnbW5TVkpWV1UvVVdZOStZejRnandzSFAraFQ0eG9CS1pqLzB4QmJOY3laNVFQNW5yNjZjcS94b2tEc0w3R0xiY00vOVd2ZHFVSnY3QWtYMUNZZzR4cG4wZFBObUdsK0xvNlEwVzAyVTFTNGtXejE4RjlVZjZRV3lXSDRPa2dBOXdnMmd2V2JIUm5GbUdGSC8vNHAxVEJKUnpnanZ2MG9IRWF0S0dUU3gxQ0lUdnV1S1B4RlNiT045OThzM0RMbyt5eVpTTWJhRXRuL3FhVGllYk1tZlBXVzNiWUorTGpnUWNlWWdLV3paNWJZL1YxdHQ1cWUwVEN2aEprSFJqWElRR2lXTUM5Vkk3c2hQLzRqeDBsQnd6NjRJTlQyZHI0ek1VeUZxdXRqMHZkTUgrMFhhemdCdmhZWiswTnFrRVdCVzdGR2l6QXNDd2dCQ1NsSUk4Ly9tU2hRTDNEUk1ySm91SlFT
/// L0t1bE1pamJGVEtPTk9OQjNXR2I4UjJ4QkZOaFB1OFFvMjhIamllZWViWnZPOFZPbmkzUG45WXRtZmlsZ2tTUktBUFNqZzdJU1A1em1tbi9lWEpKNTlpSUlNcTVKaEpCNnpqWGFCMjVoVVQwTWxoS0dwVldXZWp4eDZUc2xXOGZzTU5OMGhPcXg3ZEREaEVoeGhJWjJvOVUvbS8vdklSeU9JRjVWYVUzS1JSNVpWTkdxRU40OENLTGZodi8vYnZJUS8yaFEvUXBBelRjQ1JJZ2JJRzRGb09sZHd4RHI5cVc2L1pyWkdKcVczaE1aTkhiaG9CN2kzVDh2ZmVlNThrajlMa0xNMkxGazV6ZmJ5U2crZXF5bjZpekp6eEpHVFQzN0hacG8ycjV5Mk40R0R6SXFsLzdMRW5qTC9ZZzdQamFYMmtscFlXeTRlQmpBTWxGTE5xKzlNU0xGYnhFcVlwcE1oYW5GdTFhbTA1M21JRUw5YkhoNUpH
/// OGl6dFlDQmpGVlRqSFJoMDZhYlNLMWdUUkxNR0dGUkhnWTZlekVkRkZtZDZTQXkxVUxmcW9UVUdEaHk0WUVIbFk0TlJvMGJ4Sll1c3YxNGxOUXMraEFsci9sL2dnMW1ERDVjb3pZSlQ2VEVFSERzcjE5MlI2a016WGxXeDJ6VDRQOFlkTldvMHh3Y2xWT1ViaG1aUWlLY1BhMUErV09lUC9mYmJQNUVlL3FaUG53bG5yS25iMHNLSG9UNDdQbGlZRjRRNXhyY1RUQ3F5V3dpdmVlU09kWEdFbTg2ZXFscEZxd3hyL0JRTVlGSGdRMFJlRWo0ay8wYTNkVHpMQm5KNHdVME5kL2liTmhuZE9VQWhYREpyMXV6RER2dEQwNmJIL2ZHUHh4eDY2T0dPSmsyT1B2bmtVMDBKbGFlY1V2bUwxakZqeHJ6OWR1V2ptTnR2djUxcGhBUElFQnFXRmo2K3Z1cWFra2NkQ3NvdEpDYkl4MWJzUXZN
/// c1FSU2daRkt1TE5iYU5SaVhNckdETXdvQmptT09PVGJ4UGpKeTVCM1F6NTNwK2Y4ZkgvU1VTY0EwOTlPZjhoclVDRVM0V1p2bWxOUVlQSGhJTVNidUx5Y2ZueFVmQng1NHNGbU5uZ2xNYno2OWJSMnZxWFhkMXhibkRHZEhoc21MendydFN4cVkySmJOSTJKV053UFY2c2ZxQ3RjUGhnMGJ0dnBxYTFkRDc5YU9BaC9NK3MvZ3d3SGl3R0U2YXRqaTFIQVpIT001NTZLR2QzNzk5VGQvL3ZQL0J3R1daa0NZRUo2Y0xkYnlyUlJ1eEIzRyt2S1h2M3JDQ1NlbDdpQnBTSVB5MFFLamZTNzRRR3gyTEQxTlRXME5Dd0VYeXZBZHRaTVlHREM3T2pnd2N2aTFrTStLRDRTNTBrcGZsdUo1REhjTXA2RTNzaEpmYUdPK3pLMGUyWDMzWDk5NjYyMHpaejcrOHN1dkdGMGFWZEJKaEhzNElN
/// Z2c2cGZxUnlDVnZ4NjQ5ZFpiSmUzS1ViQllaKzBObHhZK3R0M21tL1pUQWMyaVFkSXVhNmorQkhmbXN6cHJWSld3TEhObnBjSktHQlJRM1B6TFgxb0VXQkg0TUNCekpRWTVQaGQ4eEIwOFJVOHBMZGQrNVNzcmYrYzczL3ZXdDc2anNQTElFdUJiWU0zZU1DWUxsTTFpRi9ISlo4V0hUdnZ2ZjZBOVlhazY2Y3BZMkNrSWplRWdnOGtzZ0FrWWprTHUyMTc2Ly9LWHYxSkFZNWRKays2MXF2SUhSSFQ2K0d1NXluK2dNWExrU1B4UkNTaWJiS21FV1ZyeHBkN25ZNUg0ZGU3Y0YvTk5FQkVLMllzSnJJdnlJS1Z0TGF6SnN1NEkyTmwyRHVVQWNPVEZXTGI0dG1MMDZMRTZlSXZhbndzK3pDaFY0cFI0Q2pMTUM3SVFEeFk4b3RReVR0aXVqTzhJWnMwc254VWZlaytiTmgwZTdTU2RU
/// S250QlpPWmtqWGQxSVlZMXFTS3AvcTRYSG5sVlFJYWNMRXByVkJnZ200QmUvejR1djhINmVPL0Q2akVGL2pJUjh0Z29iSmRXdmlRODRvWE5nVCtyRWVoRVpheVk3alpIckJHUytCZERTYUdDUXRrRkVRZE55ZThLdFppeEJCaHlESkFlZmpoYWNheFRHcC9MdmdJSUhpRThpelBKdC8rOW5mNWlNdTR3OUpRZU5RdU1FM2NvVDgwT09mcC80QS9ERFJqeG1Qc0FwZ1d6Tm1KWlBRUTI1eFpNOWcwVUxTMEdBZkVaRWZxNEsxZ0M1Ynh6YzQ3N3pKczJFMFZGYXJvd0NMNUFxVlM3bThoK1FoL05QNUhmRkQzSDZKVldSYUhqMDJkdlN1QnFPdFVOVVJ5RVZpSkljaGRkOTBUdFIxY2E2V0JoWU5CTGRaOStqc0R6VmxudGN5TDhWYXlGbmR5S2Fpemt0ZDEvcWZ4VWZrZ3grdUcrdXo0
/// TUR1RjExTENyN2ZCTmx0dlQ0ZUtUVGJldFBHVzIxb0MyMVkrWGExK0E1eHZoZ05yNXpTS081OFZINGxTM3BGeURoaHdKWmN6bjdtZHZlT01mcE9MdU9SK3BqR2NzejRzUWxjbWhoNmp3eTlGZFhNem02eHYzLzRWTGFwZkRuTVNCME9TYmtiZ1pqMU5CNElHVjVUU3RWaERJVzVtSlE4OTlMQjN2Y2lVeHRjd1BoME04dU1mL3pRZXhSUGxLc2FsMEF1bTRyU3R4Z0hzeTRoZWRMWTArbXM0Tk9odi9Bc3Y3T1JGYnlWcllaejRMSXJaU1BDUm5VTUJBMmJWekJyRlV1bFEyT3RSS2UyTTVvNzBSV2N2Y3JQK3BxYS8wUnhzR0dRVEZXa1pFK1ZqZy9VMzJmNGIzN0c3N0RRRUxLWGJkcHR2VmRIVzJQMnZyN29Xd3o0OWUwNStPMUg1T1VSVjZKK1JTWGdsVm5YK2xNOC9LcjJxWVVt
/// c1NyZ1NIWDc5Njk5YVF3SU5UMGN6TC9PSHcwcDRDQlJ5WDRObFl5bEdENlFLMzk5MjJ3aGpNcERJWGVHUHFpMjhFc3hwR0ZCaVZkU1FldkpyZWZkYmcwdEIwTWgwQUUxejJlaGVwNFpHK0FPdnBqK2dGeWpwMWF1UHpoQWNJb3lTb29sM29jUWRBN3JwcWZQbGwvY3p0YmZvd0tERmJpN0UvWWtUSjJOSDY3WHdiQlZ1ZG5qZEhaR28zbHRCUmlGUW5sUlBad0dDaGYrbitKQ1ByNzNXQmxzMS9vWWNicE9ORzRISXlsOWRyZEVXMnlnSnRYT3NzZnE2TDh5ZC8rckN0eXEvNENoWmhpUWhjNmZBeDZmbkgvcGxmNVRYSnRWSDZSTW0zSDNaWlgzWjFHSysrTVdWTEVQNE1JcmtnNDBzeVFvWmwrZk1FWDl6R01PRnhpVjZ1KzY2ZTJ4MDQ0MDNoeHYxMUFIK05JRER5TjVDNDdyUnZv
/// QUZvVlhoYVlXbGpGaFBMOFlsakpYekRqdjhNS3UxN0NKQjVpb3J0MEVwSEVpRjUraWdXSFBURXZCS0ZBYmxLNis4T25NbG9KQU1SWWVrTlprQ2YzaVJEa3poWFFxd2hvVWIzOGhGZkVFOFpZZ2JCUEpjdnZEQ1BHWmhUNTJMOU81L2hBOUJXVW91am15MzdiZldYR05kWVdXSDcvL1lIUTI1M1phTnRzRWxMbGY3K2xvdnZqRC93MnFkUXBrb2IzQlRwRjJjUDFOOHdSekZZcXdrY0NHQm0wZjVabElVWUtEKy9hL1lZNC9meE5PcnJiYUdRVUhFMlFUc0JURlc2NUU3VU1LYWpFS1BXMjRaeml0TTZhaytuaktRYytJWC9vakdSS05zWDVjY2IycjFCZU5haVZtZ3luVGdSUUgxRjg3TVFxTDV2SGt2SDMzMG4vQ0U0L3ZmLzBFaXlQZSt0d09JZUFVYXFFRUhMdEhtclpCY1dZeFRi
/// K3RuODl4enp5VDd4TnJwRUtBYjNLWHhqV3plcUJHeEJFZXhMcUtNOHJxcFl6MElZd0h2T3RqUXBGbnlFcjUvZ1lOVlYxbERjRmxuN1EwRWwrOTk5NGRmVzNtMXJiZjZSdlVIQTVWOERtNmdSQWZWNHF3bksxbGRKRmsyQ1VkR0srZFB3UWVkWkRSZ1pkOUFnOE8rc2FwOFBtMHNuc3VXMHRPZHlxaFZZUzhGNVBYWDM3RGpqci80MHBlK1lrdXhOUnRwc0xnRld6emI4VjgrbkFhc2ZETHR3RDE2TWhNM0IyVFplV0JhajU4anBsWTRlREZqd3BNcEN1UEtQOUl0NzFyQ1B2dnNaMHlQS0pQcDlJeEx3REhBVWdpSUZCUkl0V1VLUjNXWVNvU0tFWjM1MjVrZG5WbkpLbUFPN29NTVM4QUVKdEpRUitTWE94bWtMRVlPR3ozMTFOTllFTXAxTmtnWXlPc2NUeFBkNHJZbDVLZUk0ZXFy
/// QnY3bTEzdERRTDZlZEVZWUdsczEzZzZqZkhQNzcwcUJ3UVhINEJKVVZLaGs5alJzcDgrS0R6M2NCVjRIUlMzYkpxTzAzWmJDMVVyd2NQbWJ5YmloMkNqbm50dlcybGpmYWgzVzRCd2NNQVRmeko3OURNdmFPdkdaS1Noa1VnMzdXTnNySTBmZVVSQll4R1hoTUhMNjZjMERLVytKQ0FZM2xOYzFhS2hES241Ni91WTNlMXFDKzNxYVhUYzg0UlhzRmRhaEZYREF0RDZxS20vaHA4eU9NOHFURnBHN1FHMEtQVHZCT0l3RHBzN0dZVEhUZGUzYVBkMk14ajU1aTRXenIyeXpnUU1IV2JqMVdndVY2Ty9GR0kxdVp2OVVmS2g2bnA4emIrR0NOMXExYkZPcFl0YmR5QjNNZ1U1K3NNTlBYQUlIWk1BS0pLRVFnMU9tQ0xzYWhWWTVmd28rZ0V0K1owY21ETE0xYStycWlDZmd4aGI1d1E5
/// K3BLY2o0MFpNekw1NzdyazNXM01EaUhqRlpONmlsa3RiQkNiRUpzWnlabG4zWTBvRzRqd0w5aUplUVVLREJ3OHhwdkVOVzRSSmdteHZ1dWtXcWl0L25JM3BGVURKem1QVzR2TXg5Tk91M2ZuSkg1aytjem1vNU5KQ3NrYlE5eUpsZVBkblAvdTU4UFQ3M3grUUEvRzRQT0NBZzNiYmJROHhWSkRhZSs5OTl0dHYveVpOamhZbExaL252T1ZkK21lTkxCc3l5OGgzM25rWGpCYldMd1RzZXZhODFFNFRjQ212ZitET0F0ck9IaFg0bURuejhhQmgwY09NRE1KRWp0YXQyMWlJUlZFQVV6STEzN2xqS0E1bEJNekthTEpBWSthM0tkNktGQnArQ2o1MEdqSmtxRG5ZMFRURzFWVS83ekJvZG9sTG11a3phdFJvd1FnQWVVTFU2TktsbTdlb1JibDR3bExqUXUxWTBOTXdEZnRHQ2VQb0R5
/// TEcxQ2YyNVZTZHpmWHYvLzZmNTUzWGZ2TGsrKzY5OS83dTNYdHltS2NHQ1Y3VHg4cTk1VkliSzdScDA0NzFNd3VhNGJ6c1MwdmdBTzJzM0RqdVpJMm1EczUwcG84QjlSYzQ2T05tQXFXR094NXBpMG9wQzBWeFJxY0dQeG5jVTF4bE5QbzRETVVmcHJPS2M4NDVWMGt2TEY1eVNhKzk5dnFkVjZ4YTV5QTcraHZadXg0NWN5cm5mU28rT0R0bFpzNm1NS2x4REdLbGhzMG0xRE1ydGN3OFRRWko3TDBpa0gwNlBwSjVNTFN4QU1KWk9XQ1JSdGZiZmE5bDhVWko2QVhTSU1CVFJ0VE5VNWM1WWxsV2lPa1BQZlJ3ZWxpNXpkZTA2WEZlNFd6OXZXVkEvZU5taHJha3pPaEZqT1h3dWo0VWlBN2NwcitwM2RTWnVUTWF6Zzg0a0dkK0VoRWZMSldEWlEzNDA1LytLMU5hQmE4TUdIQWxL
/// M2xrbWJFcHg5QkhHMmlvNUJWbnlqT1hnOXJhYmpKdk1HcXhMbU1sVDczdWZORkZuU3NlcThyMDZUUExPdFE3RXE5MXkxbG5OZys1R3A4bStoZ3oyOGwwa0dkOHErQm9YdkJLem5tOWJkdnpxRWNaV2pIeXBwdjl3MUgzK1FjS0VTTnd0V2xNSU1wWW1BV2J4cHE5Yk1GZXRrSnREVWVzVUZ4eW0wdjd3MWFqbVNucFNxMnBVeC9KRk1RV1ZQM3pxLzdtc2g2dlo4MW15VnZPdWUvUVlFR0gvZ0dsU2FFbmt6b0hZVEtidWdtcXlWQjhsbUgvK1lOeFdWWkpMQm5QRkNKSVpxY01sYWpIVmpUUmR0T2xKWlJYRWR5RFZOb09sbkZrZkx2UnUrZ3oyenI4cjFnckZLaDNtS3ZRQkpHSDFaRDZUanZ0YkpaNFJCOVdvZ09YczRhM2FNVTEybGhFNVpGWkVzN3duSVZ3aHo1NjFzZUhDZktU
/// R1pHVk8rbHRJTlB3b3BrNGpQWm1BaFNqWjJKUEE4eE1yNXRMYVRrWHhsZ1NBaTh5Ni9EaHR4czVtYVBGVTBpRUFoRWoyUGRCZ3htTmtEVzR6M3hHTTZ4RHd5TU45MWRhNmN0NlpzMG1vby9YUFpXYVZOWmF6U1Z0aTlOTys0c083c2NULy94aE5HYlplZWRkeEZQa1lRbm1ldUNCaDZRUjBTZTJnaGpycFhDTUV3V0toYmpNaG1ZMGg4NFoyWDBia2luRUlNTW1jd1FVaUM4VXFIZEkrT2ZObTdkZ3dZTHFGNStZNE8zWFgzLzlyYmZlY2o3NjZLUFhYbnR0V3dyRE93dGd6QW8wSEdyN09kT0gya3JGNElOd1NuNXhweHM5SzN1dlhueXA2MWpOcmdYWEk0ODh5bGlDWEhCQUlZTmFrcGV0aWlFTVpKMzZ1TlIyem1xLy8vMGZXTEJYNUdnUTROR0VDWGRuWkRhRldZMkV6TEZqeDl0
/// cTdBVVRodEx3SXUwTlVneGJIQlZFVjNYQThCcDJvZjZRRkxiREZxSEtqRXpnSTBNeC9WSTVMQncra2dMSHJEbURQZ1dzbERLcUlRdlhPUXpub0VBc0UvMkw1V2pUSHlkcHMzQzZuWHJxYVFZc2ZveXUySkdCbG5Vb0gydXRKVXhVUHNuSVA2K29SaXIvSTJsZHUzWUZ4alhYeFAwYjZkbTRjV1hMbVlKSzBHeHFEV2dRb1lKRmN0WlpMVm5NeUJaUzZiREpGdVdqZ2c4Z0tpcGo1cDQyYlhxZlBwZm5jd0tWQlhSYlpMWkl0bXpjNXFuSk5Cd2E5Z0dmYWVnbUNVaGxtTjJXYy9HVElybkNsQ2tQbm5UU3liR3ZLcHFaYUc4Yzd2ZDZqaGpVVFdlWGdBK21lbXBRdyt0U3YwUlFKSm5WT3FzNEJPUENULy84WVdxT2hINzZNNVJaTEMyTmVmTmVsa3JySUVkbVlqQ0txbkdrUnRGMm4x
/// YzBMRWRQWEJoZ0tmMEsvZ3ZMT2h0Y0JWUlBqZUpZZDkxMWkzK2VsWWdRS0NSY0V1blRwdzhXZ1krZGR0cHA5ZFVyeVRLdjR6WU81U00ydENlWkVVVlppSDE3NXBsbnUwTXhqMnpValRiZXZIeFVQdjhvSk9hT3JaVkREajdvM2Z1eTMvMXUzNnpRMnB3ZFptSVVzNFpqclB5WVk0NmRPSEh5STQ4OCt2enpsWCtUMmxDQlJTVDVJNFhTaUNDNisrOS9vRisvQWN6RTVZYWxxREVkeFJRYUhsSGRJdUVKUFNodHdGOE1MbXR1VCtjUzBLbng2S016SksxTDVaQS8zWGZmRkh2RzRCWVZMMGJnWS83OEJVajNubnNtMlZHSEgzNEVQYmtReWlrZlEwa3NIQm8yQU9zQnQ0UkR3YVh1WUtoaUV4Y2ZiZ1o1S0tTZUdzVlIvYjEzSmF5OCsrNjdyRmw5cVU1d2lTamp2SERod3FsVHAwNmNP
/// TEg2LzNnK1JFOGI4cUdISHVZZHBtTkFDb05ncUJkUUxCQmp5WE10Yy9xTUo4cEg1Zk4xYStiTFl1VmxFeEIycDdTVjZPa3dyamtrVUVhVTdDQjJqNHFOVmZpSkpLMUpBcVZEOFNGczVWbFZ2QmdNZWN2SU5xakJuM2hpbHBFWmdxNE9XWkhreXdyNXh2aEJjRmxpWXZlTGtTbGc1YzVMNVNna1lTVjNhRkxQU29RT0Z1cytoUzNCb1V5MXdhekNvbmlvQUVIV0cvY1lzUGp4Yy9WaG5SUUtMSEpVTkFBTzV6ZmZmRk5Eb0xFWGM0ZHdSaUtPbmtsM3kzK1ZROFBNbStXVXBRcTU5Ly9oNy9jLy9PaS9BU3lobE85UG9sY1pBQUFBQUVsRlRrU3VRbUNDIIkDAACJUE5HDQoaCgAAAA1JSERSAAAAQAAAACgIBgAAAE7O/OkAAAABc1JHQgCuzhzpAAAABGdBTUEAALGPC/xhBQAAAAlw
/// SFlzAAAOvAAADrwBlbxySQAAAx5JREFUaEPlmr1LslEYxs0KKTALoakPECFIDLKhxSUIHfpcLBqCCkqQBBdBcy0IGhpcbPEPcHGSgtD2tCAXpcA+KFqDiAqS++V+vNPn0YO8nt7U9/iDazpXeJ2r5xyfzkkFnOTzefj6+moq8cBdwO7uLoyPjzeVJicnweFwwOHhIVxfX1PS6nAXsLGxASqVqmnV09MDTqcTHh8fKTEb7gK2traYH9xsMhgMcHZ2RqkrEb4AlE6ng0QiQcmVCFHAyMiItPYXFxfBbDaDRqOp8AwODsLd3R2lLyFEAX6/n1IBfHx8QCwWg7GxsQrfysoKuUoIUYDX66VUJZ6enmBiYkLh6+zshPPzc3IUELYAJJlMglarVXi3t7dptIDQBSD42Mu9JpMJPj8/abQFCohEItDe3l704hMh3wyFLyCdTiuWgVqthqurKxptgQKy2Sz09vYWvS1XAL4A4e7/7e3u7oabmxsa
/// bYECAoEAtLW1Fb1GoxHe3t5oVPACnp+fYWhoSOFdW1uj0QLCFvD+/i69Gst9uP7j8Tg5CghRwM7ODqUqcHl5CTabTZqw3DczMyMd5MgRooDp6WkIBoPSerfb7dJGV+7p7++XvhHKEaIA3OTKf9ty4eHIyckJJVciRAHVhAci5etejrAF4NtfyxyJdXR0SI/5wMAATE1Nwd7eHmQyGUpaHSEKWF5ehtvbW3h5eaF0fw93AZubm8wwjRA+6rxwF+B2u5lhGiGPx0Opaoe7gKOjI2aYRgiz8MJdwMPDA+j1emageqqvrw/u7+8pVe1wF4Dg2xcrVD11cHBAafj4UQHI/v4+dHV1McP9pvCYy+fzcV+KfvPjApBUKgUul0s6hh4dHf1V4SXo+vp61euuWvgnBfzPSAWEQiGYm5v7sebn5+si1mfXotnZWTg9PS0VgH9GstaZyIpGo6UCjo+PmSZRJb8bkArAQ0LWZaKoWl1dlSaPFDdBXBON
/// +Dqrt/CaPJfL0axlBSC4LoaHh5k/KIIsFgtcXFzQbAsoCkDwKBn/yWhhYQGsVqsQWlpagnA4DK+vrzTLEhUFtBYAfwDzMvhNohItaQAAAABJRU5ErkJgggHQF3dpdGggdGVtcCBhcyAoIFNFTEVDVCAgICAgbXQuZGF0ZWltcG9ydCwgSVNOVUxMKG10LnZhdCwgMCkgQVMgdmF0LCBtdC5pZGV4cG9ydCwgSVNOVUxMKHB0LnN1cmNoYXJnZSwgMCkgQVMgYW1vdW50c3VyY2hhcmdlLCBtdC5pbnZvaWNlLCBwdC5kYXRlcmVjZWlwdCwNCiBJU05VTEwocHQuYW1vdW50LCAwKSBBUyBhbW91bnQsIHB0Lm5vdGUsIElTTlVMTChwdC5zdXJwbHVzLCAwKSBBUyBzdXJwbHVzLCBJU05VTEwocHQuZGlzY291bnQsIDApIEFTIGFtb3VudGRpc2NvdW50LCB0Yi50YWJsZU5PLCBt
/// aC5pZGNvbW1vZGl0eSwgDQogbWguY29tbW9kaXR5ICBhcyBjb21tb2RpdHksIGtoLmN1c3RvbWVyLCBkdC5pZHVuaXQsIElTTlVMTChkdC5xdWFudGl0eSwgMCkgQVMgcXVhbnRpdHksIElTTlVMTChkdC5wcmljZSwgMCkgQVMgcHJpY2UsDQoNCiAgSVNOVUxMKGR0LmFtb3VudHZhdCwgMCkgQVMgYW1vdW50dmF0LCANCiBkdC5kYXZhdCwgZHQuY29zdHMsIElTTlVMTChkdC50b3RhbCwgMCkgQVMgdG90YWwsIGRiby5mblBhZFJpZ2h0KGNvbnZlcnQodmFyY2hhcigzKSwgSVNOVUxMKGR0LnF1YW50aXR5LCAwKSksJyAnLDQpICsgJycrIFUuU2lnbiBBUyAgc3RycXVhbnRpdHksIA0KIHB0LnByb2NlZWRzLCBjb252ZXJ0KGludCwgcHQuc3VyY2hhcmdlL3B0LmFt
/// b3VudCAqMTAwKSBhcyBzdXJjaGFyZ2UsIGNvbnZlcnQoaW50LCBwdC5kaXNjb3VudC9wdC5hbW91bnQqMTAwKSBhcyBkaXNjb3VudCwgcHQuYW1vdW50ICsgcHQuc3VyY2hhcmdlIC0gcHQuZGlzY291bnQgQVMgYW1vdW50MSwNCiBjYXNlIHdoZW4gZHQuZ2l2ZT0wIHRoZW4gTidUaOG7sWMgxJHGoW4nIGVsc2UgTidU4bq3bmcga8OobScgZW5kIGFzIGdpdmUsIGR0LmdpdmUgYXMgZ2l2ZTEgRlJPTSAgICAgICAgIGRiby5FWFBPUlRERVRBSUwgQVMgZHQgSU5ORVIgSk9JTiANCiBkYm8uRVhQT1JUIEFTIG10IE9OIGR0LmlkZXhwb3J0ID0gbXQuaWRleHBvcnQgSU5ORVIgSk9JTiBkYm8uUkVDRUlQVCBBUyBwdCBPTiBtdC5pZGV4cG9ydCA9IHB0LmlkZXhwb3J0
/// IElOTkVSIEpPSU4gDQogZGJvLkRNQ09NTU9ESVRZIEFTIG1oIE9OIGR0LmlkY29tbW9kaXR5ID0gbWguaWRjb21tb2RpdHkgSU5ORVIgSk9JTiBkYm8uRE1UQUJMRSBBUyB0YiBPTiBtdC5pZHRhYmxlID0gdGIuaWR0YWJsZSBJTk5FUiBKT0lOIA0KIGRiby5ETUNVU1RPTUVSUyBBUyBraCBPTiBtdC5pZGN1c3RvbWVyID0ga2guaWRjdXN0b21lciBJTk5FUiBKT0lOIERNVU5JVCBVIE9OIFUuaWR1bml0PWR0LmlkdW5pdCBXSEVSRSAgICAgKG10LmlkZXhwb3J0ID0gTidQWDAwMDAyMCcpIA0KIGFuZCBJU05VTEwoZHQucXVhbnRpdHksIDApPjAgIA0KIHVuaW9uDQogU0VMRUNUICAgICBtdC5kYXRlaW1wb3J0LCBJU05VTEwobXQudmF0LCAwKSBBUyB2YXQsIG10
/// LmlkZXhwb3J0LCBJU05VTEwocHQuc3VyY2hhcmdlLCAwKSBBUyBhbW91bnRzdXJjaGFyZ2UsIG10Lmludm9pY2UsIHB0LmRhdGVyZWNlaXB0LA0KIElTTlVMTChwdC5hbW91bnQsIDApIEFTIGFtb3VudCwgcHQubm90ZSwgSVNOVUxMKHB0LnN1cnBsdXMsIDApIEFTIHN1cnBsdXMsIElTTlVMTChwdC5kaXNjb3VudCwgMCkgQVMgYW1vdW50ZGlzY291bnQsIHRiLnRhYmxlTk8sIG1oLmlkY29tbW9kaXR5ICwgDQogTidHaeG6o20gZ2nDoSAnICsgY29udmVydChudmFyY2hhcigzKSwoc2VsZWN0ICBkdDEuZGlzY291bnQgZnJvbSBleHBvcnRkZXRhaWwgZHQxIHdoZXJlIGR0MS5pZGNvbW1vZGl0eT1kdC5pZGNvbW1vZGl0eSBhbmQgZHQxLmlkZXhwb3J0PWR0Lmlk
/// ZXhwb3J0KSkgKyAnICUnICAgYXMgY29tbW9kaXR5LCBraC5jdXN0b21lciwgZHQuaWR1bml0LCBJU05VTEwoZHQucXVhbnRpdHksIDApIEFTIHF1YW50aXR5LA0KICBJU05VTEwoLSBkdC5hbW91bnRkaXNjb3VudCwgMCkgQVMgcHJpY2UsDQogICBJU05VTEwoZHQuYW1vdW50dmF0LCAwKSBBUyBhbW91bnR2YXQsIA0KIGR0LmRhdmF0LCBkdC5jb3N0cywgSVNOVUxMKGR0LnRvdGFsLCAwKSBBUyB0b3RhbCwgZGJvLmZuUGFkUmlnaHQoY29udmVydCh2YXJjaGFyKDMpLCBJU05VTEwoZHQucXVhbnRpdHksIDApKSwnICcsNCkgKyAnJysgVS5TaWduIEFTICBzdHJxdWFudGl0eSwgDQogcHQucHJvY2VlZHMsIGNvbnZlcnQoaW50LCBwdC5zdXJjaGFyZ2UvcHQuYW1v
/// dW50ICoxMDApIGFzIHN1cmNoYXJnZSwgY29udmVydChpbnQsIHB0LmRpc2NvdW50L3B0LmFtb3VudCoxMDApIGFzIGRpc2NvdW50LCBwdC5hbW91bnQgKyBwdC5zdXJjaGFyZ2UgLSBwdC5kaXNjb3VudCBBUyBhbW91bnQxLA0KIGNhc2Ugd2hlbiBkdC5naXZlPTAgdGhlbiBOJ1Ro4buxYyDEkcahbicgZWxzZSBOJ1ThurduZyBrw6htJyBlbmQgYXMgZ2l2ZSwgZHQuZ2l2ZSBhcyBnaXZlMSBGUk9NICAgICAgICAgZGJvLkVYUE9SVERFVEFJTCBBUyBkdCBJTk5FUiBKT0lOIA0KIGRiby5FWFBPUlQgQVMgbXQgT04gZHQuaWRleHBvcnQgPSBtdC5pZGV4cG9ydCBJTk5FUiBKT0lOIGRiby5SRUNFSVBUIEFTIHB0IE9OIG10LmlkZXhwb3J0ID0gcHQuaWRleHBvcnQg
/// SU5ORVIgSk9JTiANCiBkYm8uRE1DT01NT0RJVFkgQVMgbWggT04gZHQuaWRjb21tb2RpdHkgPSBtaC5pZGNvbW1vZGl0eSBJTk5FUiBKT0lOIGRiby5ETVRBQkxFIEFTIHRiIE9OIG10LmlkdGFibGUgPSB0Yi5pZHRhYmxlIElOTkVSIEpPSU4gDQogZGJvLkRNQ1VTVE9NRVJTIEFTIGtoIE9OIG10LmlkY3VzdG9tZXIgPSBraC5pZGN1c3RvbWVyIElOTkVSIEpPSU4gRE1VTklUIFUgT04gVS5pZHVuaXQ9ZHQuaWR1bml0IFdIRVJFICAgICAobXQuaWRleHBvcnQgPSBOJ1BYMDAwMDIwJykgDQogYW5kIElTTlVMTChkdC5xdWFudGl0eSwgMCk+MCBhbmQgZHQuZ2l2ZT0wIGFuZCBkdC5hbW91bnRkaXNjb3VudD4wLS0gdHJ1b25nIGhvcCBraHV5ZW4gbWFpIG1vbiBh
/// bg0KICkNCiBzZWxlY3QgdGVtcC4qICwgY2FzZSB3aGVuIGdpdmUxPTEgdGhlbiAwIGVsc2UgcHJpY2UgZW5kIGFzIHByaWNlMiBmcm9tIHRlbXAgb3JkZXIgYnkgZ2l2ZSBkZXNjDQogDQoNCg0KDQoNCg==</Resource>
///   </Resources>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class XR_Report : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRTable table2;
        private DevExpress.XtraReports.UI.XRTableRow tableRow2;
        private DevExpress.XtraReports.UI.XRTableCell tableCell5;
        private DevExpress.XtraReports.UI.XRTableCell tableCell6;
        private DevExpress.XtraReports.UI.XRTableCell tableCell7;
        private DevExpress.XtraReports.UI.XRTableCell tableCell8;
        private DevExpress.XtraReports.UI.TopMarginBand TopMargin;
        private DevExpress.XtraReports.UI.XRLabel label17;
        private DevExpress.XtraReports.UI.XRLabel label19;
        private DevExpress.XtraReports.UI.XRLabel label20;
        private DevExpress.XtraReports.UI.XRLabel label21;
        private DevExpress.XtraReports.UI.XRLabel label22;
        private DevExpress.XtraReports.UI.XRLabel label23;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox1;
        private DevExpress.XtraReports.UI.XRTable table1;
        private DevExpress.XtraReports.UI.XRTableRow tableRow1;
        private DevExpress.XtraReports.UI.XRTableCell tableCell1;
        private DevExpress.XtraReports.UI.XRTableCell tableCell2;
        private DevExpress.XtraReports.UI.XRTableCell tableCell3;
        private DevExpress.XtraReports.UI.XRTableCell tableCell4;
        private DevExpress.XtraReports.UI.XRLabel label14;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.BottomMarginBand BottomMargin;
        private DevExpress.XtraReports.UI.ReportFooterBand ReportFooter;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.XRLabel label10;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.XRLabel label8;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLabel label6;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.XRLabel label15;
        private DevExpress.XtraReports.UI.XRLabel label12;
        private DevExpress.XtraReports.UI.XRLabel label11;
        private DevExpress.XtraReports.UI.XRLabel label13;
        private DevExpress.XtraReports.UI.XRLabel label18;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private System.Data.SqlClient.SqlDataAdapter sqlDataAdapter1;
        private System.Data.SqlClient.SqlCommand sqlCommand1;
        private System.Data.SqlClient.SqlConnection sqlConnection1;
        private XtraReportSerialization.dsDataSet dsDataSet1;
        private DevExpress.XtraReports.UI.FormattingRule formattingRule1;
        private DevExpress.XtraReports.UI.XRControlStyle controlStyle1;
        private DevExpress.XtraReports.UI.CalculatedField calThanhtien;
        private DevExpress.XtraReports.UI.CalculatedField calTongCong;
        private DevExpress.XtraReports.UI.CalculatedField calDiscount;
        private DevExpress.XtraReports.UI.CalculatedField calSurcharge;
        private DevExpress.XtraReports.UI.CalculatedField calTongTien;
        private DevExpress.XtraReports.UI.CalculatedField calPromotion;
        private DevExpress.XtraReports.Parameters.Parameter field;
        private DevExpress.XtraReports.Parameters.Parameter logo;
        private DevExpress.XtraReports.Parameters.Parameter company;
        private DevExpress.XtraReports.Parameters.Parameter address;
        private DevExpress.XtraReports.Parameters.Parameter companyid;
        private DevExpress.XtraReports.Parameters.Parameter email;
        private DevExpress.XtraReports.Parameters.Parameter fax;
        private DevExpress.XtraReports.Parameters.Parameter Licence;
        private DevExpress.XtraReports.Parameters.Parameter rep;
        private DevExpress.XtraReports.Parameters.Parameter sign;
        private DevExpress.XtraReports.Parameters.Parameter tax;
        private DevExpress.XtraReports.Parameters.Parameter tel;
        private DevExpress.XtraReports.Parameters.Parameter website;
        private DevExpress.XtraReports.Parameters.Parameter MS;
        private DevExpress.XtraReports.Parameters.Parameter EMP1;
        private DevExpress.XtraReports.Parameters.Parameter EMP2;
        private DevExpress.XtraReports.Parameters.Parameter EMP3;
        private DevExpress.XtraReports.Parameters.Parameter EMP4;
        private DevExpress.XtraReports.Parameters.Parameter EMP5;
        private DevExpress.XtraReports.Parameters.Parameter EMP6;
        private DevExpress.XtraReports.Parameters.Parameter EMP7;
        private DevExpress.XtraReports.Parameters.Parameter EMP8;
        private DevExpress.XtraReports.Parameters.Parameter EMP9;
        private DevExpress.XtraReports.Parameters.Parameter EMP10;
        private System.Resources.ResourceManager _resources;
        private string _resourceString;
        public XR_Report() {
            this._resourceString = DevExpress.XtraReports.Serialization.XRResourceManager.GetResourceFor("XtraReportSerialization.XR_Report");
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(this._resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.TopMargin = new DevExpress.XtraReports.UI.TopMarginBand();
            this.BottomMargin = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.ReportFooter = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.table2 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow2 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell5 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell6 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell7 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell8 = new DevExpress.XtraReports.UI.XRTableCell();
            this.label17 = new DevExpress.XtraReports.UI.XRLabel();
            this.label19 = new DevExpress.XtraReports.UI.XRLabel();
            this.label20 = new DevExpress.XtraReports.UI.XRLabel();
            this.label21 = new DevExpress.XtraReports.UI.XRLabel();
            this.label22 = new DevExpress.XtraReports.UI.XRLabel();
            this.label23 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox1 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.table1 = new DevExpress.XtraReports.UI.XRTable();
            this.label14 = new DevExpress.XtraReports.UI.XRLabel();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.tableRow1 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell1 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell2 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell3 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell4 = new DevExpress.XtraReports.UI.XRTableCell();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.label10 = new DevExpress.XtraReports.UI.XRLabel();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.label8 = new DevExpress.XtraReports.UI.XRLabel();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.label6 = new DevExpress.XtraReports.UI.XRLabel();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.label15 = new DevExpress.XtraReports.UI.XRLabel();
            this.label12 = new DevExpress.XtraReports.UI.XRLabel();
            this.label11 = new DevExpress.XtraReports.UI.XRLabel();
            this.label13 = new DevExpress.XtraReports.UI.XRLabel();
            this.label18 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.sqlDataAdapter1 = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand1 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection1 = new System.Data.SqlClient.SqlConnection();
            this.dsDataSet1 = new XtraReportSerialization.dsDataSet();
            this.formattingRule1 = new DevExpress.XtraReports.UI.FormattingRule();
            this.controlStyle1 = new DevExpress.XtraReports.UI.XRControlStyle();
            this.calThanhtien = new DevExpress.XtraReports.UI.CalculatedField();
            this.calTongCong = new DevExpress.XtraReports.UI.CalculatedField();
            this.calDiscount = new DevExpress.XtraReports.UI.CalculatedField();
            this.calSurcharge = new DevExpress.XtraReports.UI.CalculatedField();
            this.calTongTien = new DevExpress.XtraReports.UI.CalculatedField();
            this.calPromotion = new DevExpress.XtraReports.UI.CalculatedField();
            this.field = new DevExpress.XtraReports.Parameters.Parameter();
            this.logo = new DevExpress.XtraReports.Parameters.Parameter();
            this.company = new DevExpress.XtraReports.Parameters.Parameter();
            this.address = new DevExpress.XtraReports.Parameters.Parameter();
            this.companyid = new DevExpress.XtraReports.Parameters.Parameter();
            this.email = new DevExpress.XtraReports.Parameters.Parameter();
            this.fax = new DevExpress.XtraReports.Parameters.Parameter();
            this.Licence = new DevExpress.XtraReports.Parameters.Parameter();
            this.rep = new DevExpress.XtraReports.Parameters.Parameter();
            this.sign = new DevExpress.XtraReports.Parameters.Parameter();
            this.tax = new DevExpress.XtraReports.Parameters.Parameter();
            this.tel = new DevExpress.XtraReports.Parameters.Parameter();
            this.website = new DevExpress.XtraReports.Parameters.Parameter();
            this.MS = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP1 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP2 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP3 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP4 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP5 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP6 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP7 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP8 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP9 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP10 = new DevExpress.XtraReports.Parameters.Parameter();
            ((System.ComponentModel.ISupportInitialize)(this.table2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDataSet1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.table2});
            this.Detail.HeightF = 18.75001F;
            this.Detail.Name = "Detail";
            this.Detail.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.Detail.Scripts.OnAfterPrint = "Detail_AfterPrint";
            this.Detail.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // TopMargin
            // 
            this.TopMargin.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label17,
                        this.label19,
                        this.label20,
                        this.label21,
                        this.label22,
                        this.label23,
                        this.pictureBox1,
                        this.table1,
                        this.label14,
                        this.label2});
            this.TopMargin.HeightF = 185.1249F;
            this.TopMargin.Name = "TopMargin";
            this.TopMargin.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.TopMargin.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // BottomMargin
            // 
            this.BottomMargin.HeightF = 7.918867F;
            this.BottomMargin.Name = "BottomMargin";
            this.BottomMargin.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.BottomMargin.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // ReportFooter
            // 
            this.ReportFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label4,
                        this.label10,
                        this.label9,
                        this.label8,
                        this.label7,
                        this.label6,
                        this.label3,
                        this.label5,
                        this.label15,
                        this.label12,
                        this.label11,
                        this.label13,
                        this.label18});
            this.ReportFooter.HeightF = 156.25F;
            this.ReportFooter.Name = "ReportFooter";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label1});
            this.GroupHeader1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("calPromotion", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader1.HeightF = 20.83333F;
            this.GroupHeader1.Name = "GroupHeader1";
            this.GroupHeader1.StyleName = "controlStyle1";
            // 
            // table2
            // 
            this.table2.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.table2.Font = new System.Drawing.Font("Times New Roman", 8F);
            this.table2.LocationFloat = new DevExpress.Utils.PointFloat(0.1249949F, 0F);
            this.table2.Name = "table2";
            this.table2.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow2});
            this.table2.SizeF = new System.Drawing.SizeF(188.875F, 18F);
            this.table2.StylePriority.UseBorders = false;
            this.table2.StylePriority.UseFont = false;
            this.table2.StylePriority.UseTextAlignment = false;
            this.table2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // tableRow2
            // 
            this.tableRow2.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell5,
                        this.tableCell6,
                        this.tableCell7,
                        this.tableCell8});
            this.tableRow2.Name = "tableRow2";
            this.tableRow2.Weight = 1D;
            // 
            // tableCell5
            // 
            this.tableCell5.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.commodity")});
            this.tableCell5.Name = "tableCell5";
            this.tableCell5.StylePriority.UseTextAlignment = false;
            this.tableCell5.Text = "tableCell5";
            this.tableCell5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.tableCell5.Weight = 1.2434502613034038D;
            // 
            // tableCell6
            // 
            this.tableCell6.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.strquantity", "{0:n0}")});
            this.tableCell6.Name = "tableCell6";
            this.tableCell6.StylePriority.UseTextAlignment = false;
            this.tableCell6.Text = "tableCell6";
            this.tableCell6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.tableCell6.Weight = 0.4872981754704353D;
            // 
            // tableCell7
            // 
            this.tableCell7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.price", "{0:N0}")});
            this.tableCell7.Name = "tableCell7";
            this.tableCell7.StylePriority.UseTextAlignment = false;
            this.tableCell7.Text = "tableCell7";
            this.tableCell7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.tableCell7.Weight = 0.62172542718835055D;
            // 
            // tableCell8
            // 
            this.tableCell8.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.calThanhtien", "{0:N0}")});
            this.tableCell8.Name = "tableCell8";
            this.tableCell8.StylePriority.UseTextAlignment = false;
            this.tableCell8.Text = "tableCell8";
            this.tableCell8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.tableCell8.Weight = 0.777857008616112D;
            // 
            // label17
            // 
            this.label17.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.tableNO")});
            this.label17.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.label17.LocationFloat = new DevExpress.Utils.PointFloat(92.99978F, 106.6366F);
            this.label17.Name = "label17";
            this.label17.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label17.SizeF = new System.Drawing.SizeF(34.34729F, 23F);
            this.label17.StylePriority.UseFont = false;
            this.label17.StylePriority.UseTextAlignment = false;
            this.label17.Text = "label6";
            this.label17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // label19
            // 
            this.label19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.invoice", "{0}")});
            this.label19.Font = new System.Drawing.Font("Times New Roman", 7F);
            this.label19.LocationFloat = new DevExpress.Utils.PointFloat(92.99978F, 148.007F);
            this.label19.Name = "label19";
            this.label19.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label19.SizeF = new System.Drawing.SizeF(72.54171F, 18.00002F);
            this.label19.StylePriority.UseFont = false;
            this.label19.Text = "label1";
            // 
            // label20
            // 
            this.label20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.dateimport", "{0:dd-MM-yyyy HH:mm}")});
            this.label20.Font = new System.Drawing.Font("Times New Roman", 7F);
            this.label20.LocationFloat = new DevExpress.Utils.PointFloat(11.81498F, 129.6366F);
            this.label20.Name = "label20";
            this.label20.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label20.SizeF = new System.Drawing.SizeF(81.18481F, 18.37038F);
            this.label20.StylePriority.UseFont = false;
            this.label20.StylePriority.UseTextAlignment = false;
            this.label20.Text = "label15";
            this.label20.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // label21
            // 
            this.label21.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.datereceipt", "{0:HH:mm}")});
            this.label21.Font = new System.Drawing.Font("Times New Roman", 7F);
            this.label21.LocationFloat = new DevExpress.Utils.PointFloat(92.99978F, 129.6366F);
            this.label21.Name = "label21";
            this.label21.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label21.SizeF = new System.Drawing.SizeF(72.54171F, 18.37038F);
            this.label21.StylePriority.UseFont = false;
            this.label21.Text = "label16";
            // 
            // label22
            // 
            this.label22.Font = new System.Drawing.Font("Times New Roman", 7F);
            this.label22.LocationFloat = new DevExpress.Utils.PointFloat(11.81498F, 148.007F);
            this.label22.Name = "label22";
            this.label22.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label22.SizeF = new System.Drawing.SizeF(81.18481F, 17.99998F);
            this.label22.StylePriority.UseFont = false;
            this.label22.StylePriority.UseTextAlignment = false;
            this.label22.Text = "Admin";
            this.label22.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // label23
            // 
            this.label23.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label23.LocationFloat = new DevExpress.Utils.PointFloat(58.08331F, 106.6366F);
            this.label23.Name = "label23";
            this.label23.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label23.SizeF = new System.Drawing.SizeF(34.91647F, 23F);
            this.label23.StylePriority.UseFont = false;
            this.label23.StylePriority.UseTextAlignment = false;
            this.label23.Text = "Bàn:";
            this.label23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // pictureBox1
            // 
            this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox1.Image")));
            this.pictureBox1.LocationFloat = new DevExpress.Utils.PointFloat(58.08332F, 0.8170921F);
            this.pictureBox1.Name = "pictureBox1";
            this.pictureBox1.SizeF = new System.Drawing.SizeF(71.49976F, 45.91667F);
            // 
            // table1
            // 
            this.table1.Borders = DevExpress.XtraPrinting.BorderSide.Bottom;
            this.table1.Font = new System.Drawing.Font("Times New Roman", 8F, System.Drawing.FontStyle.Bold);
            this.table1.LocationFloat = new DevExpress.Utils.PointFloat(0.1250108F, 167.1249F);
            this.table1.Name = "table1";
            this.table1.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow1});
            this.table1.SizeF = new System.Drawing.SizeF(188.875F, 18F);
            this.table1.StylePriority.UseBorders = false;
            this.table1.StylePriority.UseFont = false;
            this.table1.StylePriority.UseTextAlignment = false;
            this.table1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label14
            // 
            this.label14.Font = new System.Drawing.Font("Times New Roman", 8F, System.Drawing.FontStyle.Italic);
            this.label14.LocationFloat = new DevExpress.Utils.PointFloat(0.1249949F, 70.54398F);
            this.label14.Multiline = true;
            this.label14.Name = "label14";
            this.label14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label14.SizeF = new System.Drawing.SizeF(188.875F, 28.0926F);
            this.label14.StylePriority.UseFont = false;
            this.label14.StylePriority.UseTextAlignment = false;
            this.label14.Text = "346 Phạm Văn Đồng - Phường 11\r\n  Q. Bình Thạnh - TP HCM";
            this.label14.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            // 
            // label2
            // 
            this.label2.Font = new System.Drawing.Font("Times New Roman", 14F, System.Drawing.FontStyle.Bold);
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(0.1249949F, 46.73374F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(188.875F, 23.81F);
            this.label2.StylePriority.UseFont = false;
            this.label2.StylePriority.UseTextAlignment = false;
            this.label2.Text = "Quán nướng  Oishi";
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            // 
            // tableRow1
            // 
            this.tableRow1.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell1,
                        this.tableCell2,
                        this.tableCell3,
                        this.tableCell4});
            this.tableRow1.Name = "tableRow1";
            this.tableRow1.Weight = 1D;
            // 
            // tableCell1
            // 
            this.tableCell1.Name = "tableCell1";
            this.tableCell1.StylePriority.UseTextAlignment = false;
            this.tableCell1.Text = "TÊN MÓN";
            this.tableCell1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.tableCell1.Weight = 1.2001270341754817D;
            // 
            // tableCell2
            // 
            this.tableCell2.Name = "tableCell2";
            this.tableCell2.Text = "SL";
            this.tableCell2.Weight = 0.47032022500917425D;
            // 
            // tableCell3
            // 
            this.tableCell3.Name = "tableCell3";
            this.tableCell3.StylePriority.UseTextAlignment = false;
            this.tableCell3.Text = "Đ.GIÁ";
            this.tableCell3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.tableCell3.Weight = 0.60006360410747439D;
            // 
            // tableCell4
            // 
            this.tableCell4.Name = "tableCell4";
            this.tableCell4.StylePriority.UseTextAlignment = false;
            this.tableCell4.Text = "T.TIỀN";
            this.tableCell4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.tableCell4.Weight = 0.75075577964101081D;
            // 
            // label4
            // 
            this.label4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.calThanhTien")});
            this.label4.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(86.3987F, 0F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(102.6013F, 18F);
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseTextAlignment = false;
            summary1.FormatString = "{0:N0}";
            summary1.Running = DevExpress.XtraReports.UI.SummaryRunning.Page;
            this.label4.Summary = summary1;
            this.label4.Text = "label4";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label10
            // 
            this.label10.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.calTongCong", "{0:N0}")});
            this.label10.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label10.LocationFloat = new DevExpress.Utils.PointFloat(86.40128F, 54F);
            this.label10.Name = "label10";
            this.label10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label10.SizeF = new System.Drawing.SizeF(102.5987F, 18F);
            this.label10.StylePriority.UseFont = false;
            this.label10.StylePriority.UseTextAlignment = false;
            summary2.FormatString = "{0:N0}";
            this.label10.Summary = summary2;
            this.label10.Text = "label10";
            this.label10.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label9
            // 
            this.label9.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label9.LocationFloat = new DevExpress.Utils.PointFloat(2.421252F, 54F);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.SizeF = new System.Drawing.SizeF(83.98F, 18F);
            this.label9.StylePriority.UseFont = false;
            this.label9.Text = "Tổng tiền:";
            // 
            // label8
            // 
            this.label8.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.calSurcharge", "{0:N0}")});
            this.label8.Font = new System.Drawing.Font("Times New Roman", 8F);
            this.label8.LocationFloat = new DevExpress.Utils.PointFloat(86.40128F, 18F);
            this.label8.Name = "label8";
            this.label8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label8.SizeF = new System.Drawing.SizeF(102.5987F, 18F);
            this.label8.StylePriority.UseFont = false;
            this.label8.StylePriority.UseTextAlignment = false;
            this.label8.Text = "label8";
            this.label8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label7
            // 
            this.label7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.calDiscount", "{0:N0}")});
            this.label7.Font = new System.Drawing.Font("Times New Roman", 8F);
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(86.40128F, 36F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.SizeF = new System.Drawing.SizeF(102.5987F, 18F);
            this.label7.StylePriority.UseFont = false;
            this.label7.StylePriority.UseTextAlignment = false;
            this.label7.Text = "label7";
            this.label7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label6
            // 
            this.label6.Font = new System.Drawing.Font("Times New Roman", 8F);
            this.label6.LocationFloat = new DevExpress.Utils.PointFloat(9.791247F, 36F);
            this.label6.Name = "label6";
            this.label6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label6.SizeF = new System.Drawing.SizeF(76.61F, 18F);
            this.label6.StylePriority.UseFont = false;
            this.label6.Text = "Chiết khấu:";
            // 
            // label3
            // 
            this.label3.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(2.416261F, 0F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(83.98F, 18F);
            this.label3.StylePriority.UseFont = false;
            this.label3.Text = "Tổng món:";
            // 
            // label5
            // 
            this.label5.Font = new System.Drawing.Font("Times New Roman", 8F);
            this.label5.LocationFloat = new DevExpress.Utils.PointFloat(9.791247F, 18F);
            this.label5.Name = "label5";
            this.label5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label5.SizeF = new System.Drawing.SizeF(76.61F, 18F);
            this.label5.StylePriority.UseFont = false;
            this.label5.Text = "Phụ phí:";
            // 
            // label15
            // 
            this.label15.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.proceeds", "{0:N0}")});
            this.label15.Font = new System.Drawing.Font("Times New Roman", 8F);
            this.label15.LocationFloat = new DevExpress.Utils.PointFloat(113.2497F, 72.00003F);
            this.label15.Name = "label15";
            this.label15.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label15.SizeF = new System.Drawing.SizeF(75.75029F, 16.00011F);
            this.label15.StylePriority.UseFont = false;
            this.label15.StylePriority.UseTextAlignment = false;
            this.label15.Text = "label11";
            this.label15.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label12
            // 
            this.label12.Font = new System.Drawing.Font("Times New Roman", 8F);
            this.label12.LocationFloat = new DevExpress.Utils.PointFloat(78.33315F, 88.33338F);
            this.label12.Multiline = true;
            this.label12.Name = "label12";
            this.label12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label12.SizeF = new System.Drawing.SizeF(34.91647F, 16F);
            this.label12.StylePriority.UseFont = false;
            this.label12.Text = "Thối:\r\n";
            // 
            // label11
            // 
            this.label11.Font = new System.Drawing.Font("Times New Roman", 8F);
            this.label11.LocationFloat = new DevExpress.Utils.PointFloat(78.24961F, 72.00003F);
            this.label11.Name = "label11";
            this.label11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label11.SizeF = new System.Drawing.SizeF(35F, 16F);
            this.label11.StylePriority.UseFont = false;
            this.label11.Text = "Nhận:";
            // 
            // label13
            // 
            this.label13.Font = new System.Drawing.Font("Times New Roman", 10F, ((System.Drawing.FontStyle)((System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic))));
            this.label13.LocationFloat = new DevExpress.Utils.PointFloat(3.234514F, 104.3333F);
            this.label13.Multiline = true;
            this.label13.Name = "label13";
            this.label13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label13.SizeF = new System.Drawing.SizeF(185.7654F, 31.95835F);
            this.label13.StylePriority.UseFont = false;
            this.label13.StylePriority.UseTextAlignment = false;
            this.label13.Text = "Hân hạnh được phục vụ \r\nquý khách !";
            this.label13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            // 
            // label18
            // 
            this.label18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.surplus", "{0:N0}")});
            this.label18.Font = new System.Drawing.Font("Times New Roman", 8F);
            this.label18.LocationFloat = new DevExpress.Utils.PointFloat(113.2497F, 88.33351F);
            this.label18.Name = "label18";
            this.label18.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label18.SizeF = new System.Drawing.SizeF(75.75027F, 15.99989F);
            this.label18.StylePriority.UseFont = false;
            this.label18.StylePriority.UseTextAlignment = false;
            this.label18.Text = "label18";
            this.label18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label1
            // 
            this.label1.BackColor = System.Drawing.Color.LavenderBlush;
            this.label1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Data.give")});
            this.label1.Font = new System.Drawing.Font("Times New Roman", 9.75F, ((System.Drawing.FontStyle)((System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic))));
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(0.1250108F, 0F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(188.875F, 20F);
            this.label1.StylePriority.UseBackColor = false;
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UsePadding = false;
            this.label1.Text = "label1";
            // 
            // sqlDataAdapter1
            // 
            this.sqlDataAdapter1.SelectCommand = this.sqlCommand1;
            // 
            // sqlCommand1
            // 
            this.sqlCommand1.CommandText = resources.GetString("sqlCommand1.CommandText");
            this.sqlCommand1.Connection = this.sqlConnection1;
            // 
            // sqlConnection1
            // 
            this.sqlConnection1.ConnectionString = "Data Source=loyalty_pc;Initial Catalog=system;Persist Security Info=True;User ID=" +
                "sa;Password=123456";
            this.sqlConnection1.FireInfoMessageEventOnUserErrors = false;
            // 
            // dsDataSet1
            // 
            this.dsDataSet1.DataSetName = "dsDataSet";
            this.dsDataSet1.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // formattingRule1
            // 
            this.formattingRule1.Name = "formattingRule1";
            // 
            // controlStyle1
            // 
            this.controlStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(224)))), ((int)(((byte)(192)))));
            this.controlStyle1.Name = "controlStyle1";
            this.controlStyle1.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            // 
            // calThanhtien
            // 
            this.calThanhtien.DataMember = "Data";
            this.calThanhtien.Expression = "quantity*price2";
            this.calThanhtien.Name = "calThanhtien";
            // 
            // calTongCong
            // 
            this.calTongCong.DataMember = "Data";
            this.calTongCong.Expression = "calTongTien + calSurcharge - calDiscount";
            this.calTongCong.Name = "calTongCong";
            // 
            // calDiscount
            // 
            this.calDiscount.DataMember = "Data";
            this.calDiscount.Expression = "Max(amountdiscount)";
            this.calDiscount.Name = "calDiscount";
            // 
            // calSurcharge
            // 
            this.calSurcharge.DataMember = "Data";
            this.calSurcharge.Expression = "Max(amountsurcharge)";
            this.calSurcharge.Name = "calSurcharge";
            // 
            // calTongTien
            // 
            this.calTongTien.DataMember = "Data";
            this.calTongTien.Expression = "Sum(calThanhtien)";
            this.calTongTien.Name = "calTongTien";
            // 
            // calPromotion
            // 
            this.calPromotion.DataMember = "Data";
            this.calPromotion.Expression = "give1";
            this.calPromotion.Name = "calPromotion";
            // 
            // field
            // 
            this.field.Description = "field";
            this.field.Name = "field";
            this.field.ValueInfo = "1 - Kinh Doanh";
            // 
            // logo
            // 
            this.logo.Description = "logo";
            this.logo.Name = "logo";
            this.logo.Type = typeof(System.Drawing.Image);
            this.logo.ValueInfo = resources.GetString("logo.ValueInfo");
            // 
            // company
            // 
            this.company.Description = "company";
            this.company.Name = "company";
            this.company.ValueInfo = "Công ty TNHH MTV THẢO NGUYÊN XANH";
            // 
            // address
            // 
            this.address.Description = "address";
            this.address.Name = "address";
            this.address.ValueInfo = "32- Lý Chính Thắng";
            // 
            // companyid
            // 
            this.companyid.Description = "companyid";
            this.companyid.Name = "companyid";
            this.companyid.ValueInfo = "CTY1409070001";
            // 
            // email
            // 
            this.email.Description = "email";
            this.email.Name = "email";
            this.email.ValueInfo = "mar@thaonguyenxanh.com.vn";
            // 
            // fax
            // 
            this.fax.Description = "fax";
            this.fax.Name = "fax";
            this.fax.ValueInfo = "083.8771212";
            // 
            // Licence
            // 
            this.Licence.Description = "Licence";
            this.Licence.Name = "Licence";
            this.Licence.ValueInfo = "1103TTCP_110";
            // 
            // rep
            // 
            this.rep.Description = "rep";
            this.rep.Name = "rep";
            this.rep.ValueInfo = "Trần Long Biên";
            // 
            // sign
            // 
            this.sign.Description = "sign";
            this.sign.Name = "sign";
            this.sign.ValueInfo = "THAO NGUYEN XANH";
            // 
            // tax
            // 
            this.tax.Description = "tax";
            this.tax.Name = "tax";
            this.tax.ValueInfo = "1298345677";
            // 
            // tel
            // 
            this.tel.Description = "tel";
            this.tel.Name = "tel";
            this.tel.ValueInfo = "0907012207";
            // 
            // website
            // 
            this.website.Description = "website";
            this.website.Name = "website";
            this.website.ValueInfo = "thaonguyenxanh.com.vn";
            // 
            // MS
            // 
            this.MS.Description = "MS";
            this.MS.Name = "MS";
            this.MS.ValueInfo = "0";
            // 
            // EMP1
            // 
            this.EMP1.Description = "EMP1";
            this.EMP1.Name = "EMP1";
            this.EMP1.ValueInfo = "5555";
            // 
            // EMP2
            // 
            this.EMP2.Description = "EMP2";
            this.EMP2.Name = "EMP2";
            // 
            // EMP3
            // 
            this.EMP3.Description = "EMP3";
            this.EMP3.Name = "EMP3";
            // 
            // EMP4
            // 
            this.EMP4.Description = "EMP4";
            this.EMP4.Name = "EMP4";
            // 
            // EMP5
            // 
            this.EMP5.Description = "EMP5";
            this.EMP5.Name = "EMP5";
            // 
            // EMP6
            // 
            this.EMP6.Description = "EMP6";
            this.EMP6.Name = "EMP6";
            // 
            // EMP7
            // 
            this.EMP7.Description = "EMP7";
            this.EMP7.Name = "EMP7";
            // 
            // EMP8
            // 
            this.EMP8.Description = "EMP8";
            this.EMP8.Name = "EMP8";
            // 
            // EMP9
            // 
            this.EMP9.Description = "EMP9";
            this.EMP9.Name = "EMP9";
            // 
            // EMP10
            // 
            this.EMP10.Description = "EMP10";
            this.EMP10.Name = "EMP10";
            // 
            // XR_Report
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.TopMargin,
                        this.BottomMargin,
                        this.ReportFooter,
                        this.GroupHeader1});
            this.CalculatedFields.AddRange(new DevExpress.XtraReports.UI.CalculatedField[] {
                        this.calThanhtien,
                        this.calTongCong,
                        this.calDiscount,
                        this.calSurcharge,
                        this.calTongTien,
                        this.calPromotion});
            this.DataAdapter = this.sqlDataAdapter1;
            this.DataMember = "Data";
            this.DataSource = this.dsDataSet1;
            this.Extensions.Add("DataSerializationExtension", "SomeName");
            this.Extensions.Add("DataEditorExtension", "SomeName");
            this.Extensions.Add("ParameterEditorExtension", "SomeName");
            this.FormattingRuleSheet.AddRange(new DevExpress.XtraReports.UI.FormattingRule[] {
                        this.formattingRule1});
            this.Margins = new System.Drawing.Printing.Margins(0, 1, 185, 8);
            this.Name = "XR_Report";
            this.PageHeight = 3000;
            this.PageWidth = 190;
            this.PaperKind = System.Drawing.Printing.PaperKind.Custom;
            this.Parameters.AddRange(new DevExpress.XtraReports.Parameters.Parameter[] {
                        this.field,
                        this.logo,
                        this.company,
                        this.address,
                        this.companyid,
                        this.email,
                        this.fax,
                        this.Licence,
                        this.rep,
                        this.sign,
                        this.tax,
                        this.tel,
                        this.website,
                        this.MS,
                        this.EMP1,
                        this.EMP2,
                        this.EMP3,
                        this.EMP4,
                        this.EMP5,
                        this.EMP6,
                        this.EMP7,
                        this.EMP8,
                        this.EMP9,
                        this.EMP10});
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.controlStyle1});
            this.Version = "13.1";
            ((System.ComponentModel.ISupportInitialize)(this.table2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDataSet1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDataSet : global::System.Data.DataSet {
        private DataDataTable tableData;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataDataTable Data {
            get {
                return this.tableData;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsDataSet cln = ((dsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableData = ((DataDataTable)(base.Tables["Data"]));
            if ((initTable == true)) {
                if ((this.tableData != null)) {
                    this.tableData.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableData = new DataDataTable();
            base.Tables.Add(this.tableData);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeData() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDataSet ds = new dsDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataRowChangeEventHandler(object sender, DataRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columndateimport;
            private global::System.Data.DataColumn columnvat;
            private global::System.Data.DataColumn columnidexport;
            private global::System.Data.DataColumn columnamountsurcharge;
            private global::System.Data.DataColumn columninvoice;
            private global::System.Data.DataColumn columndatereceipt;
            private global::System.Data.DataColumn columnamount;
            private global::System.Data.DataColumn columnnote;
            private global::System.Data.DataColumn columnsurplus;
            private global::System.Data.DataColumn columnamountdiscount;
            private global::System.Data.DataColumn columntableNO;
            private global::System.Data.DataColumn columnidcommodity;
            private global::System.Data.DataColumn columncommodity;
            private global::System.Data.DataColumn columncustomer;
            private global::System.Data.DataColumn columnidunit;
            private global::System.Data.DataColumn columnquantity;
            private global::System.Data.DataColumn columnprice;
            private global::System.Data.DataColumn columnamountvat;
            private global::System.Data.DataColumn columndavat;
            private global::System.Data.DataColumn columncosts;
            private global::System.Data.DataColumn columntotal;
            private global::System.Data.DataColumn columnstrquantity;
            private global::System.Data.DataColumn columnproceeds;
            private global::System.Data.DataColumn columnsurcharge;
            private global::System.Data.DataColumn columndiscount;
            private global::System.Data.DataColumn columnamount1;
            private global::System.Data.DataColumn columngive;
            private global::System.Data.DataColumn columngive1;
            private global::System.Data.DataColumn columnprice2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataDataTable() {
                this.TableName = "Data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dateimportColumn {
                get {
                    return this.columndateimport;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn vatColumn {
                get {
                    return this.columnvat;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idexportColumn {
                get {
                    return this.columnidexport;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountsurchargeColumn {
                get {
                    return this.columnamountsurcharge;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoiceColumn {
                get {
                    return this.columninvoice;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn datereceiptColumn {
                get {
                    return this.columndatereceipt;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn noteColumn {
                get {
                    return this.columnnote;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn surplusColumn {
                get {
                    return this.columnsurplus;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountdiscountColumn {
                get {
                    return this.columnamountdiscount;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn tableNOColumn {
                get {
                    return this.columntableNO;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idcommodityColumn {
                get {
                    return this.columnidcommodity;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn commodityColumn {
                get {
                    return this.columncommodity;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn customerColumn {
                get {
                    return this.columncustomer;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idunitColumn {
                get {
                    return this.columnidunit;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountvatColumn {
                get {
                    return this.columnamountvat;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn davatColumn {
                get {
                    return this.columndavat;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costsColumn {
                get {
                    return this.columncosts;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn totalColumn {
                get {
                    return this.columntotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strquantityColumn {
                get {
                    return this.columnstrquantity;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn proceedsColumn {
                get {
                    return this.columnproceeds;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn surchargeColumn {
                get {
                    return this.columnsurcharge;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn discountColumn {
                get {
                    return this.columndiscount;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amount1Column {
                get {
                    return this.columnamount1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn giveColumn {
                get {
                    return this.columngive;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn give1Column {
                get {
                    return this.columngive1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn price2Column {
                get {
                    return this.columnprice2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRow this[int index] {
                get {
                    return ((DataRow)(this.Rows[index]));
                }
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataRowChangeEventHandler DataRowChanging;
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataRowChangeEventHandler DataRowChanged;
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataRowChangeEventHandler DataRowDeleting;
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataRowChangeEventHandler DataRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataRow(DataRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRow AddDataRow(
                        System.DateTime dateimport, 
                        int vat, 
                        string idexport, 
                        decimal amountsurcharge, 
                        string invoice, 
                        System.DateTime datereceipt, 
                        decimal amount, 
                        string note, 
                        decimal surplus, 
                        decimal amountdiscount, 
                        string tableNO, 
                        string idcommodity, 
                        string commodity, 
                        string customer, 
                        string idunit, 
                        int quantity, 
                        decimal price, 
                        decimal amountvat, 
                        bool davat, 
                        decimal costs, 
                        decimal total, 
                        string strquantity, 
                        decimal proceeds, 
                        int surcharge, 
                        int discount, 
                        decimal amount1, 
                        string give, 
                        bool give1, 
                        decimal price2) {
                DataRow rowDataRow = ((DataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        dateimport,
                        vat,
                        idexport,
                        amountsurcharge,
                        invoice,
                        datereceipt,
                        amount,
                        note,
                        surplus,
                        amountdiscount,
                        tableNO,
                        idcommodity,
                        commodity,
                        customer,
                        idunit,
                        quantity,
                        price,
                        amountvat,
                        davat,
                        costs,
                        total,
                        strquantity,
                        proceeds,
                        surcharge,
                        discount,
                        amount1,
                        give,
                        give1,
                        price2};
                rowDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataRow);
                return rowDataRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataDataTable cln = ((DataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columndateimport = base.Columns["dateimport"];
                this.columnvat = base.Columns["vat"];
                this.columnidexport = base.Columns["idexport"];
                this.columnamountsurcharge = base.Columns["amountsurcharge"];
                this.columninvoice = base.Columns["invoice"];
                this.columndatereceipt = base.Columns["datereceipt"];
                this.columnamount = base.Columns["amount"];
                this.columnnote = base.Columns["note"];
                this.columnsurplus = base.Columns["surplus"];
                this.columnamountdiscount = base.Columns["amountdiscount"];
                this.columntableNO = base.Columns["tableNO"];
                this.columnidcommodity = base.Columns["idcommodity"];
                this.columncommodity = base.Columns["commodity"];
                this.columncustomer = base.Columns["customer"];
                this.columnidunit = base.Columns["idunit"];
                this.columnquantity = base.Columns["quantity"];
                this.columnprice = base.Columns["price"];
                this.columnamountvat = base.Columns["amountvat"];
                this.columndavat = base.Columns["davat"];
                this.columncosts = base.Columns["costs"];
                this.columntotal = base.Columns["total"];
                this.columnstrquantity = base.Columns["strquantity"];
                this.columnproceeds = base.Columns["proceeds"];
                this.columnsurcharge = base.Columns["surcharge"];
                this.columndiscount = base.Columns["discount"];
                this.columnamount1 = base.Columns["amount1"];
                this.columngive = base.Columns["give"];
                this.columngive1 = base.Columns["give1"];
                this.columnprice2 = base.Columns["price2"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columndateimport = new global::System.Data.DataColumn("dateimport", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateimport);
                this.columnvat = new global::System.Data.DataColumn("vat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvat);
                this.columnidexport = new global::System.Data.DataColumn("idexport", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidexport);
                this.columnamountsurcharge = new global::System.Data.DataColumn("amountsurcharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamountsurcharge);
                this.columninvoice = new global::System.Data.DataColumn("invoice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice);
                this.columndatereceipt = new global::System.Data.DataColumn("datereceipt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatereceipt);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnnote = new global::System.Data.DataColumn("note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnote);
                this.columnsurplus = new global::System.Data.DataColumn("surplus", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsurplus);
                this.columnamountdiscount = new global::System.Data.DataColumn("amountdiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamountdiscount);
                this.columntableNO = new global::System.Data.DataColumn("tableNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntableNO);
                this.columnidcommodity = new global::System.Data.DataColumn("idcommodity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcommodity);
                this.columncommodity = new global::System.Data.DataColumn("commodity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommodity);
                this.columncustomer = new global::System.Data.DataColumn("customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomer);
                this.columnidunit = new global::System.Data.DataColumn("idunit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidunit);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columnamountvat = new global::System.Data.DataColumn("amountvat", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamountvat);
                this.columndavat = new global::System.Data.DataColumn("davat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndavat);
                this.columncosts = new global::System.Data.DataColumn("costs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncosts);
                this.columntotal = new global::System.Data.DataColumn("total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal);
                this.columnstrquantity = new global::System.Data.DataColumn("strquantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrquantity);
                this.columnproceeds = new global::System.Data.DataColumn("proceeds", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproceeds);
                this.columnsurcharge = new global::System.Data.DataColumn("surcharge", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsurcharge);
                this.columndiscount = new global::System.Data.DataColumn("discount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscount);
                this.columnamount1 = new global::System.Data.DataColumn("amount1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount1);
                this.columngive = new global::System.Data.DataColumn("give", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngive);
                this.columngive1 = new global::System.Data.DataColumn("give1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngive1);
                this.columnprice2 = new global::System.Data.DataColumn("price2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice2);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRow NewDataRow() {
                return ((DataRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataRowChanged != null)) {
                    this.DataRowChanged(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataRowChanging != null)) {
                    this.DataRowChanging(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataRowDeleted != null)) {
                    this.DataRowDeleted(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataRowDeleting != null)) {
                    this.DataRowDeleting(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataRow(DataRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDataSet ds = new dsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataRow : global::System.Data.DataRow {
            private DataDataTable tableData;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData = ((DataDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dateimport {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData.dateimportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateimport\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.dateimportColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int vat {
                get {
                    try {
                        return ((int)(this[this.tableData.vatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vat\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.vatColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string idexport {
                get {
                    try {
                        return ((string)(this[this.tableData.idexportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idexport\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.idexportColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal amountsurcharge {
                get {
                    try {
                        return ((decimal)(this[this.tableData.amountsurchargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amountsurcharge\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.amountsurchargeColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string invoice {
                get {
                    try {
                        return ((string)(this[this.tableData.invoiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.invoiceColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime datereceipt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData.datereceiptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datereceipt\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.datereceiptColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal amount {
                get {
                    try {
                        return ((decimal)(this[this.tableData.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.amountColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string note {
                get {
                    try {
                        return ((string)(this[this.tableData.noteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'note\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.noteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal surplus {
                get {
                    try {
                        return ((decimal)(this[this.tableData.surplusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'surplus\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.surplusColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal amountdiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableData.amountdiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amountdiscount\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.amountdiscountColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string tableNO {
                get {
                    try {
                        return ((string)(this[this.tableData.tableNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tableNO\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.tableNOColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string idcommodity {
                get {
                    try {
                        return ((string)(this[this.tableData.idcommodityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idcommodity\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.idcommodityColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string commodity {
                get {
                    try {
                        return ((string)(this[this.tableData.commodityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commodity\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.commodityColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string customer {
                get {
                    try {
                        return ((string)(this[this.tableData.customerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'customer\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.customerColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string idunit {
                get {
                    try {
                        return ((string)(this[this.tableData.idunitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idunit\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.idunitColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int quantity {
                get {
                    try {
                        return ((int)(this[this.tableData.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.quantityColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal price {
                get {
                    try {
                        return ((decimal)(this[this.tableData.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.priceColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal amountvat {
                get {
                    try {
                        return ((decimal)(this[this.tableData.amountvatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amountvat\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.amountvatColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool davat {
                get {
                    try {
                        return ((bool)(this[this.tableData.davatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'davat\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.davatColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal costs {
                get {
                    try {
                        return ((decimal)(this[this.tableData.costsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costs\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.costsColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal total {
                get {
                    try {
                        return ((decimal)(this[this.tableData.totalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.totalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strquantity {
                get {
                    try {
                        return ((string)(this[this.tableData.strquantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strquantity\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.strquantityColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal proceeds {
                get {
                    try {
                        return ((decimal)(this[this.tableData.proceedsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'proceeds\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.proceedsColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int surcharge {
                get {
                    try {
                        return ((int)(this[this.tableData.surchargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'surcharge\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.surchargeColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int discount {
                get {
                    try {
                        return ((int)(this[this.tableData.discountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'discount\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.discountColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal amount1 {
                get {
                    try {
                        return ((decimal)(this[this.tableData.amount1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.amount1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string give {
                get {
                    try {
                        return ((string)(this[this.tableData.giveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'give\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.giveColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool give1 {
                get {
                    try {
                        return ((bool)(this[this.tableData.give1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'give1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.give1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal price2 {
                get {
                    try {
                        return ((decimal)(this[this.tableData.price2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.price2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdateimportNull() {
                return this.IsNull(this.tableData.dateimportColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdateimportNull() {
                this[this.tableData.dateimportColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsvatNull() {
                return this.IsNull(this.tableData.vatColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetvatNull() {
                this[this.tableData.vatColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidexportNull() {
                return this.IsNull(this.tableData.idexportColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidexportNull() {
                this[this.tableData.idexportColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsamountsurchargeNull() {
                return this.IsNull(this.tableData.amountsurchargeColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetamountsurchargeNull() {
                this[this.tableData.amountsurchargeColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsinvoiceNull() {
                return this.IsNull(this.tableData.invoiceColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetinvoiceNull() {
                this[this.tableData.invoiceColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdatereceiptNull() {
                return this.IsNull(this.tableData.datereceiptColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdatereceiptNull() {
                this[this.tableData.datereceiptColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsamountNull() {
                return this.IsNull(this.tableData.amountColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetamountNull() {
                this[this.tableData.amountColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnoteNull() {
                return this.IsNull(this.tableData.noteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnoteNull() {
                this[this.tableData.noteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssurplusNull() {
                return this.IsNull(this.tableData.surplusColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsurplusNull() {
                this[this.tableData.surplusColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsamountdiscountNull() {
                return this.IsNull(this.tableData.amountdiscountColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetamountdiscountNull() {
                this[this.tableData.amountdiscountColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstableNONull() {
                return this.IsNull(this.tableData.tableNOColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettableNONull() {
                this[this.tableData.tableNOColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidcommodityNull() {
                return this.IsNull(this.tableData.idcommodityColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidcommodityNull() {
                this[this.tableData.idcommodityColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommodityNull() {
                return this.IsNull(this.tableData.commodityColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcommodityNull() {
                this[this.tableData.commodityColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscustomerNull() {
                return this.IsNull(this.tableData.customerColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcustomerNull() {
                this[this.tableData.customerColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidunitNull() {
                return this.IsNull(this.tableData.idunitColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidunitNull() {
                this[this.tableData.idunitColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsquantityNull() {
                return this.IsNull(this.tableData.quantityColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetquantityNull() {
                this[this.tableData.quantityColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspriceNull() {
                return this.IsNull(this.tableData.priceColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpriceNull() {
                this[this.tableData.priceColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsamountvatNull() {
                return this.IsNull(this.tableData.amountvatColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetamountvatNull() {
                this[this.tableData.amountvatColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdavatNull() {
                return this.IsNull(this.tableData.davatColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdavatNull() {
                this[this.tableData.davatColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostsNull() {
                return this.IsNull(this.tableData.costsColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostsNull() {
                this[this.tableData.costsColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstotalNull() {
                return this.IsNull(this.tableData.totalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettotalNull() {
                this[this.tableData.totalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrquantityNull() {
                return this.IsNull(this.tableData.strquantityColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrquantityNull() {
                this[this.tableData.strquantityColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsproceedsNull() {
                return this.IsNull(this.tableData.proceedsColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetproceedsNull() {
                this[this.tableData.proceedsColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssurchargeNull() {
                return this.IsNull(this.tableData.surchargeColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsurchargeNull() {
                this[this.tableData.surchargeColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdiscountNull() {
                return this.IsNull(this.tableData.discountColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdiscountNull() {
                this[this.tableData.discountColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isamount1Null() {
                return this.IsNull(this.tableData.amount1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setamount1Null() {
                this[this.tableData.amount1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsgiveNull() {
                return this.IsNull(this.tableData.giveColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetgiveNull() {
                this[this.tableData.giveColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isgive1Null() {
                return this.IsNull(this.tableData.give1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setgive1Null() {
                this[this.tableData.give1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isprice2Null() {
                return this.IsNull(this.tableData.price2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setprice2Null() {
                this[this.tableData.price2Column] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataRowChangeEvent : global::System.EventArgs {
            private DataRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowChangeEvent(DataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
