<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_nhatky_S.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAhdEVYdFRpdGxlAERvY3VtZW50YXRpb247SGVscDtRdWVzdGlvbuCTzJgAAANASURBVDhPTZNZ
        TFNREIZvheCa+KYR3/RNfDD64oIFEVyCgIBRImrdFSlb2CSUFNBaAaGhpiUoxCWKQNxAlqJI0RawLK2A
        iihCpRZU2pRNNEb8PXNtozf5cydzv3/OnHPncOo7Rq6ozCUTxx4B0xwmNyZ3pyimnKCo/C/L+1jMKW+0
        cwB4ERRxJG1xXnFzckGp/l7hzTYzqaBU9zCn+GlKxNG0xcS4+MvMy126qneZ3dLld4V5V3Tva7X9ePth
        DI6JGV4UUy6vWPc+TVbh4+xOkF/SwnFylZZWdkuVVYYqSvW/CLbavuFhqwWyyl7IKnrxgMUjdlZoYAyK
        Ev2v1PPlYeSRq5vJywn2H8v0zFI0OCwjDjS+siGxxAhD3ximf4CX1jiKaFU76o1fQEyW4rFjr0iy3Hle
        nHt8xm3p/bpu9FmnEVfag3qDFZPfgcJyE0ZtPzExDTQYRnC0sAO95gkQGye5lek8YG5uQkZ55+BHG1Qa
        M86ou1DWNARt12ccv9gE++RvOFiBKv0wDuS+wMW77zA4bEO85E4XKzCPtjA/+myZfYr1mnLjNaKKTDii
        aMeezCZUt1hgHwcqGgdxSP4M+3PbcFrZBWLFZ2/ZmXcBFVhwIuGafXLqOw7K27DvQisicwwIz34GjWEU
        1+sGEJj6GKHS5whOb8ZeqQ7Ekod5F/IdRJ5SdfcPjCJJbcSOZC22JT7FFnE9QlI02Cp+BL8YDfwTGrE1
        /gliCztBLHlcHXgERWTLrt7UorbtE/zjGRirQUx+KyxfgTdDPyCMqoOvWAOf6AZU6y0gNnhf1gVWwIOf
        Pq+1u1aEi/LH+/qtSFF3QHimFlG5ephZAVP/DDYer8Lm0zVIUraDmPBD+eOr1uxc6RxvfvY9vANiRJEn
        lbOdLwdR9dyMk3IddidrEBBdg6icFlTrhkHfIk8oZ70DxCLn6gJue+h5fpjol6zbdDjQP1hqLlDVwNg9
        hPHJGUxMzcDUMwTK+YdIzes2ikLo3MizPYx5/YIyXXeB72Sp52rP9VvE57wDkjW+gRKrb2C6lcVPNviK
        zy1Z5kXTR/sW0IXyC5JynHCnhBPu+Cfnvuay9yImun0kiik353/eh3n/ANV8HaGqsc5HAAAAAElFTkSu
        QmCC
</value>
  </data>
  <metadata name="dxe_err_C.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>