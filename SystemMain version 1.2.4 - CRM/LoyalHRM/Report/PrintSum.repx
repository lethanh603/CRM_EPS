/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v13.1, Version=13.1.8.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\Microsoft.Net\assembly\GAC_MSIL\DevExpress.XtraReports.v13.1\v4.0_13.1.8.0__b88d1754d700e49a\DevExpress.XtraReports.v13.1.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>en-US</Localization>
///   <Version>13.1</Version>
///   <References>
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_32\System.Data\v4.0_4.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System\v4.0_4.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Configuration\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Xml\v4.0_4.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Data.SqlXml\v4.0_4.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Security\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Core\v4.0_4.0.0.0__b77a5c561934e089\System.Core.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Numerics\v4.0_4.0.0.0__b77a5c561934e089\System.Numerics.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_32\System.Transactions\v4.0_4.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_32\System.EnterpriseServices\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.DirectoryServices\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Runtime.Remoting\v4.0_4.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_32\System.Web\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Drawing\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Web.RegularExpressions\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Design\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Windows.Forms\v4.0_4.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\Accessibility\v4.0_4.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Deployment\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_32\System.Data.OracleClient\v4.0_4.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Drawing.Design\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Web.ApplicationServices\v4.0_4.0.0.0__31bf3856ad364e35\System.Web.ApplicationServices.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.ComponentModel.DataAnnotations\v4.0_4.0.0.0__31bf3856ad364e35\System.ComponentModel.DataAnnotations.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.DirectoryServices.Protocols\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Runtime.Caching\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Runtime.Caching.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.ServiceProcess\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Configuration.Install\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Runtime.Serialization\v4.0_4.0.0.0__b77a5c561934e089\System.Runtime.Serialization.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.ServiceModel.Internals\v4.0_4.0.0.0__31bf3856ad364e35\System.ServiceModel.Internals.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\SMDiagnostics\v4.0_4.0.0.0__b77a5c561934e089\SMDiagnostics.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Web.Services\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\Microsoft.Build.Utilities.v4.0\v4.0_4.0.0.0__b03f5f7f11d50a3a\Microsoft.Build.Utilities.v4.0.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\Microsoft.Build.Framework\v4.0_4.0.0.0__b03f5f7f11d50a3a\Microsoft.Build.Framework.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Xaml\v4.0_4.0.0.0__b77a5c561934e089\System.Xaml.dll" />
///     <Reference Path="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\Microsoft.Build.Tasks.v4.0\v4.0_4.0.0.0__b03f5f7f11d50a3a\Microsoft.Build.Tasks.v4.0.dll" />
///   </References>
///   <Resources>
///     <Resource Name="XtraReportSerialization.XR_Report">
/// zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAACAAAAAAAAAFBBRFBBRFDpMUDGRcP05SEAAAAAAAAAGAEAABxsAG8AZwBvAC4AVgBhAGwAdQBlAEkAbgBmAG8AAAAAAC5zAHEAbABDAG8AbQBtAGEAbgBkADEALgBDAG8AbQBtAGEAbgBkAFQAZQB4AHQAwPAAAAG84QNpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBV2dBQUFCWUNBSUFBQUJYaXZxYkFBQUFCR2RCVFVFQUFMR1BDL3hoQlFBQUFBbHdTRmx6QUFBT3d3QUFEc01CeDIr
/// b1pBQUF0QzFKUkVGVWVGN3N2UVY4VlVlM1ByempDY0hkM1MyQmhCZ2tnUkRjNGprbk9TZU9GMXBvU3dzVTJsSVhTckc0SE5kNDBFS2hiaFFLRkNqdUVPSisvR1MrdFdhZnBDSFF2dkIrdmZlOTkvNyt1MCtIblgyMnpLeFo2NW0xWnMvTVpzaC82V1lteEdBbU9qUFJFMktrZnpiRGY3Z0xZSStaOEJqOUgzNEY0UC9zNzhabUNoTXhHaW4weEtpajBMWUE5bzNFWUhvYWpFVC92d0lHQ2hBUXlxajVNVFFUQkh1T3RnVndHbnY4V2NEZXR1M2ovbG1ZaVlHWW9IN1lpbm9Hd01uTmhyL0pIaXNOWFF0WXliU2UveDhIbE5kSVRBWW9ReHNZS2N3VVQyN0ViSG9PTk1QOURhd1FBRzBsMHhhczNGaTB5K0cvQkpnVlZGZ1RJWTJFUUFwbWhoWm93QlQraFlPMWhOUVJvc1BqWm1LRU1z
/// SGVVN2IvWXVLQXA3S1Bod3hTMW9BTjhtY2hCcnIvSjJ2UWMvQ0s5dUpFR0o4R1BHN1dtWnIxQUtqVUovVDBmd0dnRmxuTCsxTXFGbFcwL0FrL3RaSW1wSStkK1d4Z0gvUmZBYncvVkJoYmZjK1l0c2tZaTNiM1pBVUNSV1ozMnAzOFB3QllDQmFQYmV5aEo4c0xnTDFuVGxzbEFHZ3JsbFk4a1ovbkJOVXJMVEZwU0xPR1dpZVNDZkFFY0VjelVnbXdSajA5OWg4bERpbzNZSWUyWk5FS09HZzVBM0lQZjFEYWd4eEQ3Z0ZhV3B6SHZKTFdrMW13OTRVakZycC9IQ1pvRy82bm85bHNORFZiWURiam4zamM0bUJaVG9EajhLdUJzZ2FrcmFjOVMvcGZqV2FUR2JRTENQc1pBU2ZESmUxdTBnckljeXZZWXJhQy9mVS9ubEpib29vS2VzbW1md05xamMzUWtqZWpsSjR4cFJzVy8wa0pX
/// TkNxSGxSREFPeXZ6NUxTcThCSmhLcUFScGZhRk5nUjVKTTFOaE1tYlR5Ui94eHh3RU5aQVFKWVliWlNoaVhmOEg4ckVkQWY0SGpybVkrZHhwN0pIbUx2d2dJT3NqOUJDajhoWmNPTytiSGovNE5UK0pjdEl3QzN4MzlsajBMQ2xwdisxWEw4R2ZIRUUvL1pGSVROMXUrekFFNjI1UDl2Ny9sWStqOEtrS1YyNnZmM2dKT2Z1TWZmNDdHdDdRL3dhQmFzS3JCZ2o3UTk3ZThCSjJ1MVJLZURtQWk0QXg4Qk40R0tBZDhEdUFPNGhmNExnSjMvTUhGQURsZ0JBdjRpRDVaQzRhL3dQeEE1cTJWQUhyRFBncjBGSzZZV1NWbk9aNCt3djRJalJwK0hLWHZrZjNZS0lUQmIzTlpTQXUraHc5UW1oU01zR2JKZy8zeEd3QjN3UVgveDlQLy9LV1NQMWJwbkJGWE9QMHVITi9rYjBLZTBTdUIv
/// T0ZvcnFCMGcvNDhWNm0vUnJyQ3NsUDY4QXdpRUJkeTNKWDB1K2VEL2V2QmMyUjQwdUo2MnIxQXI0R05BOVlERjBWNFFBTndlaVFPQVp2YVU3YitET0FDV3B6K3BLL1NIMXROd1l5MkpKUTZXTzlnYWdKL1o4MEdVYlM1aDk1OUVXM245andVVUMycU50U2dBVys3V0VyZUNwWlYvQTNCdHV5ZitzNEQ3UHk5eHRNdGVLOXJlRnEyRmduMUUyMHYrSjRDdEk3YXkyRnBqcTY5ZFlRRnNlZG5TUFdQYWVtY0Eremc0eVA0S1lNWFNhajZ3ejE3eWpLQTlVdkF2dUJ5NlJtTFFZazhLRGI3Z1laQmRTaHhnVTNBQXp2c1BFd2RiYkNTRjFnS3paV1YvWUgrRG4xcnl4KzYyT2ZENDF2Wm5lb2FSbVBYRXJDTW05ajJMaGhnQVRjM0FxM2o4ZnpoMHhOeEV6STAwQldncDRHQXJuanovZWRI
/// dUR2ODQyZ1RjL3hxMGk5ZFN6Rlk4bWMvV3ptL1laMy85bndSTEx6Vzd3NzdhWTNXdnFRMGEyNkQrbVZNS2l6SzAwNGUya21uN3h1QzVSQVNackNXYWN0SndtOVJlSjNXM1NXTUYwWm5BYVlIQWhXMmtXNGdERGRiOG55TU9lRHpMblpBVnpBRDh6eElIQURrUVgrZGhIQVg1ZzF4U253eXFvUWtzbndKSXNaNmlqaGhxaWFHYW9vcWlncUtVR0s2UWhvdWs5anlwK28yVW55SVBmekxmKzk1dyt6djlyVzkxTi85WDRCdmR6YS8xbUxKbzkrdjMyai94ZzhheXd4NS94dlMvRlBDSW41cHUvdHgwL1JueGsrWTZYQVhsYllzbkMvNVhaZm1QcHdBb0w1U0NMVXNyZm1qQjk5by84YTN1K2pmNjYxL3JyNTgwUEJkdXR1S3A4bUd6MFJadGMvZ3YwKytNMTArYXJoMG1WdytTNjErU2U2
/// ZWJ5KzRiNnhyMFFGQXNXN1FoRG95Qy91dUpBMTlaUDdIQjR5RjZhcVErbXlWd2dnMnpTUHRkb0JGQzdqRFF1TXVBQkVvTU9xS3BKNDExcExHUzFKZVN1bnVrNFFxcC9wbmNMMms4TDYzNVpjLzk0MjlmS1hqeGpDamgrNVNJTHo5YmRQeERGOVhMNDlVYnh5aGVIQ1ZiTjF5OFpvaGc1Y0NzcEFHWmlZTnpWandWZzdLWFB4ZmFYZjR2MGU3eWY0a0JHUW5EUmFzaDU1RHQvaGtKUTNKV0RCV3NISlNWQkNsZ2VNNmZHSkZ0MldHUHQwdUhaYStBYTlsMHBIRDFDUEVhMk8rZkhnKzNaZEh1dVgrRmYxa2M5ampJR1RCVXNIeEVWdExJak1Rbk1Tb3o2VWtNejBxQ2F3Y0lWL1FYTEdmUkx5ZUp4VkRKbWlIaTFZTkZxd1lLOEtIOXNoSkJHdjNTNDZGb1R5M3ZmM1U2U3JRRzZnVmtD
/// SFV4SkRNSnBEcENzR3EwY05XWTlNU3hhWWxqVXhMR3BQNkowV2tKbzFMaklXVXhLajBSTURvRGl6d3NJNEhGOE14RUFJZ0xKWmE5ZkxSZ0pXQlV6Z29BL01rZUg1YWRCQklZSkY0MVVMUVMwRlpRckh3R0NWZTJxeFRJNmxQei85UjBkTmJLeWNuTHA2U3NISk9hTkQ1OWxldit0VDZmclBud3FLU2FtQTFvd1paUkFOUlVhVVArMzBBYzdUYk1CV3pBR2dZZDVJUGxNTDNacERlQ2EyUjVJMDJIYVJuMEdHdHBtNGdHeUtLTTFOMGhOYWZKN1pLYW45T3VGci96aTJEOWw1OUhGTHdaSU5rd0tSWHFKclovY2xTMzVNaE9xWkdPYVJHMmFlRk1ScGl0a20rdFFsZ3BlVzNCS0tML001QkhQUlZzSnR2QlJzbG5ja0laY2FTVkxJcVJjaEhzamppQ2tjRStQZkxza0hBWVlUaVRIWUlR
/// UjFvcmVIYnFXTHhoMjV5MHkrMXpvcDJRNFJIV1VMUTJzSkp4V2JRN3pzSktBWG5nTWtySVJoU2ppbWFVMFl5YWg4amxNNElRUmdpaUNHZmtIUHcxbDIrZEYydVRIOWUralA5dGdIb1JoSUVZTFgrQ2JHRmZGT0VvaTNhU3RrQWM1U2l4d0VITUJkaUxPSGJDU0Z0QmhFMU9PQXYydUtNa0dzNXhrdkxvaGJ3T01oNlRIc3hrQkZ0bGhWbG5oOWtKT1hBaG5HTXY0MW5KcVZoYUFWSUNnSWd5bGpEWlFZd29qRkZ3TFVkWUFUNlBrdGlKdVQyeStYMXk0anZueEhRVEp2WkpUeHIxZWRLcng3UHZFMk1EdnExbHg3T0J0V0ljaEMwOGNNZC9HM0ZZS0lOdTJKK2pCWDRBdDRLTlIzQ1lvWVlZSU1wNlJKb2VFdDF0b3JsT05PZEkxVkhENVl3N1g3NTlRUlZZOVBwazVab2hHYnorcVp5
/// K2Fad2VxUkdka2tNYzl3ZDFFVVoxRUhEc0JaRjJZbzZEZ3VlUUcrdVVIKzlZRU0rSVFoRGlVRVlTeGtqREdWa0VJNDlFd001L0JKQ0hwNkxkYVMzb1dCRG5xT2JaS2JpMnlpaHJKZFJ1T0NNSlphU2hqQ0lDSVc4RE9ML3RuMC9BU3NXMXkrY0RZSWRSUkFKd3AyMGUydUx4YlB5SnYvcXA3YlVzVU9CaGpDeU1rVDhPUlRpaTNjRldRTkVBVUVhNEVDNlh3NWx3Zm9SVlBvL0ppMGJrZ21Gd0dCWGtuMHFnblJEK3UyQ1RHMjJieDJQbENUdldhaUE3bXFYVzhtSVpMWm1ubVd6WlVVWmkvdFZjSmpmS1JoWEZpTU5zaElBSVNHMUZrYmFpY0RidG9PQjNVRVMzU3gyQkNNUmhGc0d5Z01kUldCZndXVEFGSUNpZ1hjZ01uQkJDSC8zTWtFVllpeU50cExSeFVzVGFDK0o2N1l0ZGRU
/// THpLdEhYRUpNT0I4VUNmVmk2VWY1YmljUENGNjBiUEYxbkpsb2pxVy9VVkZkb1RVMk55QnFHVzBSN2lXaStJSGQybDUxY2RTcHpYc25icnNLMUEzZEhPWCt5dEpjOHprRVVZWjBUWWkrSmRKSkgyY3U1RHFwb3AveFlyQU1seDFKVnlnaEdSU0VQdDFWSE82amduTWRncitUOEZSelZVYytGZHBmLzIyaVh3MWJZZ1UzbUxHTXlGakhDSUN0NXVKVUNWSmJyVUJMTDVFWStCdlcvZ2pTWWtZVXd5bkNyUEZCWkVCUllaZ2dqQzdWVFd4N1VOak4yaXNoMnhXeEYyOU5hTXdsb2UwN3JRVnN3RHpEMUFnQ1BLZVJaMGtJK1UwVDF1L1ZJU3dyc1lKZHJ1UWxrREdDcjR0aFFNT0lnU3hFVW9Zd3lqRkdGSTlRUjdZdjUzd2FRSVNpWUV2UXRGQUZXQ245Q1JlUnptY0lvUkFGRklWdDhj
/// QUhZQzRFeUxLekJ3bGJOdDFNOUJlaC9vYlBBWVNTUjZHQ0t3aGxoR0xnNVRpcWVreW9Ld01vWlJVUmhCVXdCbWNFNkJTa0ZvNGp5T1ppQlo5R05Qd0h1SGhTTnNuTitEQ09QNzVvZW0vUjk1aFhhYndqRVlTUW1hTzFOOUIwT3RWN0EwN2Qvbmpnc2UreG1OamRYMStDWUV4eUVyNnNsdXV1a3ByRHUzQWZYUzVZY2ZOZE50YkZYUm96Vm5tWE0vbVZNVm9TZG5PZWtqZ05QejBFSWJsc1VFTEFkdU5uZ2U0TjdKdU5ZZ1RjTEJZWW1GSlUxaXNtSDFpa0taR0VyNXpoS09RNlNTSUM5T01JT0dCMm9YUmdHTzA4Rm5QTmNhSGY1dnczSTVGUFJXY252SU9YQ2pvTUNGQ1hhU2dHT2Vrc0ZnNjYwQXY3OFcxaERpdzJVS2dtaHhJcEhyUEtpblFyamJDU1BGWVFWRHFDMWdPMWdJd2h0
/// UFllOWhEM2VOczhzVU9DU1NDdHc0R1VjTkFBNURWSVVscEFFcllJZWFadmFTTGxPRW82ekdBRTdBTHlQbEFQM2dSWUMzQzRiQlJmY0xnREtBZG9KeEdQRi9POEQ2eG1oZjBIbENhYWJGNDF1RWRBQktCN3JGc0Z4cUN4c3ljT3RDMkt0ODJKczFCQXlRN2dLWVNaUVlRUkdONnFZcHdOMEc2TklDQUI1REVTczlDQ0VycUQ4SFFVUkFHZGhaQWRSSkNzaU94bHdQUWlROWFOYjNCeklBR1NtTmNQUENMZ3FqOGZrQStYRldpa1N1bWJFcmZnKzZ4cDkrWUN2S25BRUZQdm05NytST0lBMXpPYkhuZ1R4aVI1Zmp1aXFpTzUzOGxCMjc3c1h2MDd6azd3NmNIOXNqd3krczREbkpJdDF5SXUzTDBxRVltQWQ1QVF4T2VFUTdIVlV4RHJKK1k0eUhxUU9jcjZkTk5wQkdXT3Y0TnZLb20w
/// VVBGc2xIN3MyNU5HMmtxaE80dWl1b3Y5QjZDYm1QUlh0VG11RlhXb3doR0NkWlh5SWV4MmtVV0JhakJSaWFXaDFRVFZiQVBzQUNHNEJvSlJQQTZnc0EwYXI0amtXSnRqbnh6R1NDT3d5RUVYQW5idExFR3dlSU9KajBUWVBiZEZad0FXMG5nQlhzWmQzeXVFQVduKzFuQ0RrT1dkeU8yUnhPMlpGT1dkSGRjcU83aVRnZGM3aGRSYnlJV1gzMjZhQTdsbFIzYk1nMG83cW5vUG9Kc1NuUUNVNmk2UFlMZ043Q1lUaUhCc0pCNXhxYkkyZktPbC9EMENTSUZLN3ZGaUhnbmhJNFUvS0JaSDJzaGhIYVl3VEN6SGZXY1R2Q0lVVjhoMVN3eDFUd3AxVEl6cW5jYnFrYzN0a1JQZks0UFhJaXUyVUdlT2NGZE14TTZaREp0ODVnOCttVGhtOHJvS0V6b0w0enRseEhiTmoyVjg3cFBNNnBN
/// R0YzSjRabkY2WjNKNVpYQkJVbHh3VXVMT1FhNThkRG0wcUNNZGVIbTBuandaMlJ1RkFMVCtSODM4QnRsa0N0d2pvUXhiVFBTMW01VGRwMTRtMmdlaXhpOE1FM2tZclpiQjQrdlpmU0J4R283SE0zQWhrVmtDdWJqbXJYSlMvWTJSeW90UEh3VFo3d2h5Rk1iWVNIblk0aVlDVnc2SFZndmEyc3pxbVcxNWlKMVZpMTd4VkhhVHhURnE0VFhwa1ozRjhWMkdjdzk2d1hsbXg0SjcwVHVYMVNlSDEzOC9ydnkrNjMrZWNYcnNpZXUzbmRFOUI5RWpsc3VpWkZnVm8vZk8vR2V6VG53U2J5WGJvbHNKeDJoZmFTeFRYUXhLUGZiM0p3ZlppWG9mY1JEdDF2Slh5OFFaS0ZRTkhyQlV4TnZLbkF6dmJzc0tzcER3SGRRSWppV1l5UWhoQlpOZmM1ZDJ5ZWIwemVMM1NveUVQYkE3WlI3ZG11
/// QjI2SlVjQzJCUFluTU8xZ0hiSDRaNkEvdW14MEFZTTNoYzNkSC84a1AzeHc1SVRocVVramtoTkdwNmE5UFEwTFhGb2V2eVFqTmhCYWZ3QmFWQ1ZVVDJUT1hEYnpza1JIVk1pd09xYzBpT0JocHl5b3pvQUpZbjRqaEsrM1JNbC9lK0J0WXdQd21URVVZeUlpNmtrR281MGtzUjMzeFU1OE5Pb1lidGl4dTVMZEVsYjdaRzFmcnB3bzcvb2xTVzVid1huN3dndmZDKzY1S1A0STU4dFA3NW45WW45YTc5S2VlSHJkTUQ2cjlMWGZwVzI3bVRhbXBPcEw1eEloVFN1K0ZOZTBjZlJlUitFcTk0SmxiNjVSTFIxY2ZicmdjSlgzWExXVGhDdEdwdXpmSGhtL01CMGZ1OWtySkZPKzhPQmpEcG1JRWM3Wm5FZGhORWdHV2Q1bkxNaS9ybmtBMDY5blRnQ25IUktIeng3Y1V5dlpENWs3QTRH
/// QlhyczRqQ1k2TmdObGpLTS94eHhRQ0JDQVFuNE5Dd3NCL0VQWUE2akVjZXVHR3VJNFM2cE8wVWVyVHFWNVpMN1NxZlBJcHoyUm5ZVnhUdkxFbXdWc1RiNUNkZ25uTXUzeVkrMUIxSlhSWU8vNmlDS0FEL05Tc2gxVUNRNHlCSzd5VmI0bm5oLzQvMmlEK3ErZmVmaEZ6dnVIWG52enBHUGJ4MzU3T2JSUGJlTzdidDlmTi9OWTUvZlBQemg3VU03N2h4ODk4NUJTTis1ZmVEdDJ3ZDIzQ3A1NjFiSlUxUEF1OWVMQVcvZlpGRUUySEVEQVR0djNpcmFmcnRvMjIxTVlSOE92Z3MvdFZ6NExJQ25RQWJldm1OSklUL3YzTGFrN3o4OEFuaXY5TWk3RkRzZVdmQmh4WmZ2MTM2VmVGMCtzZVIxaDh3b094SGZRUmtIS290YUs0UG9vd1V5Y0c0UjdFOHNnSHdCN0w2akt0NWVFV3NuaTdP
/// VnhqTGdYS2hYenZ4MTE4dlZoOTk4ZVBpZHU0ZmV1NHRTZ3B4Z0RtOFd2MG1MLzJRS2VPdEdFUUQrWk1zQ1Y3MTk5K0NPZTRjK0xEditVZm1YbjVTZitMVGk1T2RWWCsrdS9tWnY5YmZKMWQ5bDFQNmNYZnRMVHMydmd0clQ0dG96a3JyZnBQVm54UTFuSlkzbnhFMEkyQUhJR2l3UWFjL21hSDdOYlBnWnJ2MnM3TVJIRDcrQTdMMTE1OEQ2YytJVnYyWkZmN04zMGNIM3BzczNUVTVmRGNiWjUxTk8zN1M0N3BseFhiTGpuQVZ4ME42QXJ0dElIaE1DU3VscGdzSVFBUDlFRWRuald3OU1XWEd4bDFoMjREU0FqR2NqUlVPQ1J6Z0xZc0FSNkNsSTdKRWUyM1UvcjhjKzN1Q3NGVk55TndWKytUSDN1K1FkbDRvL3UzdzQ5ZFpKYWZtcEVzMGZYNUc3djVLSzMwbk5EYUs1U1RSZ2dZ
/// QzdSTmVLaDBSWDJnWVBpYllGdWdkRWU0OW9iNUdHRzZUaEdxbTdTb2NqblNUM0Q1TGJlZVNxMkhndXBmR25YUlhmdlAvZzJJNDdoN2RkTDM3aHZEajQ1R2ZUOGw4ZktGa0JtYlFSUjdjSzRSbGhJNDFDUTRNd0VGeFVKUitjcHI2cHNTK2VUTDlQZE1BWmRCSWxKUTU4Qzh0eXh6OUlIQWJrQ0VNemFhU1RjSEVpblliT2FhMmhpMFUwR3lFd3VVM3FUNURicjErVVRSS3Y3cDdEZHhJalFUcElveUhRZ1BnQ1h6Z3BvdkdkSEVDQllBTmpGb3c4eXE0d2laSHl1MmZIci80dUF4eVdHNlN4bEpqdmt1WUhwTG1LTk5jU1V4VXhWUklEaTNKaUtIdm10QXJqSm5Nak1WWVRZem5SbHhOdEZiNEd4amZCbGFUK0VhbS9TeHB1a2FaN1JGTkdkUFU0TEZjSFoxWVE4ek9pbkJqaFFYQXRm
/// WnlPZlVRRi9xbUJQK0U0MUJBbzB5M3M2OUZkb3p1UGtHR05VczNGaVlJWGUwaFhRTE9BL3FRTW13V0liSzNsSEh5RmlXL20rSXc4MWtvTzhRajdvZzZGaGtvZ2hSUG8rMHNwQjBJNWFIK0FOV3lVOGVEM2JyNmFkNGxvN2hIOWszTDRxNVRDQkNnanBrY1VENG5wQWNWRFlyNk5XdDVVVHN4VlZJQzFOSVVMd1I3bzVmcEtvbThkbm5lZmFCNFFQVlJjR1lyRlZJSG5td0h3YTJ2RnNZQnI2ZVZ3S3d0dWs4YmZHdThkdWZHcjROeXhsZm1melJOdEhyYzNzZDhlZnErY3hPN0tGUTd5V0hSVTBWRVB4NGFuSko3SkE5ODdFanNzc1RPSWo4amxXM3JCVkNpbHpxS0lUbG5oM1dXNGp5L2dWRkZNTGppOGtmZ0tBNkw5UEE2ampyWlRBV1h3T3UrTDdMa3pjc2duVWRNek4wVGtmckQx
/// QjNuV3JlKytxTHY2VzNNbFZGTXBJZmVJaVFYSUJPUURSYXVsSXhVYnpFMzZaaDA3d2tCSGo5VGgyRVdkbnNCQlBNNyt4STQvQU1BNVdoemxhSVFZQWM1a2h6aFNrZXBBWVVwUmdNYjd4UHlRa0hKQ3F1Z3lHYUJnTjRsKzU5VkRRM2J6dTBqaXNMOER5cWhDZzNwV29LMWhWN1NWakl2YUlvM3RsWWJFQVN5R3hJRVRkR2tuWlF0ajRQNWZiUDgrY2VoYWhuV1pkWFNxRm5nNmpmWDFwT2t1cWMrdStIcVdhbU8zZlNIZDVMRzJNZ3M3UEJPQVNsUlIxZ1Z4akR5NlowYmM2MTltZzQ3V0czWGdNelhTMGZSWUhqbzNqSTVVb1ozQXo3TmhwMC9MT0ZZSTV1aHlEd2FpYnlLYUJtTFNOQk50STlIV1lnb1ZURzl2d0lGcXdMOVBBbTcySkpBNDhXMldaVEVGZkJMRWpXWUsraWNjWjdX
/// cWdlcEtJOUM3MlZ4SG1yTnZmejl5ejNMSExENGppNFlRMUZiTnRaT0hPY2pDYk9VUnRKdVFjZ2NZakFLc0FuUWxDbU5VSmNkQkZnSEFkMHpxQ0lqQTdSVThTaHlnSEFtZFVxSS9PSmNQYktWOVRoSDlXUllLS2lBRUxRd0lEYUxnWnFOV1oyN1Vvam1ZekNZYzNZL3JvVFNiUVFNQU9JTWJUZ0U1c0JyQ3lodFVFdjlCamJROHB0MkdkV3MybTB3b0VGUzBacml2dmxKZkR5WjBrZFFYTkY3YzlLdlVSL0pLNzExY2lHdTZTV0s2S09NZHNhc0xHRE9FRVM5bENyak1BWkJlQ0hxeUtzb2F3Q05BQ21xT296U2lpeWlzanlMYU1YT3BqU3pVdGhoa0dNNUl3OERWZFNwTXdMNUdkWlNqak5jbGt6TTBoVDlQdlhuN1dZVzYralQ0RVZkSkF4QWZHRzBkSVExbWs4WmdCdEJDTmRQRkxK
/// cGhSNGROTTFVbEtLSFJqRU1aOVZxVFVRc2swb1NqazdUR1pxM1p4RUtISWdKOW9MSTBOK3NCN0lJSjdKb0pXbmJsQktOR2IycHFOT3NhaUxFT25YZFVRelF6UURQa3hLUzYvY1BZejJPN1F5d1BPbkNBQjVsdmIwUi9BeVdIVVhHczFSd2JLZGRCemdmbnRHZGFIQkFIQ0JtSm85a0V4WUhuc0ZZR0cwMmV2ajEvSHdmb2t4SHExMEpHelNBMEkxWjdRN01PR3BOZnlNUDF4L2VOL1R5NjMvN0lIdGxSVE1yaTV5WU9OVFFVMk9mY1BTMW02MWRDYU5NYVRIb1EzVDlDSEhDaGdiWUxySzhFU29DMURnMkFWc05PR2RRUVBSQi9IZFlpNmpnbVdPSm5CUWdhNUs2ak13aEFNTWdrZUJQUUtxcFlDSG9TbHNKaW1uQVZ0TWFmWERvOGVFKzhYVFk0RktBSzBWYXF5T2NnRGhVbERqbTBJ
/// WlE0UkZ4cmVVTEg1S2ozZnNzRlQrZmZKZzdNR2MwK3UyOEExV3FWQlJRQm1nN1VmelFCQkRDc1pVa3FDMEdBMld1TnVGb010aTVRYmpqSUZoeHYrSlFONzkzY0RFOHhBdWUwYkNCR2FJVHZrNFk3T0wxQ2M0VTBIbXErdlA3NzFDbHBTWVAyUlhWSkRzT09RMW1VdFNEVVNoTHVxT2JaS0xCZHBSNEhkVGZRNDBBcE9Zc2plaGJFTTFsTDhCWHZ3VGc2OW9IVE5UZXhpeWdHUE9JZSt5Tkg3dWRISG5oUFd2WWRCQTRWUkhPNzZXRVRuUU5HNTR5UUJycTJEV2dnR2hXSUFWdEtLRDZ0UHBRT2FDUTdUZFhjYkVEV29FNkhFWnFIZXVwVEFPQldHcHhPQlphSm95VFlnUkpVQXg3ZlVMeFFmSEJQUUlWUVAvR0pjQkNPb2JJMjF4UGpDYzIxeWZ1U2Vramk4WlhLNGJqL0hjVEJGa0hQ
/// bGhydXFqRVRMWWdReEdxK1I0enEybk5SUjNjTzNSL1RjWGRJNTJ4T1QwVk1WM1VzUmgvdGN2LzNVUFBRTm1UUjNWSjRPNzZYWVhCaEJqbitNOFFCdVdhckFQUUFteEVzRGwxZUJxZ0pUTXlBVFVRMXhpOUFIM29qZUc3UWZMWWF5T09BWWo4Vm9COGEwSnRtSUNpRHlXUXdtMmpjQ0NWZ3I2RU5GcGFrcVJrZnIwV0t1VWthWHYxWk9qQTUwVW1XeU9UR0luVXFJdTJRRkI0bkRtQ05aeU1PSzFsOHAzM2NEODQ4TjNHQVViUHFqSWJNYW84RjBGZ2FRRkRONEJCQWNmQlg0SXRtWTIwamFUS1FKaU5wTXBGR0NvaGJVU3Z3SExpT2xSWGVFLzRCcmRUQzNsOFNCMVl2M2VCUFNJRkVHdlZOWUhKMVJGdGpBbWUyQVR6RGF0SjRoWlI5VFc2dVBMSGJYYmltYjNKa2J5Ry9peWphTVR1
/// c2t6aTZpeklPd21FVUVjZ1E3S3FObE93VWtYZ2tQeEpsbGNlelY4VjN6ZVQzK2pSczJMdmg2NzlPT1VhdVFpMDhJZzBOR0lKREpSa29CZWdOSmdqRURYVkdRMzJ6Q1RRUVNrU2dDRkIzNEo3cW9ZUXNkNENFd2ZVeTRHSTV0TVNnTXVCMWdtc0ptZ0NPQTFnN1RkSEJiQUx1YURhQkJhRjJvZTlLeFEzM0JUNkNHK3FNNXFZR282Nmh5ZERZWU5JMk5CdWFtc0VMbzRvRm10b01jYnJoTkNuM3pselhReENETDlvT2dkL3hoQVg5RGY1VHhBRTNvaHdNejZDTlRDMFlHN2luMENZWWxQcExnUWZldGRvWjVLeUk3L3ZGaTlBQ01Da0xIZW5RNC9hNS8xdmdleStJMitYOEhpbjhqMzdOcXdGclJsWDl4NGdEYmdWNkFSRmpKYlJtSm9NR2ZQa0dEYW5WUUoxQmRVTTFRZ0hoV2VnaTBp
/// S0RSajhuNENFV0JhTFpCVU9oLzhKZnFCejA4UmJ1d0NQUW9wNG1sVkhIOW5SUGliR1d4VEo1NEdiemNkaWlQQUs0dzFxT3FvOU1nYUVzMzlMSDBZWTRjUHhZRytLd2x5RngyTWdUdXV5UCt2Qk1iaVhSNnA2VE9DQ1BBRFJrS0g4ckhRS2dDRlROZFdZOUFJZ1FXZzhzR0I1cktTNWMyVkpvOE9xYkRPWUdveGs0Qk9NVXVCdDd6bDhRQjJVTXRFSXFkZHpnVDdEYmlzWWFxdE5RMVFhaTBaanJxdzNtK2xvY2NOejQrYjJqQWZsYitxZEdkMDRPNnlIbTl3RS9LNGRySjZVOWFEZ29HOTBOb0YyMnE0Z1JCVEZIbDJQOG9naTNLbHh1bnhIZGYxZDBoSHBIeWFOZnIrZ2UxaEdJTExBbmdwYkJZSURRbGVhVnJWUElpUWw3SjhDd1cwQlpBemJRUXpyYUVnbVZPaDNVbjlCcnpicW1a
/// bjBUaENlNGxoY1ZwNlZnN0I3ZXRJMU0yTWVDYm9CY3daNXd4Q1Q2TEhScUxOVkRlZ2tJdkpMb0xwRzZwWVZ2OThyZzRUaVJramhVaGllTTZDL3hueUlPS0NNNEYzWG9RbEsvdEI2c3pBZ3NlTER4RDEvMUc3MFZxL0ZGb0pyTEZNVllGVVJaU1VMQk9jUUdzMTN1L3haSUhNSndXMFZzbjlUWVBiOGZCTHZDaDJGTGp1YUdSZm4vUVJ4d0lXZzlVQVRvQmJ1MklyaU9XQlpvSWZUUU5vUEhvYXVtblpxVlJBK3RSRk16K0puUTFJREQyVDdWMEpkSDdWSUllSFJvcTFvOWRpNEE0S2JnOGFLUENyZlNtU0NDQlJXRTJKWVdCbnNKektYRStBdXBXM0Q0dzg2WmNZd1lmUTFHeFcwbERwU2VxaTF4dFBRcjQ4SEhpWVAyY1FCeFdJbWpiQldKM1pONU84OFdRRm1lbHpoQVV3Ri9FZ2RZ
/// Q0tSR1UwTkRYYjFSQS9VTmNSeFVTaGxwQWhHeFhhUVFpb05XUUhQS0JpYkFoOEM4SUY0V3NHL1Jma29vWUl4UDNhaCtVUk9sM1J6c0VmZ2ZhaDk4Tm1OOUE2bHJvSzROYURnWW1RNENpc3VrTVV2enk0SXYzdTIyTjd4elJtUnZlWUpkWmpnUUI0MVd3RWl3SXhBb3c1YnRZSmFITVljVG1HSWVreC9qcUY3VjVmT29CWkt0WDlSZXFyTjRnMGFEdmtuVDFJQWVJbzBqR3ZSTlVGNXdONkRHUUlSNENpc2FYQUVIV3dkS3N0akh3UTY0eExLeHhBRW1qN29FZFl5Q28rczhzSEVLenBHSEhWQVZxais0UTM5QzBBdmdZcmcxOEplR3JwZWhyeWU2dXVZbXlFbVRGcVNJdjFZVHpUWFN1T20wYUhoYXJIMW11SDBlUksvdExlanY4QjhrRHRDU0dyQmlNRnZnWUExNGJMcFQydHRKeC9m
/// MXlveG5STkFTUmpFSFk1aENMaU5keHNqRHV4MUlmRjdpc0FIaXlBbDFVT1BNeVBRcngwRk5nU09neWZxVE9DQVRVRUgvRm5GZ0V3SjNvTytEeW9qK1ByNFZhNExxb1VhdXFhY3ZVKzRoREEveDdRQytOWUJZcVJ6VjlKblNLcWhwT3JXM2xqUldrY1p5dktIbUlYMlpBdmU4VDR3UENUQ0Z1UXo3TmJDckhQNDhTK3FMeUIzM2dzMmR4SW5ZcTZla2d4R1ZvTzVQSVE3TE82bDJ4QUdzMFlZNGJNVFJqc3JsdlZOaVBqOVhWUHVjeEFHaXBvUkdtMW9RRkVzY1JyZ0Q2ajFJQTBweGl4aXVFOE1mT01Pby9qeHAvSTAwblNhTlowamRXVkw3TzZtL1NCb3VFKzFWb3J0QmpEZUkvaWJSM3lYNkNpUVhzQlB3L25YWS9ENXRZeFVNTmlBT3RxY0RkaUEvVUZOWTc3QkJ5NjAxa3dZRHFj
/// TkprUStheWtHcXZ4SE5IdDNQSGlXYkhWTEQ3WVJSdGtxV1d5MjZ4TElHamorR1AvT2lzY2UwSklISlQrb29TUEpYYlJkYy93YXJXTitnTStEclFNZ0JTdzd3UkRhU2hSUWVqY1lELzhNUDlmQjBKQkhJRlVaZExmMmpHTUxCR1JDd3dIMzBHZ2pxYUJjNHhDYTZVdXhlQmFFWmJ4UDlaZEx3TzZrK1RTcCtKdVUva2ZJZnlLUHZTT20zcFBRNzNJRWo4RlBERmRKVWdRUlpWMHZRcTRJWURTZ0dib1d4cmhuY0VHMGRhYnBQR3FWVjMzdWxyK3l6Tjd5N09NWlN1bWZFZjliamdDS2gyWUlyWUdnRVl4UGMrWHJRUnh4SFlReVRIOGVVOEpuQ1NLWWcwcXFJWjVzYkNmN2hjeEVIdEF5MlNoNlRGZUtjbHpRd00xRncvU3VJRDFHSFRhalFVSGVZQXd0eElHdWcrL2ljRzF4YzNsVDE5
/// Y09MT1JlLy9PRFh2TGQva24zd2kveVQwOHAzdmhlKzlZUHc5VlBDVnloZSsxSDA5amVpSFYrTHRueVQ5ZHEzbWE5L205a3VmZTJiakUzZlpMUkxOMytkOGM0UFdlOStuN1hqaDZ5M2ZoSnMrMFd3NWJUNHRUUGkxMzZUYnI2ZzNIeEJ2ZVZDL3JhTEJXOWRLSDduUXNsN0Z3Njg5MGZKem52SDN5bzkwak05MWtZTW9rdkFhUjE1UFBBNGdCR1FGR2hOVTY4N0Nrd0NpUU1FMVVJY2xuTlk0cEJHMnNtakhlUnduK2dPeWhWOVUyUDNuaThCRHh6VTJsTHlaOWdlSnc2THJ3SDZCSDVUS2RGS0xwNWNtN2ViWC9CSndoZjdvZzd0RE1sL2IyblJlL05LZHN3cTNoNlErOFpzNVphNThpMkxGRzhzVmIwZGt2ZHVWUEhIOFlmM3ZQS2RjUGZsSThYVjU4K1NNdURpYWpTRHArY0h5QUlj
/// RFZiTjJBMFBrbVpvYWh0SWM0Tkpyd2RQRGhwajBHdlFBd2lUa1l3TU40anVLMUsrL0txMEo5QnVkcmh0VVFKMmNGQjNBOVNKZmFVTnBvVkNLNHBuUUJVUExHZWtNVjMyeGI1eFBnOU1tblVNNEg3QVoyeTQwR2cyTmRCWWxYNGxBUGFOMktNSG9vRHpzTzNDdG9kNkdSWkFEa0VWZ1ZoQlprYWp2Z2xuWXhtQktDR1NPdEY0WFhUM3g5ZStFYTc5TW9WZnRIT1pkUHZzN0ZkOTB0YTVwNjJia3JGMlN0WUxrN1BXVE14ZU0xSDRncXYwSlkrODEzeUx0eTB1M3ZGQzhjNnR4WHZmT1pHOTY5ZTg3R3ZIQzBwLytiTG0wbzhOMTIrUjJ2dllROXdJMUh5QTNQU1FyZStWRXRsVnpIL09sdy8vSWVLQUc5RzR5d3grSGNnWm1QOGFxWnFUdVhGdzluSTdLYjlOanhRMGxSRld5akJJTWEv
/// dGN2L1hnQXEybG5DWXJOQk9xc1FCcVhHSDZ5OUJOV0EzZXpOcXM0VTQwSmY4TjRrRHJLZ2F4K2RvNG5JL0hMMHpab1I0amUxblFkMnplRGFmTCs2VUh0RWhJOEkyTzhJbWgyT2Z4ZW1VRnRWblgxVGZ2VkZkVXlPY015TGcxMmRKTzZlRmQ5NGYwbVYvVU9lVTRJNHBvUjNTd3h3end1Mno0TFljSmoyTVNRMjNUb3V3UzQ5eVRJL3VrTTdybUI3VE16Vm14UDc0b1NteG5RVjBqQWI3TGtDTlBqYlZlTGFEZ3hJSEhId2FjWUJqZ3F5Uml4NkhnNUlQdGVBZzRkdUw0NFprSnFrZS9BZ1UvN3pFQWRZQmdCWVl5UU9JQTlwL0hEZ0RYb1orV2VhV1VSL0U5UDZZT3poOVJkKzArSjc3K1gyeUVqcG1jSjB6SXlIRmNkWjBtR21mak5pK21YRTlVcUloMk95N2x6ZG9WL1Q0UGZFQm9s
/// ZmV2S0QralZSQlN3RFZDQndCMWRyS0ZQaVc3bWtiNUtlUk5OY0JjZEJjNFpXZ2dxRGFDSWhuOUE5STNSV2lFWkUvaGlyV1dLdGljZG9Jdm81Rm5nVXBnY2NCTW5TUTB2RkJVbWpQRWhocFZQZVNsNGFucnBKVm5RYlZnb3pVRUJNNEY2RE42RHhyVFdnM2tDbnFnWUFBSUFNQTFrdWlFY3lmK2NTZkFSakZBTE1nY1ZRMDFvQlRCbHkyOThxWDRZVTdwd2hlN2Y0eHFCQy9YeklQM09kK1dmRjljdUs3WmZNNlpFVFpwb1U3NWtRNUNMbU9vaWdIY1pTZE1CTGdJT1E0QzZPNnBFVjNUK1YzUytWM1RZL3RrUjdYTnpOeGFQcktzZWtyWitXOUVaaS9qZlBqdmhjZTVrVS9sSTcvNFUxcmlGT3dDNnk5RWYwZC9sUEVBZTBRM0JjYURkcTNiaWdqZFlmckwweEtXZEZURUk5Nmp4b2ZC
/// VlhsSklrQUx4cFpBOEx2NXlRT1lGQ3JuUEJPeW9UaFdTdE9hSzVCN1lKV3dZT3htWUVjc08zQ3Z4dXE2SEJzVXNNNThtaU80Slh1dThJZHhCQVdCVnNYeHpQRk1UZ2JNby9ERkhEdzVUL1FueUxhV1lUQWZqVnFwZTBCTWNYVFlLV3lnRkhUQ1VWQW93aHdsWGxNWVN3MGliWTQ5eUhPVGgxckpZdXl6b3pvazhrSE9FcjRxUEU0cnh5VkhoN3FRS2Myb2ZUWXkvOGxjYkJ2VmFUQUdqdzdVZXlJN0pXRmowNDFFTzIvUVJ6b2NiREVRZDBOOEpZZkVQMTNwTUpYOE1xUWpKVmRzdUx0YzJLWnRBaXJ6Q2dnS1dBcmUyV1VneUxLU1I3VlFZWXJUVGpKZWFDVWpDalNYc1p6bHNkMGt5WDBFTVIwMnhzK1dyQTg1dkFudDAzVnJTOWMvK3pMK0lzTnNnR3FEUDR0RU1lZjNBRUtBRmxz
/// d081NVVNSUhwUEZMVWpaYXZOcFdFWXN6bnFEMW91Sml4UWd5ZEpTQVR1TE1EdnVEcXhnbFpuNU15c3FTeGtzUU9qWFUxN0ozeGpZSk1nSjNwL3JkWEtQQnAyRDNyNlVqZ3c3WlFBNXR3eU1nSDhxdHRLZllxTlZBZzFwR2pEblh2dkg0ZkYzUEQzZ0RwUnU2SzlZNkNQaTJBaTZURlFITklZNWJvN09LYkFyamFEN3BqTTE4cmxVZTF4cHFVQm1LOCtoeE9sTHJRTmhZUmhGdkwwL3NLRTNxbkIzWElUbXlZeXEzaHl6QldaMkkwelhnWkZBcTFXTVc5Qy93SHlRT0VKd09wSWZ2bVNGeXEvdjhqNE1EOStJWWZ2cXlNTXBaSE5WVndPa3U0SFFVdFNqOTh6QWlXSVVqTkp0QXZkTFlpZElYZnpEZGJZTEtnUkN5eFpPMC9QUHZFZ2Q0S0UzNFB1L2h3cXdOWTNPV2QxUEUwK3lGWTUx
/// QllKVVhpYS9yOHJBNndlM3ZJa0xZeTduV3lzZ25nVE1VbjRRaUhHb0ZnTndCUGhkQUhtNHREYk9SUkREWndYYWljSWVjTU52MElJZXMwTzR5WGk5bGJDOHB2MWMyU0F3WkFYVWRSekdpSEVEUmNXMFlLUlVMSEVjL2pycGo3Rm80QUdTdXg0akRTaGtOeElHV0RNUWhpQmtyWEh1MDl2Y21mRmYwZk1UQmVuYXdqMjJwQ2FQM0d1cHVLSnF2akV4ZDJVTzh3amtYekMrQlVjVFlGYXh3d0RZOHdrWVNaaThOQjloQ3F5NWxwMjlHV2g5TXhHeUxndUFJcmlja2lHQlNna2J0aS8ydDhhNUdBd3lBRzl1ZHdmb2RiQWJhYmJSVngveERsdUFhZ0VVSFlLK2Fqc1l4R3N1YWE4NlRlbmZ4K2c2U0dLdjhXT3B4dEhBSGRoWFJ1YndTYkpDYzhoUHNjeE9za3NQR3BxNUl2djFsRmRIb3Ni
/// alVQdUNld0VUVlJ0TFE0dHlpbXFGQVdPYWkzUmttRGZhTHMvdjRVd3QzME5mdFp2REVjWUJzWWVuWkJkbmJPbThMZGZ3czJpRXJ6bDRlajhzZHFmaFd1WHlyL0Jpc1h5V0lLQWhIbENpQ3NTdFF0c3hHR2Vxb0NuZFNoTm5Ldytqa1Jqb2lBUkhES0dOdDVIRWRwUEhkeEFtZHM2STdaK0I4UXFmc0tGdEJKT2dNdEVDczRUd3Ivb1BFQWZmUzZWRm9PbUlFbjMvekQ2S2UrNkk3cUpKdzFJMENKMS8yenVJQU9nTnhBQmZTOXJOOTd2OGFZQmk0bklrb3lra1E3VjI0NVRRcDAwTE5HSXovRkhHQWRDcEo3Y21xczI0ZjhVWmtKWFNTNE54SFJvS1RsQzEwUUJzQmF6QkNPVTc5QkRoSm8rMFVPT083SFVBalc5SDJPQmcyYStGd0hJZUVTeUlkeFRnL0dwaTB1eUttaDRydkxJNXdG
/// SVIya0VaMmtFYzRpTUs2QUV1S2FmSEJ6RUJjdVhndEtMcVQrT25FQWNDRFR4QUh0R05nR3hpbmlLSnRzM2l1OGczZjZxNXJuNU00YUF0UDVjeWFCRFNrS0RIOVphTE5OSjdydlQvR1BpZUdnWVpkUmpzZ29jWXpsZ0ZaT0Vvak9raHhJSmF6SXRwUkdZM2QyN2s4eXl4TVZaUk5ZWHpINGhXTzRJd0l1RzQ1YTg5ckgycTExRndwY2JRR0xKWWNQTDdSYkdCN0R2dVFLN2pNb2dOQUhMV0UxSUFPR3F0Si9Zbm02OTZTbDdxSWVJd2dERHRIMlhFY0lEY3dFa29jVGhKT0p4V2Z5UTV4VXNlQjFRM1BTZ3JKZS90WS9lKzFSTmZVMUlBMHdRSWVBSUNiTituaDBWUWF5QkVzd04wQTdvQzRxUlk5SUtTUEZ1NWczMDJiR3pVTk5kZ1JianpRZUhYRFQ3THBzamQ2N28zcElJakRhWEs0
/// T2tRRUNpMlBybFJTRUkxRFhhSGlrRHVXTUpJbFZ0Smw5b3BRTy9SU29hNGg1S2NBU1FJSjBrbmhRSXZkNUhFOTVZbmRwYkZkcERIT1VyNmRtTXZraEZrYWttZkVmOVRqQUtsaTdBQWVCenh2NDhtTVhza3hqc3BFUm8xamt6b0xvNkFKQmFBeFFNbHh6TzhUdWY5cmdGV0FvVUtBWUpjWk9mZlkrNytUYWlBT2swNFBKVUExaHNlRDBrREpxQS81YnhBSHRCaWxSS2V1UGozaW82aHUrNk9abERDY2hKb1RBVTYxWFU0a3dFWVlhU1dNeERGVUVIOW1SUVBzY3JqZ2FqNEpteHhPNjc2ZE1Bck1GV0FIUml2a0FleUZRSDg0djdPVEtLYXpCRHd5dm5WbUtNNkpWdk5zQ3ZoTVVSUlRDREZSR0NNUEF1UEhDUlJBQkJBbzRhUUpvQU5rRFJBZzBBYzZSQzJFd3NvSGdMclNsampBeTgy
/// THdBWk54bldVeG9ESEFjVGhtZi82R2ZMZzN5QU9NQVpJMGQyZ1BhUEEyRldVT0Q0cy9iTDc3aWhIWVp3VitNK3lHSWdMT3F1VE9vcDV6a0p1SndFWFo5a0xvcm9JUUFHaU93Z3hicmZPNGNBSm5SVUo5bW5odHA4dWhjQnc1c0h0SDk0NGNKL1VZK3dKeWtuZnZMSjZ4Y1lzVDI1b2xxQnNPTG9CUzRHT2JtdEFnUmFPYjFMTGllNjlzOHFKbVVtUURhQUdPeWwxM3l4T0Iwb0plQTNJdWl2b1o4cENSelZHVXIzRnNiMCtEWG5oNS9SdnpEZkFwVVU3Z1VkbzZMUVNZTEZtb2pIaStKZFcvd0xNQ1kvU1BBSmxWRUVvUTN0ZTRGZjZFMXdGVGdmTzlRQ1JnY1pXWVp0cU9GeHphZE5Qa2pGWnEzc0prN29LRWpxSjRweGxDZlpBdTFEZG9sQW1IOVFnRm1Qa1FxQlgwSVJsakRLWXJs
/// MUVXWThsRHBiK1FBZmtTRDFXWXRSUEpqTUVvaDRiTVRqRlBFYUtEVlZiQy9vWCtBOFNCOXdYaWNQUWJHbzJWaERES3ljeStxUlNaY3JGemxFbmNUUW9FUGplamhMNjlxdVFscnhkN3Y4YVlCVU9ZbTVuYVl4ZGVrVElqM3N1a3dac1U1cTBVSkoyeEFGVkNCVkdPN1NmWTRNVzR5NnB6Mzk0ZXFua2JmK0N0eWZsdno3bDBEWVgxY3ZlcWxkOHBSdjlKQnQ5WkJ2ZGxSdGQxYThBM0pTdnVsdnd5bCtsMDFTYlBOU0Exenh6WC9QSzJ3eVlrYi9OTDMrN2Y4R2JBWVZ2emk1NksvRGcyNEdIZHZnZmZXdmV6NStNUGJnQkxBcVh5VkNHTVFVUnpPRm81b3RZY0Z5cDE5QkNIQ3Jzek9zb1Fqd3ZjVUFZN3lTTGhhYkpQcFBuVjdMOU1xbldQU2R4d01aYUNMSUc5Y0RCY0d1SS9pcHBl
/// dm1zcE85ZVhuZEpvZzNMbSttaG5WTEQrK1R3ZTRqaXVndGpld2hpZW1UemUyWEVzT2lkR2R0bGYxU3ZaSDd2WGR3UmUyTG5TRjdmOEcyR3ZPYVhXemc4QWYwTFlJcTJyMUdBUVN5UGYzeXpHQ1FBS0FaY0FKbzFWR2Q2SGJnSUVCcjgwSHhua1d4TDd6MFI5dG5oRGtvK0tCNzIwNlBUUVJ1dGxpSG5YZVJSTm9KZ2gzd3d0bkFJaDVtOVM4WXFWNGNmZnY5azQ5VjdwSzZPVG4yc00ybnFET2hzQU5qQWhJMUt3S1F3TXlBTU0rN0RFVGpPZ3ZWRThLMEt0R0pJT3RqYm9XL1dBWDNVRThNOW92K2FsTyt2K3luaCt6VDNuQTM5UCtOMytaelRLWTNuTEloaDBrTVo5TXJCKzRENEJYdzBhRFBBM1lqRVdsWkc0MnBBdUJvclN4OVFDcm9naXhwQ0hoNDZuZ3FlclNvR0FrQ0lnRnB0
/// NTVud255SU91SkhGWGRRMGc0S0JTbTA3SWVpZkhNZEllTWlnQlVqMnRFK1JieTJEUDRGVG41ODRoSndleWdUSGpNaTQ4OWszY1RDVjBkQUlOZmpQRUFkc2tPMG1Zaml2ZWZRN2FUaERHcy9pak9hYSs2U213bHhWYWE1NlFLcHVrcW8vU00zdmlMcEwyR2xmQnlkY2V5SzlTbXF2a21yWXY0NmZxS2kvUWVwdWtzYmJwUEVCdnIzWFA2SnpSaC9oVUJIZExhSzVSQnBQazRZZDkwdmMxUzkzemNMMWg5Q1R6K2ZpbUJjbHZuNWlqWjh1VjRjQk9UaHUwSFFqK2JZbERpVTYzbTJKQTFqRFdtRWhEdFF6VVhnSGVWeEhXWnhERm4vdWtYY2hNMW9jL3YzOEltS0pnMjNxbTNIMC9YVWdqbFBDRWFtSnZRVUpUdW1Sdy9KZkdDcE42cmM3YkhCcWRKZU1tQTZaTVoxUytWMVQrQkRMREV5
/// Skg1NjZZbXpxS24vWjF1Qzg5OWNlUzAyL2N2eTh1YXdLZTVkdzZpRGNIZFFIS0FPQ0ZId1czZjZTT0hBT0NNNGhBdk9FUHlGZjRHMkFDalFTVWszSWZVSU9ObDVaZVRKbFRPYktqcG1SakNDNFExRThORjFPWWpxK0ZoUVBoRWE3a0oya1ljNlNzQTRRamVaendNdkRkUXlWSEdqQW5WTWp2QlN2YnpxdE90aDg1d29PM3NIeGJBM05taVpESTZ0ZHlBU1VPQUNXd0VUWGpDOWw2VEF3Mk9BZzYvbWl0ZUcva0ZVOFZsTmQzdGhVQTdRSENseFBqSStJNXB5eHRLajB0N2QrbEMrUWJCMnhrejlhdUtadlRoSzR0T0NhNFlSM2RSejY3SXBvV3pCcEtjZGVqbXZRNG5LWlVBUU1ueW10Z0hyazg2Mks0ckFyUjhIRjJBY1hmSHJNZ3Y0Ri9vTWVCeEFIM2c1cXI1bFVFZTMycjBYOTBo
/// TVk0SGgyYVQ4RjhIMjBBenQ2ajFMSmN4RUhtSVNWbU5OVHZhSjdhdlRHaS9KN09IN0pxTk9neHdGVkJsU0J6d1hRUGc2S1o3S0tscE5weFRkaUxZTjA2bEQ1ekkrYTYvWHdsNWsyYXpnZEF4OEErZzB0UmhNZDZzZk9SM29TN0tSR3VGZmJnMVI3V0NjZmV4YnBwRmdEZU1EVlJBTm12T09zWW54eVF0ZFVUdGY4SklqOGtUdkFYMUJTWUQ4RkI2RkVqd05ERlJHS0VjWENHZ0Nrb09zS09BSGRFTmlocnd6b3F5dGdEWFJWb2hsQmVFZEZmRmQ1VXFmTW1DVkhQN3hITkJvY012VWN4SUh5WWZNUEFrS25BMDIza2VqdmtLYmxYKzNydXplcVcyYjB5S0oxcjJvTzdTTy9mUGJvNEo2eTQrOVVuZHhlOC9XT3FtOC9xUDUyVjgzUDZZMW5wZm8vOG8zWFRwSkg1MG5UYlZ4WXdBaGVo
/// ZzVhY1hULzhYVWNhQkg2RGMzWVFMUE0wVW9jbUlISFFHV0lnQk9nYmpBNmdERGhBV20rQ3I0R3FYL3hqTVQ1clVYOUpJbGRjeE1ZNFRMcmZCN3RIcUxxaDUwRlNCekFyU0FvRzBtWUhWZ2drQ3pnWUJ5dWlncEVySWl4d3hXSmtxYXBONjgvS3k5cXZuNE5sOHd3UENMMWRPUVZhQUpMSDVnOXpBOVVLelNaVFMzY1FYMFErQlZPTTVqZ2IxQUFvNzZwbnVVT2NGeWFHeHR3eUFtNGZTMnpHWUJCemhnZkhtcTYrdXIzb3REaUR5ZW1yKzIxaTlkMVA2OXJOaTRJNXBUTjY1Q0RzWjZURk45TTJRS1ZvTjhCMmVaYUZjV2dQeUlQczNnZm9EbXFLR3NjdDlMZWlQNE8veW5pZ00zU1JpRDNtOHFJN3RXdnM3cGx4Z054Mk1xd0N3ZVpuam9PdEZXa3JQRjhCY09lWkVkeC9Oams1Y25Y
/// dnlnaitscHpJNVNrQVp3T3RqQmdpZUI5NEw5SUJMQzFrZ0s3dGRHNTFweXkxNEZFZ0FXZ3N2RnZPQWczWWZIblNRQjRDcjJ1OWNCekFUZmNBMTJpNy9hQk5IRFFlWk9HTkR3Z0RXdU83UUdQdW9zNkFVbFdHbW9IM0NHUHBGeUExWW1LVG1YRnhpTzJNa3lwVEVDU0xXS0VIZUNJWE94MmRSWURjZEFMb1JYTjU5am14akFad1YyVks1eFNvd2JuckY3K1hTYjR5WTA0NitGNWlBTXNnZTBtQktHRFRHSFhoTFo3blZRdE8veHV4N1J3Q0tBNnBZZUgvcnp6VzFKeG16U1VFODE5ak9mTjk3RDl4OFVqSHBMbU1ycUVSQVhPQmdJamJ4Mk5qcFBBRUxUdFFWNXFFUm84eFJLeXNFSkgyakpUczZUVnc2NzJBaUtsNC9xQmhtNFJBN2lLV1Uybmc3NzRxT2V1Q01oVlowVXNYUng4bVZV
/// QkNJM0RpZzVkZXBxaUtxTG9RQnVwNTQ4THFZTkJBbkZRU01GVGk3Yko1SUxyTkVteElmYm50S3lHWDM4aDFUZm8raWtRYnFDNkFXV0I4VU5PZ0lkUmFZQSs5TTFOUUN4VWt5aTlOUm0xR3F4dmFFdXdzeFJJRi9rTzNSRTZmb3dGOXBMZ085MEdYRkRHZEkzVUgyKzQvdW41UTFINU85MzN2VGppMDZUK3V4SjZwTVozem81M0VzWGJTdU1aY050UkI4RGppTExKajZXTDRFY2c1QzF2K3NFVi9kOUNISllORlF5OThZM2ZaRUU1Z1RqQVAwU21oOHlCY3JmVzF2TUNhbGNWWnkrS243cDdwZnIyRDVWWWMrQnZrRVljY0VoMWphb2JxM3p0aUFQMXZDMXJZSTNpQnRjQlFDS3NVS0RlVzM5dkMwdkw4Z1J3YllsbkJqU2NkSm81cmttQnN4NGcyem9OeFBWYVVuK0wxSER5M3VteVA4
/// S3hNSkdCU0ZzVkNhWU8zdkx6Q1FxSXVBQzdRcHdrK043SzBxc0tSd280TnVvWUd3RzNtMko1bDdTWW9Xa3JYaitqQk1kYmc5TitVVXJQdUtGeWcyUXBjVkNoa1NZcTFtdWtja2JlYTdnd3FpTGFLU05rb21UbC9rZkhTMGxqSTJuVU5Sc29JMWprL096NFUvSW1PbXdVYkEzK1lJa2JGWmZlRVhiUVVNMGFJNjZUVWtZTWwwbGpnZjdTQi9lUHVFbldEOGlLN1pURjZhaUk2WkFYZzZ1UXMydC8wNGx0TFBPeXNMeG5RZUtnZmpFMjQ1UXk1TEdRMmhRbldoWEdXeWw1VEhhRVZYSklseFR1bU94VmZwSlh0NTFYS2lwK2dhQzFnZ1paamZvR3N4NWFMN05HbzhIWks1Wk1na0thbTNVR2d4NDhFTWdwam8ya2FBbGVRTkZZd1lMQ0labTBBTjB0T0ExZkRRSGJYaVdtSTlxN24xLyth
/// dDEzRXRlTURjTXkxdlJNUytxVUFmU1JZQzlQdEZIR1l2YWdydEdzY0tGL0c0aG5DL2cydWNBam9ZK3B4Ny9FLzJYaVVNZmJDK0k4OXF6K3N1WlNKVHJiVUYzb0xOQktvbXIwQkhHQWJmd1ZjY0FKMUd0RWNRRFlwclFkNE9CVGp3UGdhZlF1endNUU9uMjRKWExCZStCS1VPZEl4Y3lzRFIxVG94MktWbUc3VndSYUc4MklJZFo0UWdoL0E1WTRjdkVWNDUvRVFUME8wQzFuUlh3WFdXTDN6UGloK3hJL3ZRMkdEUUVYT05zb3BXZmNVRzdRMUlNUzZWRmlUYlEzQWV6aElpbWRJbnV4ZzRKdkpZdDBrbkdkUDF1OEtHL0xOOFpydFJqeGc0M1Eyb0ZVRDIyeURwcmladkN4dEFZNjNlK0pWS1BIdGdCUy9Id2ZYQWdOc3RsazFHTUlnL1BUbTQxbWc4NmdCNllBUHFKRHFob3FjSTZQ
/// NFJhT0xyLzM0ZVdTZVlxdGZUNE1jL3BvYVpmTXFLN3lPRnNwRnhmMVVvYlREd1dBQTArak9hcUJMSEd3ZmdkMTNDaDlBRUR5Q2x4REZOKy9pSEU5WkRzVjMxa1oyMG5DN3lMZzk4amc5MCtKSGJDVDY1cXlLcnp3ZzNjdkZCWHBMditHRTBrTTk3RERBdjBtbkN3TFJXZ0NUNFFONjhBek11cTF1a2FkdHNrSUdvdFJGVlZWa0U0YnpXemxEc3FTZXJPcHd0QlVqa3UwRVhEWmJoRHphVkovbER6NDVNN3g4S0tQSisxYk9XQTN2MmRxakZOR0ZKTVpoZ3UxRk1VenhYRllVbHpMSHRlRnR4YUhQNS8rL0o4bER1eE1UbkRJaXZGUDMzQ20rV0VsQVhmUVdHZkdoWHl3RUN4eDBERWRZT3Iva2pqZ1Z3aWVjZTJERnVJQXdBM2FBcVFGZDRPVS9ncUJPR2lDU2RmY3pLWndMUWJpdUE3
/// Rk02Yllmb0lKMEE1NWdBSDlEYUo5UkpxK0pmZGNkeWQxU1k5MXpGdkZTTGhXeFVtTU9NcEcvSnl2MDlvUVI4ZFc0bUJmeDhpNG5mS1dkeFRIOWNwTUdMWTNRZHh3OWhHTjBsa3BQZU5tVVc0NktSNm91ZDR5cXRKNHhuUjNndlFGUmhES2lJT2RDK09kTThMNzd3emIvS1BnSHM1R2gxTENLVFFRZkhhd2ZFNHJ3UUFoVmJNR2JrR25qUnJaMmJkMGVxSHhQdEZmSWJxVDVPSGUyOGRqRDM3bWtiSm15RTVlLy8weGZiUGplMGppdTZrVG5WUXgrUFVNY1loVlBzKzZFQmdoQWtVRW9OelI2bmZBVG12WXdvSTlBaitCQ2RuSUltSEhYbzZmUk9vb2kra2tpZTBpaXVrcGlPK1pIdHZ0YzI2M2o4T0JpT2NkL21ETGc4TnFjdU1HamtMUVZ4QU51Q0dvZzZDV1dxT3BpaDIvVHRHeWdR
/// K2wxK09jZWlpcVJiWUE5RWtSWmoyK1ZJS3JRWk9CakNDbXE4YUpsN2l1elExMHJMUkY5UmRlLzE0NFc3UnBXSEo4MS9RWUppc1NQNmVBL1laMGpJd3cyRTRZNll6ekhoL1hrTC9ILzJYaVVDVjBTT2NIeWQ2OFFlcXJjQ0NPc2M0RThTVXRCS3RwejB3Y1dESHRpUVBQK3JPRlpGT3NTTEQ0SjQ1RENuZUZYUXhpbnpGRlFCNGhlMkI0V3ZZbEgzYlg2MVJWWnlaOUZ0OG5JNkd6ZkFXVEdlR3NUc1N2Q29paVFXWGJDK0Z2QUxJRi82S2xqd09KQTFTQjdWV1ZSbmJNVFhJUzhIdG5KRXhJWG5XSTNINUVGNUprcGZRY0d6QWc4SVd4ZGFJWCtCM0dyelZYaHdsWDRJdGtpS3RWbkc0RlNSQnpqZCtYVkt5N0JIVkUxOVMwd0dER2xlOTB4a1pqczVZOVF2MFFIZnpKL3FRMU5EVHE2
/// NXRNalUyNHNqYXVrVlZyV2FNVUZ6UzlTaHF2RWkyWXpjK2tvcWoyWXVxOWIwSVBmZWl0Zm0xMDFzckJHWW1EaE12N1NwWjN5SWxtMGtPdFJmaXhBaWkxVlM3ZnRpaldwakFHT1JSY2QyQU5TMSt5aFNEczZLd2ZGcTFqOXVqN0tVVEhnamdIRmRkYVN0OVFBTVIwTlZPNGMyYW9uVHltUitIYVhvVXZkSkl0ZDhqaU8yVHdlNmJFTHp2dzZmdm5EeHczM2IyT1k3MDBqMHdOb0tKVXFjQ1ZNS01Ed3JxdmtHcm9EdmFLV0ZRVU5vdHlRbFNMSTlTcGljSzFjS21CK2xrNGNnU2NyTVlIeHBwcXVoVHJaVkszNjlyaEpjWHZEd1BpVHVQZ1d2WnF2aDJFVjhwb096SFhXUm56LzRpREJkd2hvWE1xZitYaFBROXdFckhXU0ZzaFMyRmFpQU1xNWRtSkF4MUxXb05neGpYTmNFOW96WEJC
/// M1VxaXE4U21RMXVPME1BK0hLbEE0SkV5MGxTR3krMDIzaUlOMTBuOTlXZE5HMjdoSlpxYlJIdWRORjNINGUyTmwwakRyNlR1bFhQUzRhazRFTWhCSHM4SXVQYUtXSWRzTHZqR3owMGN0SE1VYk1CSmdpa0d2UzNFNGFDTWM4cm05VTJMbnk1NDVRZFMvZ2hudUQwM2NVRDBEVEp1TUlNR283dEJKNWpyRGxlZjY1Mks0MEh0anlReDJmTWRDK0s3SzVPczMxa1UvMVh5RGFLQjVyY2R5bkY2K0ZNT2drblFIWGExQWMwOW9ybUIwejFyVDVNcXlIQ2g2ZktlK3ljMm5aSEZIdHNUS04weTd0TzRUdHNXZFV1SnNrc09aZllIMjJWR090RFA2OWlwWTIwTDRtZzNJYjVpc0M2T3grOGswWThuNFJjU1c0bWpSUTlCU3NDd09QQ2NydTNNRG43QnQxSDBmUmJ1NEhRQi9GQ2JWVjQwRUpC
/// MWNTemMwLzdRY25SYnNwWXlXY0dNTE5vdU44bE9uV2duaXUyUm1kVDdjLzZZUFVrUVRleS9kZUluVW5xRE5OeHRyZ1d2QVpnQVNBQVpSRXZYOGdZSlF1dUJuYXQvcWloc0xTcEt6MnpVR1dzYnpYVk4yRVFDeHhxYjJiRm45R2VqM3FpcE10Yy93SlZIZEorVW5saHc4cFBPV2JGTUJsQmJOQ1BsV2t1NElJM25NN1QvcThSaEpZKzJreVYwVCthLzhaUGtFVzJSb0R4YTB0d0VrbWNMQTJnaERyWU9vREwraWpqZ0JOWWJCSUE0R3MyR202USs2Y2krc0s5MmhaM2NIWHJ5czVBdmR3Vi8rV25Rc1oxQnh6K1pVN2dqc1BETndJSzNaeGRzRDhoN2MxYmVHelBWMjJibWJ2VlZ2ekVqZDh1TTNHZEsvVlZ2QkNyZm5LZDRjNjdpelRtcXQrYW90cy9PZTlPL1lKdm5nVGZHSG43Tlda
/// SElLSG5ZTTVvSG1zMWhGQnhjdGVnSklmd2RRTGJBRVdwc002a05ZSnVKTFMzY0RiUmNFdDFSR0Rzd05XRlovcnZuU0IyWUtDZ3RxNnpQdU1ISjlCMHphY0wrQlZUN0pueHAzWlQzOElkZTZkRmdrRFlIWXhuSlVzaTVRMjZjZFVyazhPeFY3OTQ2c09mbWtZelNyeVcxditUcGZ6OUFyaDRsdDQ2Uk80ZkpEY0FSY2hQU2crUmFjZlBsQXVORk9DSHowVGY3N3h6NytITFIxdFBTdGQrbThZN3VYRnp3OWt6Vmx2SHBxd2J0amUzNmFZVGpwNkhPZXpqZE11TjdTMWIxVXExeVZzYzdGc1IyS0lxM0w0aEJzaEFzWTJUaFZpV3hHTzBEVGJEam82VGhqREFFVnlRcFNzQS9XMEVERnBBVkNNcFJHZ0ZnVnpCQnNsQ0ZNYmtVcWhCR0hjcmtoU0Z5d3hsbENBNzBrQWJqSnlsemVZNGxT
/// YmE1c1l3Z2pNa0lzWkh5dWhTdFlqTEQ3ZVh4UFJRcnVxWHllM3djTm5uL2loVW5rcFB2bnZpV1BMaEU2c3BvcUFYdUp5NXZYcWRGVUJWOUNpQ2dOUmpwbTFvYWc0T0Nnc1J4YkNYdWd2Wmk5eFQ4cXNlT2R1RHUrOFJ3MkhUajVVc3FqNkt0WGJJaGNnSGVCR1g0WHpJQTdNL3R2NFk0ck9YUmp0S0V2dnRpUGpsWEFJMFNQQUlDWUpCbnZaSDZkU3dIL0x2RTBXRFMvMDZxQisrTHc3SGhBaDRPZjh5T3NzNk90TXJrV0dWRk9JaHdzTGE5a0kvcndlUkUyK1J3ckxPNDhLdDlEczllRVBXTUtUVDR6dWs4OEppNnBNVjBTZU5EYU5vbGc5Y3hKOXFlbmExUUdJdXY0Z3VpY0IwcTlndXBhaHdwK0J3QVM2REJBdkFGR0FNQXJJTFZCam9Bak5OWkhEODRMVEgyNEdmZzZWUmp3MGRI
/// S1QzekJqS2tTNlFTUGM3dll0MDBVbW1xVTl6NWVwQW9rUkhqVjB0dEQ4UXlzbEFJV3pvWHJIWE00dmZaeHh1Nmx6Y3lKVzVNZXVLNHpPV0FzUmxKZ0VtQzFTd201cXdhbjdWaWRGckM4UDB4Y0NaZ3lKN29RWHVpQit6bjlVL2g5MG5qZDArTjdwVENkYzZNZGhiRmRsSWtPYXVYMnlrVDhKVUhmdmNFUEt4b2ZGMGlXY2JrUm9JdmdHTzNrRHJadVlnUTl0TlBaS3Q1RGdYeE9FY0dnaWxRdjFiaWdIMDY1Z1drQkt6aEpFSHVzQkNIbWpKRlBwQkZNRk1ReGhSSE1rVmNuQWRRQUJYRXdXSGdCUkExY3hnWmRwMUN3KzZrakhXVWdZUWo4WjJ1Q2orSlppL2pkWmJ3dStmd3UrM245dmcwWWxMbTZvakRIMzkyOCtnSjgyMklzc0dyMWROZVVPejNvcTlXV0VVRmdJSFNveFk3d2tn
/// WkhHdU5rWDNYcXpjYWNOa3hIQ0hVd2lZWS91aTFKZzI0eWRlSTdyTUh4MmFVYk9zbWlrZS9BN0tISGIxUDZNbGY0ZjhxY2RqS29wMXlZZ2Z2amMydk9sTks2alRtSmhBOVZWK1F2WVU0WUlkMlowTHgvcFk0UVBYcEJoZlIvbm1VeUpHeTMvdGw4RkVod0FMYnBRcjZ1ZFluVXluVlRramx1T1lGSGJXRjM5R0RJSk4rRko1V1Jrc0twWWJBMkZFYTAwRVMwMUhNQXppSmNhb3IrZ1V5YU56Q2JVSHZGU0ZXOHRCT0Jid095bkJIbkVSTEwzOUdzRm1sYnh6WmhoU0FkMkR6TDR0MkZzUUFNNzc2dmVBbWFXd0NkNk5aVHduaGVUYUNiNUpSb1VHTlRlanJOUkhEdmxPNS9US2lzWXpnM3F2b213c1Y2R3VzbFN6ZVVZTGZRSHhlT0l0UVlmQnJPeEpjUXdUSEdlTTZ6RkExTGE5TG9T
/// M05vdzRGUGc1RXg0S09sR05CNVlBQ0FWREpnN3VLWUFVRlN2Z25keURQZ29ObWt4MEM2QWpuQzVmaFo3MkZpNWdTOFA0aWtDbHc5bEEwanVXRk95dkI3d2pIYnNnOFByaUUxa3JzaDhJSlJGS2VveXphWHNteFVZWmJLOEtzSU1EQkw4dENwSU05MDB4bWNGZFZVajloNHVpc2xTdCtTQzB5L3dFT3lGMWNzSXlPNDJqaERyQk9VTVZXZ09wU2tkTk9VL1kxcllWWjhCZ3FQRXZlZ0FZY2sxcERtaUFRem1qNGViejBCVnprQllkTi9UL2lBS3VUUm5mT2pwdVF0dXFFNWtvRnFVZFptdlZRRWcxSTlIbUpBeWluaFRnMEJyd0pJUC91cWY0NU1WWjV1QUpDTzFoNkN0b2hqNFBLeEtJZ3lvcCtvQng3NzNFT1Roc2xCdVRTYjhybnduM2dKeDdRaW8wQ3A5WGFnRDNqWU9GSW5MK2tD
/// blBLNWRwTGcyMEZTNXdsSVIzRXdYYVNFT1NVSitUd2Q3QVlEUExGWTA2SEhKaU8xMGtVTjJSZjNNY1hpdTZqdjRiTkd5cm04MndnVmh5QmdoM0crRjVBMTR5akdIYjlwQURpZ0lZYURBWkE5UTlNR2h3b0hBclJvcjdQQTJnbldiUytJbTJkMmNVQ2x5YkJNQVFlYWl2SCtlYjAwZWdzb0wrQTNSTzAxQ3hsVUlDN3lyNG93ZjVDWUlkV3Y0T3U2T01vaWVxbFRuVE9pdWdBVG43cWtrN3FHRVljNmdBK29BaWlraEJHSEc1WkZBZXpRV2YzZ2p5aFBaZGk1NUcxaEl0Tm1wenZKT2M1U2NNY1pjRjI4aENjMkFxUkR2Z3NSWkZNU1JRRFFSemtLalBJS1pNek9EM0dPMmZkam92S0d6anFud3FUY2dlcnEyQ2NyYk5kWUo5MVFPQW5GSDZMU29ONkExZUF0d0VIVU5lUk9NQXhNWmtO
/// VFpXazhSUXBYM00rcDBzNjExSHgvenBIS1J5azBkMHo0MmJLWHo5TFNtdXhiODVnMW9NUEJ5RTNOSjYwUENqZ1p5VU92UjdiV3loOGt4NGlUaEMrT2VQVXdRRXBYQnRKMkpPd0ZvYytDVnh2R2R4eUNDdmtORVdiQVFBRmhQKzVENndCTFNFT0lvaWtDMnJRZFQzQVZjRWhvWFFIQ1lnMmEzbWNEdXJvemlxdWt5RFlTUlRpckFLYkQzcytqd01GU3cyR2NnZXdCdHZUZ1FkeE5HRk1GMkhjOEQxeDhrYy9sZE4rWlpTTlpRalNzMjRvWXZDVExjTU5URUFjOWNUdzNqZUMzbGxJSEE0eTltc3ZOTS9BR3VvMkMrYzhJMEE5bmdyV2QzZ2NvRVVPTW93dldMQ0ZaYmtTQUhRQVp0TUt5aDI0RmdHY2dDS0NtSTZkNDZQQzQ4em5DOFljZUdtd09LRlBLcWZMdnRDZW1WRk9xUkgyS1dI
/// OTVZbDlKSEhkaEx6T3dtandFRHZRNzBWQ1NOS2hJTkVoTDk1T0hXK0Q2NWp5MmE5R1drczRIY1ZoblVUQmpwSlFHMUFNVlNpVEY4b1VSakFsa2N3QklFU0lQZmtEaTlmMjJSdnV2TkUzV0xMcEYzS25MWEhBUmtuaHNXbHlBUGdUQUVhTE9nd3RuUkdKQTdTL2hrSUQxZ2FhenpaOVptTTlPaDJOSDk0cTd2cnhzcDd5ZUhDRjJxckh2OEQvWmVKSTVVT3NlSXMwMURmWEF6OFlOQTFBSE9CeEFCV3d4QUU3d01RVzRxRERxZitLT0hRNk9CRUx6M29jTmJxbW5ZZkY0M2JIOU1ya1BvbmVXVkZQb2hmOXFIcFhBWDVVblVWM0VZK0ZZMnFJVTFvb29FTjZtSE5HZU1mTWlFNVprVTQ1a2V6S0MrQkdkc2lLN0pqRjZTRGdPb2p4Qyt4TVdwQnQ4ckp1KzBJR3BFYjArSHhwdDMxQnZj
/// VFJUUEtpNTNxclFtMmpKVGJCNlZ1V2x3WG90cUJPeEhUS2lSbTlKLzVMM2RVcW5GRHhieEFIU011TU03V0FOZlRtWnBNWjNJMXFvdHQwUEtWSE5vNlNjSlNHUVpOTGwzY0RGb2kxZkFXbUhUWDhQWjRraTVhaTBkTDlDVFpBZ05JNVNSQ3RyMFhhMGtmcnlhMlhzK2VnTkpDdjZmeEFGWDU3ZE55UlRhOXJqcjdiZFBMVkc2cWtYOVBDam4va2w3ZGxVdWJxMFovSER2dVUwLytqc0g2Zmh2ZmJHOVUvaGQ4emxkY2xoZXVVeW5GTTQ5aG5jQjJ5b3pzSVk1d2w4WjFraWQzbGliMkVVWDBFbkI1Q2JtY1I1c3JDb2RqeGdVL3BrTVh0bmN3ZDlXbWt6ODdZTFYvcy8wMTdBdzJ5aFRqWXVvQmFBUnRsL1k1MkRBSS9zWk9TWVFlSW81eWlsam9jcVB3NEpnNlhQcjlFcWpiL0p1cjlh
/// UkJvNXY4akRvU2pKTHJuZnQ1THB3VGdhZGZqbWlrR3M2NEppQVBKR0RzN0ViRHpqTVFCY1FxY0JZWFhHZzBnamthelFmTGR3VG03MTNxbXJYb1NQcGxybjRSdit0bzUyUy9OeTBMTXo5N0FZa0hPUmtDSVlpc2dWUGxHbUdwYnVIcDdSTzZia1hsdmhSVHNXSEw0ZlVEa2dRLzV4Ui9HbEh6RVAvUng1QmVmaEIvN0tQNzd2YXUvMmJmeHkzMXYvWml6NlVUeVN6K2t2SGhKNkhWb013aXRuUkQrQmlCVjBGUWtEdHBGQ3NiREdoV3FMNFpJT01yUU5YM05MK1IrRGJaWS8zK0pBN1lHbk5tcFhYWG9zODVDTUE4a0RtaHluU1FSWUtLV25nanM3R2lmejc4QmErRnR3Vm8rMEVRcndCaitIdXhwN0lYc1RkaWJ3NTlJSFBqSkNFb2NFRnFDRDZpS2RwRHdlNmZIdlBIbzBGZWs2aFNw
/// UFVjYVRwUHFYMGoxVitSdVlkMDV5WVB2UDc5MDRJMmZKR3UvM0I5ZC9PRUMyWmJwMlMrNVphMmJuTGwyWE1hcTRhbEpBL2ZqNHFtOWQwZjErcHpiKy9QSXZydkNXZlRaSGRGM1QyVGZ2Vkg5OWtYMys1d3pSYkJ1dG5RVFIvMzJ4ejlLdjZvNlc0SHZWRFE0NnFpdFdsS3dHMmhzSzRtd1BOSktIRkFSd0NOQUdld0hLTUhwQUZXdWFXb28xVlUvSkxwRHBqL0Nqcnc3WEp4Z2x4RUtjbWlWN2IvRy8ySGk2SmNXOThtOW82WDQ1WVVHbEtwSlR5V0xBbTlQSE1EaWYwc2NzQmxnYXphenhBRzRVSEhuZDFTZGlpZHhobFEvaVhPaytnOVNTK2ZSSStoZ0RRc3VrMnJBRmN2OGVzczVWMGo5NzZUaEQ1eGZyeWtsVGFWRUN3eDRIVDhYb0wyRTAxV2E3cENhS3B3cFd3Tm5uaUlONjY3
/// SXdVTnVKNFMvQVVpVmRkSFJLbkRKSHh3R1pwbnRoc3RQOHUxVEkrZm1iVDlQeW1pZzkrOFFCeWc2Tkd2b01PdXgzYXNscHB1a2dWdjRucE1ZM0g3d05VS0FPSnpGRWFpdlFCeDVTQnlzNlQ0aldHdHZOZmkyUjlxQnBRWkxseWY5cHN5ZmFIUER0dkxCdmd6NjNnU0pJNStEbjE4cUFFZUo3eXlLSFpLYThOSnA0VVdpdVV0bnIxWGdxRE45T2NIdmxzTCtRMXpDdWhFcTZEcHB1a2pxVDVPYUw4bWRRK1pydWRwTG9wcFRLYVhmZkhiN2k0K3VIWHozU3ZHT3E4WHZYQ3Q1NzlxQmo2OGYrdno2a1gwM2o2WGRQcEZ4NTJSaHc0V3Z5WjB6NU5GVlVsVkJOSTFFVTZ1cnFLbDlCQ0psSld0UlM2cTBGdEFqc0xVeUNBNDZwTE9CNFNyNGsrMFZaYlVkZGhweGFLbnhDdEc4L3J0OHdC
/// NU9IMVdpamV3NTV6cjlYeVVPdU1NbzBScVo4WHdaRGw3UzRCZ09NMzZENzk4bURvaFdnRFdnL0hBamREcGFXUHdaVVkxQkppNFZCNnovTElDYnd5WHNXalU0NVpQbXFZbCtwWjErUU5pc04rTGtqZ1ljWTJZOFErcUNpajdzSW5pT1YvRWdWZUFJQzNIUVlXREFHaDFGTGNTaGpBYnZPdTZIbEV1a1VzTzJVbnI2UHVxWk4xQmN0bnVEUnRvbWFBUExpZWtTcVZ1Yyt3YTA4MHgrbUowY2lDT2tIWEcweStUZkE0ckE0cytEYlRvMUxDRU13QkxVZ0J0Rlg3SmdSeXg5NThKT2FXM3RXMzNzV3ZURndOM0FsVHZWdEZPcGhUZzZDMklIZjhaYmtyN3BJcW1vSVRvdG1pVFdEVllQRHFqUVE2bUJMT213ZDh0Z1ZqcEtyUkc4TFZERmNxS2xJd1B4by93M2lmWW0wZC9EWVozR0dqclFF
/// NnExaVM3QzBJZ3pXZlRzbDFDTUdKK0FrdUpyVlZZL1lVT054Y1BnelZHZ3BPbVJGaEtoOG9mTTZDMStDaWd1M0FNVTE0RHJkWUtDWFNFTnUyNTk0U0pjeCt4YWdGL0FMZnBmc2xneGJHaVB0THNCbklGSFJQZksxemwwV24wc1pJSjlyd2F3bzM4eThuaEdHVXU3MEdrY1NGT29XcW8zVDArN0NLSm5pRForUis1RFhBMzhZTktDMDJGczFHTzAwc29Mc0xFMTBVSWM2TVhoQ1MzTXdrS3JoWm9CK2pGaTFlQklFRU85Q1RURFFqclBEcDJaanBwdXJldkhmMjA5YmdIVlJwUTNpTCtsc1lETVFEc09LZjdXaU5OOG0zRHhOUE92cE5ZN1pXTVh3WE44akF0RTFKWTRRR2p3cDRNVUcyZTBNUW12V3dydjlRdnFhNlFXYUIxRWg1UE5xTVJRZk0rV1dxYXM0UUJTOUpiQlZNNlRtdm1x
/// clJoUzVYS3NGZGc1U29kQ2dBTkNYMzg4RDNIUWl2NFRsdU1XczI5QjJ3NFI3RUJwZVVHTDlFRjVDdC9hdHJ5TGFXVU52QU4yYllCdzhMVUxHNmNVUmVNZ01WV3NzekIrVk5vcXI0OVhuQ1hsdFVSdndMVU96S1NxQ1Q5MnE4ZFpkZ2drZW1CTUhYNDEya1NId0ZDQXByT0FmYUFEU2hBNE9nNEhXcUIvQnB4RG9RR2FCUWxheU1BRU1iYW0xbURVZ0s2MktpY3FCdnlCUkFDNlFyWEhjbm9MZDFDUER3QTdPSWVCYWpnY0IzdUd0Z2N5di9PUEE4TS9qclQrZUg2UFF5dnBPaXdoUUpIVWR0cWluWkRSUjJ0TmtXMUJrZ3F1allwbksrTWpjWnpJS2FYS0RBb0FLV1NRV2h1UUIyMy8vbUo3UHVKZ3k0NGlBSGswNDhKdG0wNEtlNlVuTXRJNFJnMDBFZThnVHVxY3M2Skw5aW9ud1Zw
/// R3RvNVJyb1pxcHEvUW9EeVlXaXZ3ZTZpWWdrdXBpSFJBUzRpQXRJTWExN250bDhKNXRYaHZCV21FSUp1V3hhalYxRU5xb0Q0SHJaZ1dRRFZqWldPV29LZ0F5QmdMOWs4V1dEc1VMR1hBRHRRT0N1VFpBZWMvTytEODFtZlRhK0VZYnJEZnBFZldnT04waVlycnBPR28vczZVdld1Z01XelRmdjRyZ0RmT3ZvekVWYi93TlExOWF3QS84UmxoZEIvcDZyNGZjckxLZjdsRzZzSFR3T21uV2doVldqTDJqQ25kOEJQVHphVEJwSzBpUm9qWFptYTgxRHN6SHZRTTdaTnlGZ0w3V1NnZHRBMGkvaFhhQmlNc25sRDBGamF4Y01yakVyQWNZWDk2SEJicUFjT0lwbXNDQTJJUjZuaHJhVUtQektSeCsxWmxsLzU4bjM1akRVMGRQd29IaWdaYVJLMGJPUk5zMVlKbWRFR0FSNkI5QkJtYUxG
/// cUhhZ2V0QTlBS3ExT2dvcXhtL1JYUUhsR3FySGdCcklMQ0R1cGlDeXduSUhmamNTM09NalRwdE9BWkFjMkJPM0NOYUhaZUtRazc4TzZvRkY3dnpNaXUwSExJZ2hqRkVxdkNjQ3RsQ1B1NkdtQWpDd2RZUWZ3aWl3VEIyaWlpYlpWOGEwV01GUTZsNDFuTFlxMFVDWXg4QmFPbUN6dEFEUXJEKzJZbWJ2b3Uvelk4RmpJQU1zQU1RbW1CekNEejhEYzFzS2R0ejAwY1VHcThGZjVqZ2xqdTlhOHllcWZITUVCbUJWaGJqdUxZN3RueHZUS0JQbFl4OHRXTWFnVjFMQzBlQjlVTXRpZWNZeWVQaG5DZDluVnhiS1ZjRzBtRW5aZ3pLSVczOTZSQ0F6SXo2ZWlYamMyMVRYVWdUb05KRHk0bEFOcEJuRXNCZFFtZ2JxQ0ZRR2phQ3BiSFdVQkZ0QUwrUkIxNEd1Q3V6NFYybDdOQXNWQ0Zn
/// YWRBVFVDMEFJQ0g0bkVBYUpFSkc3VnFqRlNic3U3K01PeEQ5S0t4SGNDUFMvenJsQm9lMGk2MnJwYlhqYlFCa2NkMkVpZU5FSzF6M2JPNlNIUGxOdEZDdzJpcExjZ3R6ZHN6cGxvZHRISEVaSUJHMEZ5cHJhc2srdk9rYnFsazIrQ1VoSTVDYUJ2b29DeWNESUtOR3pidmJEdjJyM0xPcGpUL0xIZjhtU0toZ0dLMFNlbkptTExuMjhyWXF4NERudms0V3E1aVNZUjZRN2xzOXkzNnYxMXo0dnQ5RnJYcFZ5bEl2cEkwNHBCQUlFZWM2YS9CU2Yzc3QrYXh6Vzh4WTBDcllSdWFtM1VtazhaZzBHamhUUHlVTkFXNEZlQ2J0SVhCcE5VYk5RQ2RvUW1nMTJ0TkxRdjZXRzdWY25ONEZDZ3Foa2xtQkRhU2xGWHdKek9FMVJEZTRtSUNQNUtINy85ZXNMVHc3WW5DTlozM2hqQ2Z6V095
/// bHRvb0l4bEZDS05jeGhTRTR4TEhpbER3QkcyVTRRQmJGY2RXSFEzQWtTa1M0SmNvZkpFczVRT3M1TEhXeWtSR0JQRUJEOThpRjRWYVMwTUdaTVM4K3BYeU9rc2NrQW5JRldvM3prNmt6VFBON2RPMjV5VU91Q21vRk54VTAwenF5MGpGcTkvdTdwVVZ5cWlXTWNYTG1NSmxEdkpsWFVYQlBRUWhuVVYwbkI4MGlmaW1DcmlEamhSaVV3V21OcW9FWEdVZm9odGt4QmhHeUFGR0hDMTZvZmpoV2ZEeDYzSGNFVHFFOVhRQVdDdFlBMlE5QzVReWxJenRsc2Fob1UrQU5lTEhnUDBkN0UzK0s0Qlpvdm9CKzJ4dkZnQ2VDc0xYTnpUcGF4dWE2bXFydGZVUXA5d2c1bzkrS3htOU02RkxEbjdMQ2lyMVdWSm84M0ZwUEp6ZWhsWkhyUVZpdzFoSGNYekhGTjZRL1ltekJLOS9SUjRCY1VC
/// TEJSckFUblZsTS9hTUtXUWJHUlpqWGRCZFhUa3huQ1UxUzBSYlIreFBnQ2JCVGhJUEpBV1p3UUZSWWx3VkZmWmI2L1RaVWdCbXUzMEtQNkVyOFZnS040ZjQxMUZpZ2NOZkFNNWhnZXM4aThNNlNvSWRaU0YyY2t0VDdDQ0w2Q2ppOU0vaEQ5L0RTVHo2NFJWU1UwNXFOS1RHb0gxa2JxeUEyb0tDdHdWSURLU20wNXNOK21hMmZ3SVB0UUFjN2FlaTNVMVk0RStzWkNuZ1NVQldUWHBUZ3c3SFE0TmlRTHZDTG5vQ0FOZTZFaGZUTmw0aTJ1UG1XN3V2SDR2N1l0OTAwYXNqMHBiM1NvOTN5T1F4T2VBNDBPK0VsaVF4UlRHMHFlYmlsNERBL2NUQlJFQWlZZmlSSUJ6U0dtRmRFR2RUR0ErZzM1cUp3ZVU4QUVwK2grTGxOTWFaeCtUUFpvU3orcWN1ZmYySG5JYzBNNWhKTENMWWlB
/// NVMxR1FzQXg1OGNudHU0Z0FIRGtJNmVKQUJsOE9yMmZEOTN1N1prVGhUcURnWXVNTmF1Y3hadXF5TGVKbVRiQm1UdDR6Smh4Z01OQUEwaHZaM3NLa2lIblNJa2w4VUkrTGJxUk50RmJBZjdaaTcwcVZreXpla3JJeVFXL2h4WFVNNUxuQ2lnN29GbE9GMFl6T1lIS0N5QlRXNHpBL0VOZlVBYlJ0b0tKcWVRRDFwTENOTkQrbUhvTnVsajNDbFNkMnpwMlg0eFhaOXV4Uml0eG9LMkgrQWErcmhpaEtQNkx6YlJycVFGRGpKRmJoOHNlNDgwU1Y5c1hmZ1o5RWRoUkRLUGFYVmZXcHFheG5YZ0VPaDZPc1ZkUFh0cExnOGIyOVI0aWpCU3Q0M2UwN1JLYm4zU0VNVnprYXRiWm55cTMvbUZNU3VmVUJxSCtGYm9jWmJwUEVvdWVxYnZtNXdhbXdYQVJvblpBTWZLb3NDYTNRV1l4NW9w
/// QUMxL0l3cHVBT2NaMDNwWWp4UVFCYkFWbjhGb0ZGSVFTd2R4U0dkeGNIT2toREtIV0VJdXNwNXA3U1F3ZW5SZ1htdi9FQXFMcEdxdTVRK3FuRzJMaFM1bVVVbG1pNk91V0xYRXdCTEJqVGdQbll4VkRjYmE4eG0vRmhrR3pUUkZVZ0JkU2I4S0RWK2w1cE9pMjA5cmM1b2FHaW1FelVwTzlUUm52SXFZZ1pHZmtDMGQvQVZtL1lHYWJ4QUtyOXJ2RmxZYzM3TDcvTEliejd6bEcwWW1oTGJPem02V3dhL1l6YmZPaWZLVnBWZ1U3Q2NLUUt6ajZOOVBmU2pUZklJcGhDb2hNWmxHSDIwOURvQnhHRjBrVUV1WFh3UW0yYzdkYnhqWHJ4VlRwaVZlS2x0d1lKdVI1YjJWTXdmbnJyNDVlTzdyemJYSW5FQVUrRC93QnFRY1J3cmp5M0pQMEljY0N0NEFBQjJRS0EzaVhudDk2Sk8yU3Z4
/// MDE1RjhiaXFGUTZEd1hYOXdZbGw4bW5QTnYzTWV0dVdFMXBJYXhuZlhoNFBYZ1pFNW82cWVBZDV2SldRNjZ4ZVB1SGc1a09rL0VkU2M1S1Vmby92VFJ1K0pSVS9rTXJ2U2NXUHBMSVZQN1hnRjFKNWhwVC9SZ0U3clRqZEJxZmE0QmY4TXZpOWI4aXRiOGlkWjB5L0pYZS9KYmVmVE9FKzM1RTc3ZElmeUwxZktHRC9hM0x2SkxuM0ZSNi84eE81OHd1NWNZSGMvNVhjUEVrdUh5Q1hwT1Q4ck1OYkJrcGpRYk1aZFRDakJvWjlobFFWRE5RTXNBSVhUdzJBZzhFUTVVTHJhcCt6ckVkV3lPSWYzMVdTaTRmSjVhL0l0WFBrd1hueThDZHk2MGZFbldkSmZ5QzNmaUozZnlDM2Z5UTM0Y0p2eVRWd2xjWGsxTUt2Myt3dXdHNVJPcWtVTWhOaXBZUldIV0dOWHdNQllONmVMWVU4TDN2
/// bU5CZ2ZsL2ZNVU9Pd2RNdFFGNkNlMWg1V2NHSEVVWjBVU1YweWVQd2JFdjV2R1Z2dkZPK3EvQ3E5OG9lRGhodkhEWGUrYW40QWhQSWJmbTFmZDRVWXIrRlhvNDMwZy92R1cvakZRZ3Z1MHlhaGhwakErUDhsNERSZ0IyaVQ3cExHdS9pOTZBWndkczZSc3A5UU4yNGNORitVTmZ5ODUvNmhOODlMVm4rOU8xaTF4V3RmNHRDUGdycDl2c0IyYjZETnZqa2RjcFoyVTBWMXllZlpLU0laUVJCT2tnSTZBTE1DWDE0U2Fac2I3NUNYaUd1akl6WFFPVk5BRU9pQlVzOUN6a09hVU1VN0tlTWRwVEYyNE01bmg5dGtoZHRuUkRxblJIVktEWGZPV3RoTk1MZDM4cXhKZTVidStDYXJqSmlRT0pBamdDcGdGNGlETHRiNVR4RUhPbXZVTVlNOW9NL2JoS3o3VnRFdFl3MGpXOG5rcjJEeWs4
/// Q25BRkp3d0kvaTBKVWo4di9zUDJQVDF2YlREdHduS1llUmNtMFUwVGJTS0VZWURpMUdiL1hLOGVKMXJwbHJYZFBYdU9Xc241Yno0dFRNRjJCL2N1b3F0L1MxclhCdkE0L1VGd0h1YVgvQ0xmMVBUR21IakhWVE1sZE55VXg2RWk3cENVK0ZhMGJpVTlIdWNoWnVtVWtlNlNzQVV6SlhUTTVlTVNrbmFYSTJIdlJNVC9MWUd4T1l2Y1kvYzZWWDFuS3YzQmVuSEhqSklTV1l5VmlLVXorUUY1NEh1ZFNjV0l1eW1IR0lrNXBqbDcxMG9KTHZmZXhsRjFuQ2hOUklsMzJjU2J2RFBUSVMzWjhaYnBueHJwbHhVN1BqL0dTcnZZVkprL1p6WElYeEV4UkpEdnZtVzFpRG5WR0tKaHBpcTBEQ3NsYmcwNThkZjlMSHN3QUxTeC82akFDbkhmd1VhSXJaTGxJMTdlUElwU05jY3hNZGl0WXcy
/// ZEZkVld1WXo4TzdaeVQyelZnK01EbHh4TzZFQ1o4bnVlNWZQUzE5dmEvZ2xkbXlMUXNVYnl4U2JZOCs5QW4veU02azQzdGUrRGJ0bFo4Rlc4L0szN3FZKzhIRi9KUWJSOU92SDhtNmNTejc1akhCN1JQQ095ZEVkNzhTMy9zS1V0aUhJMWszdnNpNGRqVHR5cUdVUHc3dXUxeXk3WlR3MVZPWkwzNmZ2UHpMVHlKTDNscWdldFZQOUlKSHpvcHhhVEhEOW5QNjdRcnA5Zm15M3Z0RCtxWkY5TXZrOU1pSnNKY0VPUlpFZGpyQWN5aUlaQ1NMbWV6NXVJNUJMc2RLaFI4WXRKWndiRVVjaU5xNnlPSTdpMk9kQkh4bnhYSUhnQ3pSVVpyZ0lJcHp5b2wxeW83cGtCbmRJWTErQmp3anVuY0dyMDhhdDI5NjFJQk0zckQwcFBFcEwwMUtlWEZzS245Q2FyaEhHaWRVOEVMNkw0WGdiUUZG
/// dEhvY0Z1TDRCME1Wdkl2bC9aUVJvcUF5b252OXBIRFEvdVVPT1FrWWhxZ3dDSGZDcjVEaE9CemFPclVBcDRIUlZOMlM0dVNPbG4xbE9IYjIwQm1IamlLdWZXWllaMkdVczVEcmxCbmVTY0R0bU1OeHpBaUR0QjA2WVlxemFlSHBiV0V2UU5nSi80U055QUw0dFZOV1hMZU1wNEJPaEg4YTB1T2ZpcTRaQ1UraVczcEN6N1NFSHVtNDN6a1Rub1VwM0x4WFdsemZmVEhETWxmMDJ4L2JkVjkwZDlGeTY2eG9HMFVTbzBvRUw0eTZZTThFbkd5T00wUllZMmp6bmhKYVZEa1BQRGhRS1djQnIyc092N2N3cnI4Z2ZwQTRxUWQrOVB4WkFZNXgxMHgreDVTSS9xS2tmaUNydlJGZDAzbmRaRWtkYytrblB1R0plYkVNeE16d2RNZ0d6VG4xSXA4ZHRJOER1ekRhQVBzNExLQnU2V1BBSWor
/// T0orNzVwM3p3L0Q5N1RNQ2ZaMEZ6SzRGMk9NNHhiNVc5YXJsVkZxK2piSVZOSnM4K0U4UVYwMG5BQTBBZzFrM0lBL1FTOEFFOU16aTkwamw5MGpsOTB6aDlVaVA3cFZqUUt6V2lSMXBZNzdUSVB1a1JmVE80WU8zOXM2TDdaM0VIWkViM3orRDBTK2YyU1Ezdm5STFJjMzlJajMyaDNmZUc5TndYMlhNZnQ5ZitxRjRwK0RYLzd1bFJYYk9pTzJWemV5a1N1c2hpSFVWUnRvSUlhRFd0eEpINHVrQk52eThyQzJlWEhiRXRTZXB3ZUpWVmJneCs2bEdLWHdoMHpPRkI1TkkxTXhZL1o1OGMzVDJaMytYenFHNmY4M3QrSHRObmQxei92WEZEOWlhTTNKY3dlbitDYS9wcTc1eDE4NVNiSWc3c1NEejU2WVpUcWRzdWl0Ky9YTHoveWhsRjZhMkRocHMva1BzWFNka1ZVdllRRjc1aFh4
/// bXhOR0d3RUFmMUQvNHA0akRqQ3lvYzRRS0JFQzdvdFBWRXhvaTk4WjJ6Nk1BTkJjVEFFRzhqY2RENUFyVFBCdG1oRFpBK2FBcU5UMTQ0OXRQQW4za1Ixb1cwbXdmbmtrWGl0TVg4R0Z3TVhoaHNvNHJDTG1KNUpQejVORURiRWtNQmdWOUxpdCsyb1NsSW5FMXpXMUoxbkpVMHpsWWMveVRzcFlsUGhhMGs2YW13a3k1L0V2YlM1WTRTQk96YnlCQ3c0eWhKN0NCT2RNcUs3U1plM2pFN3ppNDdwbVBlR2lZbHhPN1FlaVp2dVpVc3dWWWFieXQ5cGhST3hxaFExUW9nYTN3TGpwREhXU3ZqY1NXTHpGQmJTWXl6SWg2L1JDbU9nWWJvMldFdlRYRE9YY0draDhDMUhlV0p6cEw0RHRKNEt4R1BrWUJzNDVuY2VDWVBVdnBvQldZRzh5T0hmWGo2TTZlMGdma3piZHYvcGFEOVg4Z09y
/// V204bFF4ODJNZEFSZkVZN0NRV2dCS2liOHYyai93SjRCSHdQbUlaUWJoVHdYTDgvTFdBNjZSS1lnUlJUbmxKbEdVb1lFZk90Wkp4YmFSY1d5blhUaHhoTDQ1d0VrWjBFQ0E2Q2NNN0NTTTdpTUt0SmNHTUxLUVZOaktjN1lhUWhnQnNaYUVBUzkrS1BNeEpGdGxaR04wNUp3YlFLVHNhMmptZ2RicWtRTFIxWnBpdEFOYzBjNVRoUjVpc3haR01LTUphRUdHYkh0VWhJNjVqWnJ4VFdvejl2aWluUFZIZFVtUDZaaVlPVEUwWXNqOStYTXFLYVRuci9ZUXZCNGhlV2FyY3hqdnc4ZHF2TXpkOEwzN2pkTzVIVnc2bDNmOVdWbnU2V0hmaEM5UGxYMG5wZWZMb0QxSjJuWlRkSnVYM1NNVjlVbG1LcTdSZ0QwNGxkdTZVTlpKS1hHdklqR09FMGJtdytCZUdadG81K3Rla2dkdHpFZ2VT
/// a2xHcnJUSFJRYlVRdG0wOGtUb3lPYkZyVHJ5aklzRkdsV0NyZ0tBOXhnYmZHMk5zZ2pORTFUd2J1cWdCQmlrWWlYRnhWUXNaeHo0djFqWTNCaWkyOVZmMkoxc2wzNTdlaEFYOVhBdkNCbTVMd1k0eFl3SFJqYjJjYTY4SXQ1ZEhRZ3JSb0YxTGl1K2xWQkUyS282TkdsTnJWWGpMVitacFRQZ0Uvc3hlTzdCYTlTVGdKeXhnaTE2cWVBaG8vREhVYkRsT0Q5b28rVkFvVzBrVXdJNWRld0xZalcyNklaWHg2RS90VTN0WmpMMk0xeTZGNHYvWlVMT2dEU3hHZjJ3WWlMQzg5c2JpV0VvRU85UXc0RXdscngwc1A3SFp4bm1sa2V5YUkyQkM0QmhqT0luMXhjV0ZnbkxwUndtaERZY29XaHB0STQ3R3RXUmdIMGRQOFBBclFmaEVEbjBpQk9UMFpIU0lvaWxyODJpUjRjOG9YSHdBVXZa
/// ZE1rNmZwNnVpd1Q0Y3hGdUJ6RnRTQUk1WmVCd1k0Y0lPNURiS2lvSjlRWXRkcEpBSFdSQWpYOG9vbGpIS0lQQjVvZDVCQWV6VWtlRE1zc01jYk9XNGRDQUE5QVFYUFVBeEFtMng0RnNwWTZ3VlZNMUVIRHN4MXg3aUFoSFhXWXc5d1ozRTBSMkFVK1Q0NWIxVzBNbitGTklRQUhBSE1BdkFTaHhrSXdweXlBbHhUZzd0dWoraVczSmtqOVRJbm1tYzNobFIvVEtpKzJWR2djOENEc3VnYlA1d2NkeFk1WXBKK1d1bkZMODRvMkFUcDJCWFVsNzZ1b1BDelNlVTcvMTg0UE56eDlJdmZ5Mjg5azFKMmJuamxSZCtyTHR5VVhmN0ZpbDlSQ3FxU0hVTnFhK2diNzRnclNLNkdseHRzNm1STkdoSW5aSFU0YWNXY2Z3ejIrZExaOHcxVitLd1dHTVZUaVF3WENETmY1aXJ6K2txYjlNM3c2
/// MGVCd1lUSmpyUytxKzdPSjYvandQdUJURlFFL1lNRzIrUXBsZE9wSTNmRTk5akw2ZHpWclNUSUpwK2g0cm5KSXAxa01UYnlCTnM1SEZNVm9SMWRyaGRUcVM5aU9zb3dVVU5uT1V4enNwWXE1eHc0RmNiWVNURWJQYVNLRWNaajY1M3dMY1hZenZaQ21nODJkUkd6TGVSNEE0T1VaWEYyY3ZqSFJRSmpvb1lhQm5zSkNIMjBsQUl3b0U3SEpRUkFFY1Z1QzFCVmxCL3RIMndrdi81b2h1WGs1SUR3T1VKQlovSVNoMXVyZVpZUTJ3c0RjSGpPSWtlZ2laY084TktGUWsvMFlZbERGOXg0Y2dyc0FlZ1F0QjdMdTYwQlhzUWdPZUVXeWJVdC82cUJGMFBwNGhFMVFmcm9vTi9JYlVHWmxIeGJKWHRVMnM2TXVySkZGdlVGcVpvTlJoYnk2UXYyaW1JYSszQXpka1Vua1d6M1M0L2tNOWNz
/// TnMyYU0wL3U3QUlXQm9VSDZrV1BUdkxra1V0VEdRalJSSjBFR05xQTlTQWE5NEFMN1NBN2R0bmdYMlRsQVdRQ0dpcDRXQWVGMkVaUlVhWEk0QThzMVBnMlR4Z3R1bktTWW9JbXdLK05TQ2ZaNFVmVXNKemFMVFBSVmRVaWJCL0RCeUhQSzU5Ym9TRENoc1NVQWtIY1lpak1OZ3hKNmlqT0tLekNCMkhqb0t3RHRraFRsbkJqcGxCZGhtaEhYTDRIWEppV1hUS2lRUFhvRXQyVExlc21ON1pNYjB6K1dEbllPMDlVOEloN3VpNUo2VGJudUNleVJFUWRQUk9qZXFURnQwdmd6OGdJMlpnWnV5UXJMZ1J3cVRSb2hYanBLdGRsT3ZkODEvMkxubmQ5L0FiZ1llM3gzKy9kK1YzKzlmK2xMYmhkT2JtODVLM0xpdmV1NWI3MFkxY2llWW5wZTduQXRPWlErVDNMOG0xSDhpZFUrVGhSVkpS
/// U3BwcWliNEJoNjdqQ3ZKYVhNQUgydW1xWmxKR3lDUDYzY3Q3aE53aHpUY3NJSURyRkZlSTRSTFJuc1BQamRiL1FtcC9JbFhma1VkZmszdGZrSnNIeU9VQ2NsRk5mbGMyL1pDcC9UR2w3dVM3MVNlMjEzenp3ZDBUbjVXZEtjRnZEZUk0TnpCeDlBem9xQXMwY3dCNElVL2Rubzg0NEM1d3J6cjZ5dXFXU1h2T1ZMSHRhTmFzUGF0ZFB1ZVAzUjg5SW9Vek5KazdhRCtuMzE1T0wzQ3g5bkE3N2VYMHlJN3VuaFBWUFl2Yk5ZdlRKVE95WTJaRTU0d0k1NHp3SG1JK29MdUkxMVVRMVZuQTdaZ2RTUmRaaVhRUVJ1UDZmUUllcnQrWEhXV1Z6YlhLNURDWmtlQThXNHN3ekVNR0VVTURUdGxFeWtQWGc3VWlCUThBemJ1MUNvR05FdXN5dEdvOHVBQm9lT0UyOG1Ed0xXMFYrSjdmVGht
/// S1RncE43VlZoOXNvSVNFSHRITlRoam1xT2ZTNkg5Vk1BNkx6ZzZCb3VDN3JDTGZ2T1BPeFBJQi9SemgxSWdYMWFJUStIZ0F0MEhSa0JtMklXWUZmUWdEOVBDcER4b05UVUsyR0Ixc3NDZkd4d0U3QzFoMUlqVTBBS2Y0SWNLS0IxeFFhV051TnNTOTU2c0JWZ3NkSlFpakFLS0oybGtZZWJvdzhQZkFIZU5UUUErSWxXQkRUTE5pMW9teG5xSXYySmx2ZXA0Q0JnSmxtdzl3Uy94b2JDVHN5QkZwNEZ0UE1BQndsK0VaWVJMdnNUb2lCR1NKRzlsTWxaQnJET0NiSVJCTnNLUSt4RW9SQloyQ1FIMmUwUGN0d2Y2cHdjM2prWm0vcWV5WnpleWR3K2V5UDc3dU1NMkI4MU9KVS9JajF1VkdiQ21PeWtpVG1yeHU2SmQ5bVQ1SmE4eWl0OTdZenNGeUVFbUNkNWRhSHN0V0RWbHZDOGJi
/// eml0eE9QZnZqQ1Y1KzkvT1ArTGFmVDN2NVYrUEhQK1h0K1BwUjI1cmp3MG5lcVc2ZExIbDQ4V25udFpNMnRIN1dsditqTHpwaXJMcEw2YTBSM201anYwcS9ibGVKQ3pRMFFHdFNTeGpyMDB4dWJjQVJ4UXlPcDBUWlhHNXByekdoTTlkU3FBT0FhM0tFc2NKVVlMeERkR2RMNEk2bjdpdFFjSjVVSFNVVVJLY3NsRDZYa3JzQjRQVTEvZWEvKzRpZU5aelkzblhtNThkU0docDllcVB0dWRjMVhTYlZmeHRkOXdTOHJDcWtvV0ZhUnU2UkN1YUJjTnFkTVBMdFU2UDlRNEFkL2xpa0NId205eTBVekhram1YcEZ5eTMvWWh6NEF6c2N5VUFCeG9IK2dwZmhuaUFQdWFHckdtNEliUTcvSDNYQ2gvdXdYZDRvUGwrWVZseW55eXlYcVJ5TFpJNkg0Z1RUN25pVHpyaVQxcnZTRHk4bnZY
/// dHEzNDhLZU44L3QybnptazAyblBuemw1L2MzL1BUdTJtKzJyLzdxalpVbnRzUi9zWWwvYUdOVXlZdVJoUzhFRjc2d3NIRDkzTUwxY3dyV0JlU3U4Vk92bXFGYzRTTlA4cEludW90ajNVUXhVNFY4RnlGdnNpQjZRalozUWhablhIYlVrUFRJZ1JtY0FlbVIvZE1pK3FhRTlVb083YmsvQklBOVZabWN2aG5ZaWRVck5heDdhbWlQNUpDdXljdDZaNGIyeWd6cW1SN2NJMzFwOTlSbFhWTVdkZG0vdUV2eXdoNXBRZXlSYnFtTDRVam4vUXM2N1Yzb3ZIZEI5NHpRN2huaDNkTER1cVNHZEU0SjdwUWMxSEgvTXVkOVMzdGxjMWoweklyc2tSa0JnTk82Wm9aMnpRN3JuQk1HYVplczBNNlpZWUJPR2FHQXp0a2NRTWNzaXN4SVoyVFBpQTRaRVVDVWRxS25nSHBlN2VFbzRuWEo0SFZQ
/// YndmYTVaYUI2SklaMVNrenFtTldsSE4yS3pnQWZHZ090MU0ydHhQUWRFNFVwTTZaa2V5S0lmQnI2M0g4S1F2ejJUbWIyd1VYSW9udUllRDFGUEo3QzJPNkpJZDFTdzVuN1JBQXJTN2I4UGJlRndrQXMreXpud09XMlRlWjIyOC90MTlLVkxlZHdkMTJoZlRZQlExMU9QdHIvK1NvZmltY0h2dkNldTRQNzVVYzBTZVZNeUF0YW1CNjlKQU1QcURmM29pQit5SUg3K01NUzRrZWtjWWZreDQ3TGpOK2JIYjhLRUhzS0ZITUdFbmNPRm5DSk1WeUY5Vkt0OXpWN25sclpoMThKZURRcTRHSE44MzdZdlBDWTFzWGY3bHQ2Y2szUTA3c1dQSHpualUvN1YxL0t2bVZNK212bjgxNjgzZmhPeGNsNzErVWZucForZmtWOWI0YkJlbDNEd2dlZlNHdlBLbXErU2EvOXBzZlRXZC9OWjAvU3k1
/// ZUpGZXZrdXUzeUozNzVHNHB1WGVQM0xoUHJqOGtOeDZSRytYa1pnVzVVVVZ1MUpGYlJ2ejBHclQ4NFBtM1M4dEk4MFBTL0lpWUh1Q1lUeHpCODREb2J4SGRaZEwwTzZrL1M2cCtJWTkrSUErK0piZS9JamVQazJ2SHlOVXY4Tlg1K1dKeXBvRDhvbTcrVVduNlNWajExUWZsWDc5WjhkVWJqNzdjWEhyc2xRZEgxejg0dk9iQm9SWDNTbUlmbFBEdWwwVGVMd3AvVUJoeU4yL0pIZldDTzZyWnBTci9Sd3FmUjBxdk1ybG5tV3hhdWNTOVFqSzFVdXlxVVhycUZOTU1TdmRtOVRTaTlpQzUwMGllQjhsMzErWk8xQ2hITmF0R2tud1hyZExub1hKcDArbGRwUGtTNVN6d0NwQTR3TkpaRitFZjh6aVFPUnFBTHB0SVV6Vit0dDE4dGU2RzZ1N3BUMHZQdlZmNis3WkhGemVYWHRwU2R2
/// bU5zaXM3eXErOVgzSDlrOHJydTdVUHhOb0hjczFEQlVCYnF0UTlVbW5MRU1hcWZIMDFRbGVUcjY4dFlORlVWMVN0UFZLbVBWcXFQZkpRYy9oQjA2SDdqUWZ2TkI0QTNHNG91ZGxRZktPKzZGcGQ0ZFhhZ2tzMWVYOVU1WjZ2S2ZpNTV0QjNOVWUvclQ3eVRkWGhyeXNQbmFnNDhHVjVDZURRdmR5U3UrcmlPNnFpMjhxQ20vSzhtN0s4NjFMRkxjV2V5NkpQcjBrK3VTTDk2TEx3dzB1aUR5N2x2SDlCOE42RnJIZk9aYjF6UG1QSDJjeTNma3Q5ODNUYTl0UEoyMDZsYkQyVnZPSGJQUzk5dCtmRmIzZXYrM29YdER4clQrNWNjK0xUMVY5K0VuZGdCeUMyNUcxQVRQRmJBSDdSbTlIRmI0WVhiQTB0M0J4ZXNEazgvL1d3M00yQWtOek5RYm1iRnlwZW1hZDRlYTdpMWJueVYrWkxO
/// ODJIWmszODZsenhLMzZ5bDcwVlQ0R0g5S1VuNFMzZUdKRHo4cHdzeE94c0MrQUlZR1lML0FXUFlaYjRGUUEwcEFHU1YyZUxYNTB0M1JRbzJRVHBYTm5yYytTdno1TnZucXZZUEYreFpaNXl5d0xsVmtCdzdsdkJlZHREOHQ0T0tkZ1JXdmhPV05HN0VVWHZjWXJlVzNGczk2cGp1MWNmM3dOWTgrWHVWU2QycnpxNVorMkpQYStkVE5sNk12V05FNmx2ZkpXMjdXVGF0cS9UdDMrVnZ2MmJqRS9QS0Q0OXEvenNyR3JYNzdsN0x1VHYvYU53L3g5Ris2OFVwMTQvbUhialFQck5nNW0zRCtmY1BTcTQ5NFg0L25IcHZlUEYxVCtWMVB4OHVPN1VGL1dudjJ3Nis1WG0vRGU2QzkvcmYvK05YRGxITGw4Z1Z5K1I2MWZKemVzRUl2eTd0OG05aCtRaDRCRXBMU09QcWtnNW9KcVUxNUdI
/// RGVTV2hsd0RhTWsxSGJrSzBKT3JSbksxMmVMUFgydHg3RmxjSnVROElXY0krWldRVThUOEkzN0sydkF0MFg5TnlJL0UvQzB4bkNDYUk2VHVnS0V5RDVSV1Z5clMzdDJ0dS8yaDV1YUg5VmQzMUY1NnUvTDgxb3JmdGxhY2ZxMysvSnUxWjdmV250NWEvY3VtOHU5ZktmMzJ4WWRmdmZqb3hLcUtJL3pxUTVFMUJ5S3Fpc01xQzBJcTg1WldxcGRVcWhhWFMrZFhTT2RXaXVkVWllWlVDUUlyYzJaWDV3UlVDbVpXU1dkWHlnT3FaUUUxOGxtMThwbjFDdjk2aFcrVFlrYXR4S05PTXJWZU9xVkI1cXFSczVpc2tibHBGZjVhZWFCT01jZW9uR3RVempFcjV4SmxJRkVHR01RempDSWZzOURITFBKdUZnSThpY0RESkhZeDVvM1NxL3FSdkVHa1lMeGVPcVZTdlV4L2JoL0dPS1RHaUIy
/// aXdCcnNhRmtDemdIZ24rbmpzSFJ5NEJ6Y0dseTd3SEM2OXNlUHJzcWlia2tXUHBRRmxNbDh5eFUrWlVyZmN1V3NDbFZndFhKaHRYTHAzZlM1OTlJWDNjdGMvQ0I3YWFrZ3FFd1VVaVlOQTVSS1FoOUp3eDdKdzh1VmtSVXFUbFZ1VkdWK2RGbCt6SU1ESys4Zld2M2c4QXYzajY0RnVuMTRiRjNwc1pkS1Q3eFkrYzJtOG05ZnFmanV0Zkx2WHkzLy9yWHlIemVWLy9CNjZZOXZsUC8yY2VuWm5ZL09mdjd3M0dlbDUzZVhudCtGNllYUGE2Nm4xMXhQcmIyUlVYTXpyZlptWnUydDlMcGJXUlYzaFdVMVJmZnJEN0o0MEhBSThMRHhjRnVVTmgxaDhVaHp0RlJ6ckxMNXU0cm1Id0NWNUVkQUZmbUpSUU01dzZLZW5HNUZEVGxkUVg0cEl6K1hrNThyRWFjQVplUlVLVG4xZ1B4Nmov
/// eDZsNXk1Ujg0OElHZEx5VzlsNURkSXI1TlRWNTZHeStTWEozRUY3M0R1SGprSEtlQTJPWGVMNHFZRjUxbmNRbHlnT0grWC9FNVAvdjBlT1grUFhMaFBmcjlQTGtMNmdGeDZTQzQrSkgrd2FTbTVWRW91bDVITDFlUnFEZUphRmVKNkZibGFUYTdYWW5xcHRnVlY1RUlWdVZoT0xrS3FKWDhZMjhCRUxyUFFrNHRQaFlGY01wQUxMRXprZ3BsY2FLYlFHazdwREtjTWVvUlJaMEd6OW1kejNkZWs5a3RTZXhLWHlLZzVTV3BQa0JwdzNVK1k3aDlxdm5mQWZQZWc2WGFSK1dheDZVYUI2VnFoK1ZxZStiTFlkRG5iK0VlVzRWS203a0s2NW54eTA3a1U3ZG45ZFQ5L1Z2Zmp6dnJ2UDYzNzlzUDZyeitxTy9GZTdaZnYxM3k1by9MTHpSWEhONVVmZTdYMHlFc1BENjIvVjdMNmJ2R0tP
/// OFZKVnhUUlZ4VGNxeXJPVlZYRURWWGtEVFdtTi9PQ2JxaDhiK1Y2M3M3enVsdmdjNzlnK3NNaTM3Sml2NHBpLzN2eWFmY1ZIZy9rSGcvbEhvOWtGbFJJcDlYSnBqVElYWnBrazlETzVaTjFDaGVkWXBKQmJvRlJQc0drbUdpV1QyeFdUR3BXWXFxWFRkYkxYQUVHNldTQVNUWUowQ3lkUkZTdUNPVmtoR3FpQmNvcEpvbVBVZXlQa1BpeU1JbW5BNGpDajhnQk14Q3k2VVR1VFdUZVJPRnV5QnZYS0I5QVpFT0llRXg5eHRUR3dsaHlVMFdNdDVzSnJwZEgvUXNnRHB4ZEEvdGc2LzhNY2NCZElENnIxNXFOcGtaaXZFT2F6MVdmK3VTV21sT3BXcUJUKzV2VUhrYjFWS1BDMVNDYmFwQzRHVVJlZXVFMHM5ekRwSEEzeXQwQWVnVkNwNlJRVDlPcTNEVnFSSVBhRFZDdm1scXY5Q2dY
/// VEtzUWVsVUtwMWVLZmFva3ZsV3lHZFZ5L3lxbFg2bkk1NkhZcTFReS9hSE1wMVR1KzBneG8wenBEM2drOFMrVHppeVRCanlTejRMZ3JWdzV1MEkxdDF3ZGVFL3NmMC9pZTE4eTg3N00vNEU4NEtGaVZxa3lFSEJiRW5CTEduaGJOdWVPZk81ZHhieDd5dm4zVlFzQWovS1hsQlVzQlpRWExxc29DcW9zRHE0cUNha29DYnVyWG5vbk4raHVYdkM5L0pEN0JhRVBDc01lRm9VRFNvc2pIcFZFdGtYWkFVN3BBYzc5STVIM2prWStQTUtoaUFJOCtJSjM3eGp2d1RkSjk3OU51dmZkU3NERGIxZVhmYjI2NnVzMWdMcWZOOVQ4OGhUVS9mcnlrNmc5L1hMOW1VMTF2MjJxT2J1cCt1eW15bk92VjV4SGxGdXdwZUxjbHNwelc2clBicW41N1ExQTNaazNHbjdiM1BEYmE1QTJubjI5OGV5
/// V3BuT2JtODV0aGJUMU9KdkNiZXZQdk41dyt2WEdYelpwZnQ3VWNHcFQzYWxOdGI5dXFqdjlhaDAwcDZkZnJmOXBZK09QR3h0LzJsQlBNMXo1eTB0bHY2NHZQN1crL1BzWEtyLzdFeFhmcm1WUi9zMGFGbEJTd0tPdlZnRkt2MXArOTJnc2l6dEhZdTRkanJsM2tILy9JUC9lQWQ2alE3RmxCMlBMRDhTVWxVQjh6a01VUkpjVlJqN01YMWFhdDdBMGIzR3Blc0ZEMWNKU3hieEg4Z1dQWkhQTEZRc3I1Zk1ycFF1ZzNhNFF6UzBYemk3UENTelBDWGlRTS9PK3dQK3V3UCtlY09aZDBjdzdZcis3a2xsM0pmNzNaYk1lU0djOWxNNENiU21YQkZSSloxVkxabGRMWmxXSloxWktvSjJmVlNYMXI1SE5oRWErVGpHclR1R3ZLd3pVRnN6UzVNOXN5dk5yeVBXcFYzdldxYnpxRk5QMCtk
/// UDF1VDVhbFZlamZGcWp4SzFCT0tVaHg2VStlN0pCTXMwazhTQlNUeUx6SW5JZm9nRFRuVUZVdmtUcFpWWjZHbFVJQ0J3QXJBa1kxTzRBdlFyMnB6WXBYUm9Wa3dFTjhrbjZQRGVBTG5lcVFUMVZyNXFpVjRCQklVeHlONFIwcWxFeXhTQ2UyZ0pYczhJTkxJNkZRZTdDOHBGZU5sRWpHUVBRU3NmcVpHUDE4bkVHeFhpOWFvSkdQVmxUNEYwdjh5QVM3MmFCWDFQMk12TDFoNlRtUERFM2dIUFJaQ0VPTTUzNWhhUE84V05TdE12MHllMjVPMGZoN2pVME5UWlhFWEwxMFUrZjNGYUVONnJtbWFYZVJEeVZTQ2NUMlNRaWR5R3lxVVRpU2FUdVJES3VXVHJDTEJ0bVVndzNxc0JOR21kUVR6U29KdW1VNDNYSzBRYmxjSU5xbUVFMXhLakdYMDNLY1VUdFFsUlRFTXFwelhKM2dFbU9n
/// Z1BwbTVYZW1LcmNUYXJ4QnZWNGc4ckZwSnhpbHJzU21TdVJJMjJiNGFFSXlNTUVPQUxaQUxHYWxHNG0xU1NUYXFKSkNlZTdBWXZCUFlsa0NoRk5CTklsa2pGRWhoY2F4ZFBNSWs4aWRDT0N5VVE0RGlHYTNDeWVRc1FlelJJUGs5VGRDT2ZJcGtMTk5VdmM0YUJaNkc0U3VSdUJIeVZ1UnFtN1dUYU5TS2VaWlc0TnNxbjFjbGV0YklwZUNzZTk5UExwR3NYMEJwVjN0WEpxdGRLOVZqR2pRVGFqU2VHdVZVelZ5ejBCT29tN1R1eWxFZnRxUkRNUnNDUHgwRWluYWlUdUdvbFhrOWkvU1R3VElaa09CNXRrcnZXU2FUVlNyMnFaVjVYY0MvdzdpRzlMbFY2QVIwcFBRTG5DcTBMdVZTWHpBY0t0a3ZsVlMvMHJSZjdJdjFMUEtwbDdsZHdUQU5kV3l6enI1ZTZZVllsbm5jU25WdVJY
/// TGZhckV2dlVpSHdhQkRQcmhINXdmb1hVclZMcVZpWDJxQmY0Tk9YTTBJdW02MFZlVFpJcDBJUld5YWFXeWR3ZXlhWTlsRStyVkhsWFFla1VYalZ5cnhxWkorUU5ycTJVd2VOOElDZVZDbTlBaldJR29GYnBYNnYwaFVjRGF1VFRBWFZ5bnpxRko3UVdqVXFQSnJtUFZvYlF5YndNTWcrajFBUGFVcFBFaXhvTVNINktRUTRBdzdEWUJ0aUpTZTdhckpoQ1pHNUU1azVRL2g1RTdnRkhRQ3NNU2pkc2xwU2VUVXB2RUQ2a0ZwbGI3QkROektTWWJGYUNoa3hCSlZGQTgrWUZNQ3VubVZWVHplckpyTEVaRk9nUmdDOUFWT09JYWd4Ump3ZnRBbTB4eTRFZHBoTVpOT2JRaklQR1RpU1NTVVFFeXVOSmNqeFFoUVFUU05aa2t1MEMrUWVtb0Ezbk5KUE0weWp6QmtDOVEyYTBpaW1OcWtr
/// TnVaUHI4eVkzNUxzMDVrM1I1THBvRk9PMWNzQkVBTG9uOGlrQU9CbWlFcUFxald5YVZ1NmxVM2dibGI3TlNqK2k5Z1piTUtsSG10U2p6Ym5qek9vSlp2V2s1bHlYWnZVVVV5N0NrRHRabnp0UnB4N1hxQm9GcUZXTmJjajFxSlY1bXhSemRMS1FPdmtxY2xhT3M2bU1PSlhVMGhXS2sySjF4S3hCditNZkpBNjRPN0JHUFowT1NBejNxMCtuMzVPRW1hU0JST2hMVWwySnlJdW9mRWl1VjdOa3FpN0RqY2g5aVFUWVpEd3BuRXlLWGV0VUUydlY3bzE1czBDdFFXbU0rVjdra0p0ZVBxaEoxSnZramlLcXlTVFh6YWljWU1xYlhKczVSQ2VhUUpTK0p1bDBxTXQ2NGVTNmJManpBcDNBRDgzKzRCaURvbmVEY0JpUUNLQWhaeFRKSFVzS0pta0VVMGllUHpuZ3BVM3JSWlNqaUdJQ1Vj
/// L1FLNlpwbFNOMHVjTzFxdkhhQXM4eXVZZjV3R3dDTjg4YVNGUjlpTHliWGo1RVcrQlJwd3JReXVlU0hHOGljQ0VwUFlsaXVDNW5ER2dTdEI3QUVjMTVYazJxU2VTUVI1MW9CSkZQUlg0Uis0RFMxQWttNkhMZHlRRS9VQTZURU1qTDFYREFwMGFOOFNmSjl3R2ZTeXYwTVJYTUtaTzQxT1dQMHhXNEVCQlVqaDhSRHlmS3dhVEV0VUU0Z2lqR2t6eG9uUllSV2FoWnVGaVg3VXRVVTRscXJFa3ltaWltbVNVTGlTSlNsejBmUWxhU08wWXY2b084cko2aEZiZ0FzelFwUE9yQWR5djBySWEyaGVwSGcyUkVjKzVrZzJvS3RHbk5SZjRWMmU0NjVlSkdXUUMwWnFZUzExcjF1SWZDNFEyNXJvWUNWNjEwQUZFTlFYcFZUbTlJbjlHVU5ac1V6Ni9QbWFZUkJwcHlGOVRsVGE0ckhxTXJt
/// SWkxZ0JtZVI3SzhpSGd5S1pqUXFCNWFveHdCaWw2amhBcjFxRkZOTXgzMEJ5dHRGRXpVaTZhUVhEOVNQSzlCNUFGaHVhNWdKaGh0cmR4THEvSnJsUHZXaWYxMXlvQzZISmZtWEQrRFlnN0pYOVFvODY0U2pDY0hwalVveHVuVW5xWmNYNzEwbWs3c1F0UnVLQVNSTzVIT2FNNTBhYzUySmRDWXl6elFkYytmYWl5Y1VpVVpxUzl3cnhTTmcxQ2ZISjFERkI1WUkvbnp0YWtUd2M2YkZLT2hhVFVkbU5HZzlDc1grR3JWUzNTS0JXWlZvRUhzRGMwRFVYbVNYRStnSG8xOHJFRTlscFM0YU1WamFyS25HblBuYUlGbk15ZnBsUk5OQlJQcTVNT2JRR0hrazV2QjVyT2hkUmxQOHNlWlJZTk00bEhBTlZBNlU5NThJbDFJTW9DeitoSjVaeUliaUUxUjlpeVNOY09zR3F1VkQ4YXJDbVkw
/// cU1ZMzVFMEFMaUFGWGlSM3BpN0gyeXdPTUVuOXpBcDNqV3ljdm1Dcy90RDRtcndSMWVyUmpma1R0WXB4UkFsSzYwTEUwSUpPSlFyWCtzeFJ3SmdvM3Z4cERVWGVkWVZlRDZVdURmbmV1Z0svcXF6SjVsd1BmZTVRZmQ0QW8zcXdVVFVDeWc0a0MwMjRXVElESG1HVStobmt2bm9sK0VmdW10d3BqWG1UTlBsakcxUkRkUVdUcTVRemJnTnhmTGVUMUlPN1VXY3k0bmZkQVVnVHdCZjRmUXc2bFJXTS9DOWlsZWNOVllDTGNGR2R4aitKSS9XQmRHbXoxSmRJL1VuR1ZKSXpqWWpkMFVISUJTYWVSWlR6allyNTlSSi9hT2pLVkI0UGxONWxCWUUxaGNHVjZtWFZpdmsxTWwvd3lneDVrd0NrMEVlbkRLeVR6YXBUVHRjVStKcUs1NUJqSVZyRm9ocnhiUE9CT1pXU2FRM3llYVNBUS9L
/// NHh0eDVPdldZUnZVd25XcDZrMnFPc1dTSnBtQzI4WUNmb2NpdlJqZ0RHbWRTQ0poT1ZHNUFON1VpM3dxUmQ0M0tUWHQ0UmwzeHJLcUMrVFVIdytvTGc0Z0NESGdpa1E0aytVTWJWV05xOG1iVTVFVTBxS0tKS29qa0JtTGxsVXlCeUF0N25nVCtPdGxzYmNuOFIycXZtcExwVGNXK0pyVy9Kc2RMQXhaZUVtbzZIRlNSRzFDcThLdkxtMG55QXpRS2J5aG1aWUVQT0xSQVlYcnh6QVp4b0xZNFZIczBwS2JFa3h4Zm9CY0hrYnhvQTdneitlUHFRRE8rbUFQdFNWMm1TK2x1SDQwZ25CUW1OT2VGNk5UZWpjcUpldUF5aVUrVEpJVGtKVFdKUXVyRmZxUmtFaWtaRDY1dnN5eWdRZWhyTGw1aU9yaWtVdUhiVkFCK3RZOFdHaXY1YUkxNEJDbHhKN211dFZtakRPQWU1ODZ1U1BjSHk2
/// bFhUYTlVdVRZZG5XWDhhckhteUx4S3BZYzJ6OVVJMWdWV0lmSWg4a1VrZDVsSjd0c2s5dFVxdzNURlVaVWxBVTBuWnRibWczUG5Rekpta0gxZUpBVnJsaFM1MVJkUHJqN2dVWHZRdjFvOXMwWTk5NzdVcnlKM05qajJwSGd1dEtpMXFlTWJjOXlOcWxtTjZqa05CWXRyOGhaWHFSZldxUmMxcUJaQk5ramhFbkpvWHIzSXphaGVYSnJoQzNFQk9iRUVMS0VDaENZUDBPUXYxdVlGR3RVK3BOQU5HbmxUbGd1MjN2bXppTUtIS0dlWTVUN1ZnaWxWOG1tMVJmNVZoYjdsK1g3a1IwNkZjdnE5REJlb3B0cDB0NlpNTDNKZ0NUbTJzTEhJcnpMWHI2NTRVVlh1MGdwbFNGTkJWS01pcER6TmorUXRJY1ZMOU5Cb2lUMDBlWDc2a2xtNkVyKzdtU1BBQ01uUmFHTkpURU11bEQzSWVIVFdJ
/// L2tvM2VGcDBNanA4eGVZYzROTTBybEVOZE1vRzlNZ0dHek85eklkbU45MEtQeWhZRDVSYzR6cDNxUndIRGs0aWh6d01JZzh6R216RFprQm1tSlB6UmRlVFFvL1ErNjh1bUkvN2JIWjRMNXBWVFAxc3JtMUdYNUV0YVJSTWd0Qyt4ckYxS3E4S2JVbEhqVWwzdlVsL3RxU3dDYTFYMDNXSktMeTFvc21BM1RpeVRwb3BRN05yc3YzYlRnNC81clFvK21MRU4wWG9mZUYzdlhLbVliY21UV0M4WnJjVVpxOG9icmNFZURMb3hzbG0wWjkveGxFT3JOWjZtK1dUamRCQzYyYUJsRVArREoxOHBIbWtvbVBKR1B1eUdkcmZubWIxSHlENzRCdzlRMWtEUk02RjhBVzRHNEFkOURsd0FCUGR6aWVtemlBaU9xTnBCSDhHRnlWdzNTNStyZFA3eWtDSUFRZ0NtaUVKeldMSjJzbEUydVZrN1RG
/// M3BwYy81c3B2amZGc1ZlVks2L254VjVSaC80dVdYaEJPUCtHT1BpQkxLSlNFWG8zMC9kaGptZE43cXp5M0htMzVVRTNaSWxYSlN2TzdGdjB5NjVacDNiUCt5TW43Rnphc2x2eU1PTTNrWThLL01wVUM2NWt6TCtTRVhJK1pkNjVkTGZhdzBHR0krc3ZKVWY4bmhWK05pZmtmTmF5ZTJwTzA0RzRCK0lsRjVKbjN4SUYzNVNFM0pXR2FJOG1WQlJFWGhJdHV5aUwrQ1VuNkV4MnhLWDBtSE9mUlY3UDVOMlhjaDdLNXplV0xHb3FuSDh2TStCdVpzeVYxTGpMT1J6STRZV2NhVGNsSGczNTh6UjV3ZVpEcTI0TElzNEpsNXlXTFA1RnVPQ0tLdVNXY0tIeGNFS1ZJdXBTOHVMVEdXRVhsWEhuRlJGbnNoZmN5Rm40U0xIMGhqVHdwbVRtMVdTMysrblRtMHM0MnBLNFN4bmhQKzVmL0ZQ
/// R3pEK2tTODk4R2xRdVh0NTBJS3J4Qys1UDZYTXV5a091eWVZM0hJbHFPclRpanBoek1YM3A3NWtMejB2bVhpdFlmTE00K0p4bzRSVWhaRGprU3ViaWg3bUxxZy9QL0VNMHViS1FVNUdYZEQ0OTZLZDlDNzdkTStmNy9iTnZLb0x1S1JZMkZDODJISmpUSVBjMHFyMzBTbzk2RWJpcHZrMkttVHIxc2pMaGtxdFppeStKUXk3S3ViL2tCUCtVdGV3UEplK0tpdmV3SUxZbVA2cFd2cWhKUHFkUk5LTkc1R1U2RkhGVEV2VmJadlJQcVJIbnhKeFRhWUcxQjdua1VHaXphbDZ6Ykk1R051OXE5b3pUT2Y2L0Z5ejdvNWo3aHpqeVhFYm9kZldLMzhYY0s2S2dVdFd5eHNKRm1yeEEwT2thNWJ4cldYTi96dzY1SkV2NlE3WDZvcGozUi9heUcrbXpydTExZ2JhdU5uK203a2prTGRHOFc4
/// b0Z0L0tYZmJQWCszZEoySzlwbkt2aXVEdUtZR0RoK3Z3cGplb0o0RklSOVN3SUE2dlRSOWVJd0pXYjAzZ2c2RkZSMkswOHpnVnA2TmY3L005S2x2eVM2bjlGTkwvK1lKVDJZTGdtZi82ZExKL2ZNd0ovVEo1M05qdjhraXptbkREOGdqRGttblRaRGVHQytrTHV2YXc1MS9kUHIxWXUxaHlPdWlsZGZEcDU3dStDWlk4TzhxNktnODd1RFRtM2wzTTVPK2FXS3VwTzRieTdSZE9yajg2N2t1VjdKWlZ6TTMzMVBjSGFVbWwwZmVITStnTyt0eFVMTG9xQ3p3b2l2dnJFbnh4YlVTMmVlMVBnZXlGeitoMTU2STNNeFJwbEpMRFByYnpGMS9LRHoyVUZYOHdLL1c2bnovZTd2SzlKd2k1bkxYc2tqVENqNWl3cVZjNjlLZ200ckpoN1JiWDBpanpvRDBIUUgxbWhWM1A0TjBTOGlueitR
/// K1hpeStuVEhxbDhOVWZuMWg4S3JDaWFleUhURnlSODhuMy84OG1SMXpPNDEvY3QxS2tpU1ZHb1FZaytYVjJ1WjRONldoTjJsN2pSM2hDSTFsM1JaWk5NTU9XTU51YU1OSXZIb211cGNpRzVVK3R6ZllBMUtyOThrVlFjSktaYnhGeXYwK21BTlNCVW9Rc1pVZUlBTk5QeFlJQi94T01BQ21yRzk3MDFlbHp1dFk2WXoxYWZlK2N1RUdRdXhIZ1FHa3cwS3llQlUxU1Y1MUo3WU1aOWlZL3lwU0hjcVE2aEhyMGp2T3pqL0poMWM1bDFmc3dhVitiRlNjd3JrNWlQWmpFbnR3eW9POEM5TEExTFh6L2x4Y1dqdzEyY0UxeVpUUUdPY2RPWWFEZm1wZm05a3RlTSt6Vjdadm1oWU1WTEExNzJaVlo2V2EvMHRYbVQ2M2dxZThuWjFOaTM1dmRiTWFORDBzek95LzI3WnEzM0FxVS92SDNL
/// V24vclJMOE9nSS9qUnA1UFgzTG9MWStYNXZXSTh1N0k4ZTZ3Zm42Zk53UDdidkxxRXUvZWFXdll1QS9peHVWdW0xWlZIUGI3YnArTnJzenl5UTR4ZnM1UmN4Mmk1akdidWJhbjlubFg1M0cvLzJUUks3T2RvcjJZdFVHZCtINTI4YjQyTDgxaXptWUdYeFR3dGkvcEVlRml5L1B0QnNmNVBwQTM1bVYveE9hWnpCWVBadDlpNXRJdXo5LzN6ZnNrY3RUYW1UMFNvUGh6SEZkTXNkczZwODkzZTROL3lPYStFakU4MHRzdWVocVR1OTN0MTdTNWUrTTdySi9KckovRDhQMlpDRitHNDg5d3ZKa044NWpWbnN4dUhuTlo0bDk2UEt6b3c4a2JGemhCa1NPbk1xc0N1NjZjMnpYS2cxa0xUNXpQcURiMGZ5Q2VyY3ViMXlqMnJCZE1OU3E5U2RHc3FtelA2NS83ZkxiSWJxMjNiZEwwVHB4
/// cHpJclpUaTh0N0pqZ2E3OHljT0NiNFpOa0wzcVdTcm5OSlV2cTVlNDE2aGxuOTN1K3RxZ0QzOHQ1L2V4aFNkNjlsL3M2cGE0ZmVVSGdlMTg2blJ3SnFWRXRFMjhjdldxdS9WSWZadjVVSnQ2TDJSalFMZEc3UzV5bjA4WUZ6bWxyQm9MOVZPYk5QclRSNGVVcHpJNkZUTHc3RSs3dUhPSFZQZExONmlWLzV1UDV6THUrek8rN2g5VVV6eis4ZlV4S1l0OXR3WTVCRXhpZUQ1TVkwQ1YrZXArVjAzdStNdHN4YTBXUEt4a1RkU1UrNkZGQ1pGRXdvMUUrUlZQZ0RYYys4YjdiUjV6ZXEvMDd4WHAzalBLMFdqbkhNY2FEaVo3TXZPREpwTVIwdVpUdTliQWc1SlBZd1d2bjlGN3UxeXZPcDFPaUw3TitIclBPbjFudHdXendZbGFPWTdiUFpMNzd3UDFPWHBUc1ZkZFZQbzV4WG5ZZ2sz
/// aHZadE9zWHEvNjluM1JyL2VteGQzM3JPLzlnOUR6VnU3c2tzMmpOazV6aWgvVGJZM0hzRGNXREx5UU0vdlI0YUQzZWQxWEJUckdlVE52TEhPK2tqbnIyM2ZHdmI3QUxzN2JPbVE4ODhhaWJqZUZTOHZ5d2xWdmVXM25EWW4ydEl0d1lkYjdNYS9OWWVMZG1LUnB6RWZMdWh6YTZuSmZ1ZXgyWGdqWXdvbzVUSXkzZFp5N3pVWWZwOWY5T3I4NDNYbU5sMDJjQ3hNL2hYa3JpRG1kRVhpL21IdnduWWs3WXpxL3ZzQ0c3OHE4dXFEdjYvUDd4NHhuVmsxaXRzMWdzcm5PajRRTDZoUUw2eFZ6R3BRek5ZcnBsRGdtWTBlaEFrSmdpS21IRS9rb0loMU54T09oUlNlU3FUcTUzME4xc1BiVURsSjVpQmovSUlZcVlqVG8wUVZBQUhmUVJRTTE5TUEvUEZjRkNBbVgvamFaV2VJNFhYM3U3
/// YnRxVDIzZVdLTmtHTW1kb0ZlNzFCZE9lNWp2OXFoazFuV1Ivd2Vjbm42anVybVBHanByVXZlWE9lT09KM051NWk2L0s0cDZtQm44SUdYT25iMStVSEtnMkt4MWsrYVBZbVlNNytVenFOUG5DYTVuUlN2MmJReGNPTmxwenRnT0M4Y3dIM0M2M3krSWw3MHdpVE9TV1REVWV2NVk2eGVDdXZ4ZXRQcXlaTTFMTXpyTkgyMDFaM3luZVdON0pxOWQwSFIwdzRuM3B5K2RaTzA3cnZQVXdYWXZoNDYvclVvNDhWNUF1R3N2dUhuQXhENnJGbzc5Y1grQ1l0T2MyU002ekpvNHdHdFlseGovcmxmejVuLzU0VkQrYUNab3JOMHNqOTZCODhkTW1PUTR4OGYyME9lKzlkK3NrMjd5Q3hyRExISmwrQXY2ekI3ZmNmWW9tL0RKek9XOFZkK21SS3p3NnpSelNHZmZFVDI1QWYyRTd3ZWZrcXc3
/// blJYN1IwNzRiV2psOXN5NXVuTjY4K0hvR3praEcvMzZMUmppdEdpYy9ZclpBeFlNWnNMSDJXYTl0dkRYZ3ZkaWw3cTdEcllQbXRTbDhKM0ZsVjlFbjhrYzkvWGVFY1U3cHk1Zk1zaHJwTFA3VUVmTzlHNkhQdlg0ZHRlUUs4S3haVVV6RDMvZ3Rtd01FenpWZnZZNCsvZ0ZZL0tTWHlsS2Uzbmx3cUZ6aHpLTEJ6TXJKekduM25NMTV5MG00Q0VMWEUzQ2lTVFhYUy94dVorNlpQMFU2NFhEblFKR2R1UjRkamlXd3Y4eGd4ZnJacnRvVk4vQWZqMjR3K3hQZmJURVZEQUhJaGZ0OGJtN0VtM25qV1htakhaNk4yb3B6M1hVZ2xIT2NiTTZIRXYxcWZrNitJSFk3WUZrN3Q3bDQ1Wk02VGg1cExPZmE2Kzk2d012eUxkL0hMK0lPMjJRMzBCbS9qQW1kYmxUZWY3TWN2R1VzNStNL1BZ
/// ai8wMUxCODJmT21DbXk2Q2w3ajMyclp4NGZiLzN6YytIUWRoWXFnellOcE1KR3NBRWpiS0o5T2lUOVU3Q040cWQ4Yk85Rm8wWk1LTXpremlKT2ZMYW1EcEZnRms5WFNkMjBRcGROVEkzODZHWjl5VXpVK0tHaGd4akF2cDBYVHg2eEFjclFyOFd2YmQvdzdLd2NmWUwrakpMK3pDZmhESzM4NksyaEkrYk82cTc3NEJ1aThmMWVpdDI0dGRad2I4cFpwOFQrZHlTTGI0bFduWXBiZjVWWWRCNVlkaitWWk1pSjNkZk9yRkh3RVFtNVkxNWYwamVTNHRadXJDZnMzZDNrRER6MmJxdXRjZkNMNllFdkRTMVUvaVFYbUhqSjRaTTdIZGV4citnaWxnK3Q4dWNzVXpBVUdiL210R2wrZlBPcFBpRXVkZ0ZqT205eUhYUStrWERMa3NYLzdqSEkybUcwOXd4SGVaTTdoSTd1K2NQS1F2QXJ3
/// bVp3RUExaFE5Rm03K1N2ZlRMbmJQbWoyZDhSOXRQNys4VU4zVkUvdnFReTJrdm5jMWM4ME1xLzVwNjdhbU02SitUK2ZjS3R2MndkOVdyYzRZc2hpSVBab0xjblBkc1haYWZ1bkw3NnFtaDNveGJEeVpnQUpPNWVteU5MRkl2V2FpWHpqYktJQ3B4TlNuSG1GV0R6ZW9CQmtWZmtqZU1GRTBpQmRPTU11K0duQm1OT1lFVmtqRERtZDJrNFFmcWE5U1lkUGh4ZkNBSk1HYVdPSXgwMldYNm1YeURuZzQ4L3l2dWVGN2lBQWVtZ1RScnpEZ3NWVU9NNTJ2UHZnY2VoeVp2dkZreGh1UzUxc3NtMXhaNEE1V1VGcysvcHdwNmp6TWt3SFhpREUrL21lNmplZk5IZkxwMld1WUw0N05qK3hhdEhGZ1kzLzJMRi9wZCtNeTdORDgrNVlWcGdXT2NGbnA1TGZOeS9UVFI1Y0h4N2Z1M2gzdU43
/// UkxnTWl4d2JQZHR5d1pvVHJ3dFhlc2JNY0orNGZoQmZ1TjZSaS9zK1hQaHV2UENGUy9NNkRodlhLY0FsNkd6eDQvYXRTYW9ybmp0d1cxdWdaTTYrWHBPbU9ZeVlqM1hwN1J3M2NsM0FrTW1EL1VmN3hJNGJlcnlaVjdYUzdhZDNCKzl6SzN6dkNuOVp3enZFZVhiNDQraXBZYytIUjNyWnMveEdyRmtuc3ZhbDdndVU0ZE5HdTMwOGJvcFA0dGlOOHdmdUdpY3pldUpIaXNqM1dhN2pGN3FQaXA2aHYzWi9KVS9pQk41MDd2T0dUZDI1dmhKZnBPNnZSbzNaZDhyczZFZ3NnMlRjbDhZV2JSeTZPRVhCbFRJNTk0VWgyNmNQV2JoaUlFTHh2ZDliK1Vpcm1mUEplUHNPRDY5RCtTOHUyek85Qmt1WTRKY0JndGVDaWdyQ3FrdThhMC9NZjhYNFR4ZTRGQ1BVWVBtVDNQaCtndzZrekgv
/// cm5ScXRXcENUZDZNNnhLdTZQVzVnUk03ZUkvck9uMWlyL2lRNmE4dFgvSmEzS3lkNitibHZCeWdmTkgxWG5ad2syU0JXZVpQY24ydzkxY0NsVEw5dmlnaWNqd1RNR0hFVWgvdnhObmpmODU2NmZlTWhEVlRiVGlUQmkwWjBTZDJuTjNQSHdYVUtUeEx4V012S3VmR3oyRjh4ekw4Z0VsZjdQcnd3K2lJcFpPSCtZMW1QbjE1eEkwalM2c0twOWVWTE4yejBqM0llNHkzdTVmUFZKZHQwZE55M3d4L2VhbmZra25EdVRNR2I0b1lkT2pqS2JWSEZ1a0tmY2l4WmZkVS9LMFI0L3hjUjB5YlBIcXUrMERSNXRua0lJZW9QWnNLUEc2THBzdldqbHZ1N3J4Z2xOM3NjVjJEL01hdWoxbjJ6b3N2ZmJUdWhaMHJ3MlF2enoyN2UxYVZ4TmVrOENCNW5zMUs5MGJweE1hQ3lmZmxNMVN2ZUt6
/// MUhiVm94SVJaUXljRVRSdS9PWDdCdHRnNTd5WE1GYndja2JkMTRYZDd2TThyd2phRVRwa3pjZXlDQ2RQbWpSMlZNR2ZBL2xmSFo3N1dTZnhhaDh3VkhjV3IrdWUrUFBKYzV0SmJSVW43MW5uTUg5N0xmMlEvUHpmN3pTdW41VzFQZWpQUUwzTDB4Qmh2dDVjNDR3K2xMYnFYUC8raGZPR25JY1BqM1VZR2UvajZqUnA2WkUrOGVKdi8wbW1kZkVmYkFnVi9zV3ZoZzRMWlB5Zjd6QnZYTGRETjIyUE1TTTdNd1ZkeWcwK24rOGQ3OVEwY004Ujc0b0JGM3M1bnBRditrTTBUdlR0Lzk4YkFuSTNlUjNmNFg1Y3NnNEF4TktCMzhGejNCUzZ1M0Vuajk0UjRxRmRQeTNoaGRPcUxRekpYOTVlOE1MemtOZS9yZ2hkdWlMZXBYZzU3ZWU2NHVjUHNaNDYyVyt6VlkwT1MxeHN2Qm14L3lY
/// L1h0a1daNzRjZjM4TnBrRVFTd1J6YXFlRkc1QlBNeWhFbTlVQjkza0JqNFFoTi90Z2FwZXREa2VkOTRmeTZ2QVR5OVZ2a2dnQlhKalEveEEvRk5lT2FpY0FYR3ZxNmc3SUdlaHdtU2h4Ni9EUUovb3BkbVUvYm5wTTRnQzdnOXNBZTdDMzFOMnJQZkhaWEdhQlZUeUhLS1VUbFhpdHdxYy8zdjZmMExTdFlYSlVmOHlsM3ZNZklrWjd1L3RPbmpRdWJPMko3NHVUMytZTStDSGFXSnZiTENMTlhKblQ5N3YwcHQzUGpkNjJaNWpQTVpxYnJGTThSQTFNMytEdzQrZGFuYjNCY3gvZjNuK1krZitxWXJVR2o3eWhmbDY2Wnp4blRlNG1idTQvcjZQQ2xRNzh2ZWZXME1HbkQ3TzZMM1ByTm5qWStjTXFFWFd1REszTVRTamE3ekpyYXpXZW14eFF2MTZTSTZYZlV5dzl2bWI1Z2JMOFpr
/// OXk5SjA4TjhuZFpNYWY3cXBuTWt0Rk1raC96NnFJQmFSczhyaCtKT3BZNmIvNklIdlBIVDF6cVAxeVF2REZ5MFRRZ281Y2paMGwyckp3N3dtYlpsRTdpUFN0WFJmbDZqeDY3Y09ya0tMK09YNG00WndwZUNQWG9QRytTMTJMUCtUNFRldklYRDkwVU5lRnQ3cWlkL0VHZmhIUktqK3dtaWV0eUxkdjl1aUxrdFlWdWk4YU1XekI1VlBMMkZYdGVYYkpzcXIzL0tPc2RMMFV0bU9XM2NJWTNkOW9RK1l0K2pmbGNiZTVjYlVuUWozc0N1ZFA3eko4MkJnb2VQTEhMbGZSUXZYSXVLWnhGOHViVUY4Ujl1NDlYa3JsbHp3Y2JJaFo1VGg3UmJmd0F4eVhld3o3YkVGcjRQdTk4UnFMMndMb2E0ZUs2TEIrU1A1TW9YSWw0YktQUzQ1SWlhTDQ3TTIyS3E3L0h2RGtqUm00TG5QTDU3RjRi
/// eHpEUlk1Z05nWjFFTHcyNExadmUvSVgvTlpIbnB5OTYrcm4yQ0hBYnVETFlwL0Q5bDVKWGNaWk1HUjB3cVcvczRwNWZwTTh1TDU0T0ljWTdVYVBuVEJucjdyNTR3bGkzK0prOXRvY081bnFNOEIwK2dEZmZkZnNLankvMkJsWWVYdlpJTUw1VzRYMVB4WDBsZEtpM3h5aDNUMWMvanlIcG13Sk1CYUVOYVdPcUpGTWFEeTh1UHh4elNoeWQ5bVpBVXNTWW1kNERKNDd1TzhOMTZzcXdKV25iUTM4V2hkZDhzZEJ3eUZzdmN6Vkx3RythV0M4YnFEazAxUEJ0d04yU3hDK1RYOHpZOHVwYks1WXY4T28vZFFUak80WlpGengrend2enYwbUxyLzBoNFZ4KzBJcWdDYk5kcDRaTVg3YkExU1BTdC85YlNmMjM4NW1QNDVuMEZUMCtDbko2ZDZudDBROW5YTXlQL1hqTmxEbGpCZ2I3ZVU3
/// MzdiaHNmcmZYRms2S0dUa1VpRzVGWU5oNmJ1QngwZkthNDZFTmh4ZmtiblZaTnRsdTZzaGhVMGFOeXRtV3NHdmQvQUNYTHJOZHU3eWJOTzJDSXI2OGFPNTNlNll2bURyYzN6TXd3TTgzZE03d2k3bGgzKzMyQzUvWWQ4NkV5UUV6Sm9jdjZudnowTHliQjJaYyszN0xqd2Mybjg5YldYbzQ0WkoweGkveUJkN3VqTi9Nc2Q3alI4MGQzdnV0Z0I3SlhLZjM0cGpQMWpLcFhDWW5BcWZzWHYzY1UxK2NVS0ZJT0o4U203ODlhSE9vUzRoYkg3K1J6ajZqSEdNV2prbDVtM013YTkzTm9wZE00bmtreDQwSUorT0xHTmtvSUE2OWVrUkQzcGpxSXZmN3VkT3ZLdVpkVmZNZkhIdlRmRUZCcW4vREQ4S1lhcHFOalUxTlRmamREOG9hOVViU1pFSnJic1l1RGZwWkV2cVZHU0FPd0Q5SEhM
/// U3ZGU01WWUJEZC9kclRlKzhxNW1oVjdrUTZoY2pjNjdOY2pVV0JGUXJmU3RXQ2VuWDB6dEFSZ1pQR2VFMzFtTzQyZEdPUzc4OGxXeDU4OS9hVjNGVjNjeFBxRDZ4OHBJNjZwNDRvUGJMbXN6V3VZRXZMWmt5Yk0ybll2aGU4cmgzZXVndHF4bU9zNjhRSmZwT0g3ZUJPdUoyN1ViSW1JSFJVcDBCWEZ6ZVgwWkhoRTM4NnZ1Tlg0WnFOYy92TWMrbmxOM25Jck1tRDlyeTRvS2t3NGZpYkxyUGNPbzczR0Q1MjJzalk4S25sQmF1L2VkczNlRXJmZVo2ZS9tNXV3VE5kUzNaRkg5L3Bmelp0eG5YaHZGdlpVUldGYTI0ZGlDamFOVDlzSXJpam50SFRlLzJrZVBYbG9La0xSdlVKY2htL2Z2SHNvRW5kRXVZTStxN2t2Zlh4c3p4SGpwMHphVnpjbk02bjhtTytsMGFGZVRyUG0rVGpP
/// M2I2YlBkQnN1VGxONzdlZGUzUW03Y09iWHB3NEVYRHlhMlAxSnlLdy9QT1NlYTlFRGgrM3RqUnN5Y00rZlMxcU8rVm00T21NbUhlbmFQbVRsZzR5eXZBZlVMUWhHN0tGMzJOQmRFYXlVeFRZZENsakdXeC92MzhKdzZhNXpJaWVMenpqYlNRaHN6cFJPeHBFSHIvOGZuTWo3bUQxNGRQaWd2M1hwKzBLT1dUVjkvYkZCL28ydGQ3SUxONEZQUG00bDZYMDhMcVZSRjF3cGxHcGE5Qml1TVU2Z3RtZkpucEd6eS9rNXV2K3hSWHZ5aFAzNEtYNHM5dlgzYmxvOEJMMmNHWDFFc2VIcDUxVlRxcTZhRFBaZEg4NlBualozaE84WEVadE15cjM3cUF2aHZtRFBjWTBHR2g1K2laa3gxVHQ3Zy96UFhUSHcvNWJMbExvT3VvOFJObnVVNXkzN3R4eGgrNXE5NVBtci9NYTd6ZjVGNCtvNWgz
/// NHZzOUxBcHR5UFZwVU0rNG54ZTZJYlNYcCtjZ1Y2OXhIbFA3cEd5YVJRNXlEWUtwb0I0UFZITS9qclI5azl0OVBiZC9Rc1R3L1h2WHZmWmE3T3daN2o2VEJrMGZ4YXlaeTN6eFFmKzZnbWtrMzQ4b1BIWFNTWFh5NGRWRkF5NUpoa2hmSC9WRzVJUzFTMmJITHduOFpGdkVoMi9Nanc4YVBzL1ZZZlpRYTg1VUsvRWJReTRmalZuSG0rSTJlcWozU00vWkU5MTNyRjF3NGZnck43Nk11SHNzNUg3aDhyb3Z0cFFXcjM5NFpPMzFvOHQzYm5RSkdOc0hIS0lKN3N5SEh5NjhWdlJCYWx4dzhKaHBzNFpQOVJrNytPMlY3bmZ5NTFTWFRQOUR2VEJ4b2FPWHh6Q3ZhYTR2Ujh5TjlSM3BPNm5qUEE5bndWdnpydWZHMVI1Yzl1M252a3U5UjA4WU4zbmF0SEdMWi9hK1hzdzduYllrY3VL
/// QXdQRVRwbnVOV2h6UTZaeDg5c09qSWF0Qys2L2p1YjRlMXZ2bHVjeU4vSUN2Qkw2QmN6cjZCSXgzSFRtUzZ6bjVodzk0aHVNdjN2MHEvTnJ4ZWJYSEZ0VVhCTmJtQlpJdk9YY0VBWm14SGQ5ZDB1R3RrS0d2TEIyZitjYnlUemZFUlBpT1dlaldjK1k0SnNqYjd0aW5nU2FwSHhGT0lLSnhSRElPUEE2ZGFuSmRybHQ1L293L1pETXY1WVhmK25KVHcwVWhxZjRWditScGJDQTZUYk5aYjZUcmZRRnJzTlJBdXpaWTY0YkRhTjcwSFlnbGZ2bm5pQVB1Qks0TWpnQ0RaejRzLzJYM0xXbUFLYytUNUhxWTBrWVNwV2R6bms5RmpnczV1TGcrZSs2ZXhWMERoenQ1ak80ZDZORnRlZml3blZ1OVZYc1dGbjIrb09BRC80UHZlUi81MFAyOGVNSE5BekhLZC8zQzNLM2MrakpMSnZYK2dP
/// Y2llU3RvODdwUWI1K0pvMGNQbkRtdHoyY3ZqTHA3SUxadzIvUllEMGVYd1IyblRCNjBhUEhRejNZc1ZXNFBYdW5aTFhCMEIvK0puZWRQZFVwLzJVdVR6ejIyWlhTQUd6UEJvL01ZdHk0eElVUHJTbFo4LzlhMFJlTVl6OUVkM1ViMFhoczYvVXJCeTFWRjBZYTgyV2FaTDVHR0dKU2NxNkpaWDN3MkwzVFlVTTdvY2F0Y21RdHA0YWMrall2b2I3MWtjTitRTVlPRFI5dG1icDEvNnRDMkZlSGozUWIwQ1J3N01NS1QrUzB2N0ZkRldKUzM3ZlJCUTJhTmNWM2cwV3Y3YWxmSnV3dnlQMXlRLzhtOGdvOENqcnp2ZS9UOVNXWEg1NXhYeitYNTlKb3picERIWU52MGQ3am5TbDdlLzRyTDRvbk1yTkZNb0h0Ly8wbDlGby9zb053NFExY1FETTZhb1NqZ1FrWWd4NnZiakhIOVBZZjBp
/// dlhxYys0ei8yYmxES0tlYXBaNlh0bzllN1VuTTNza00za0FFeEU0T1AzalZWa2ZyK0hOR2VVemtGa3lobG5qemZ6d3laeWFQTzZqbkprTnlwbW1rb0FHOWJTeVF2L3ZwUE45cHpGajNQc09HOW1QN3p2NXVtQzdRYmxLbnh2eXNHVCtvMi9tWFNzWVcxbzhXWDk0Z1dUOVNKOHh2YWU1VHB6ck5TaDkrOUp2OW9kOXV6OXFFOWZiWllETjNDbmR1UjdNNWJRWnhxUGNQY3ZIKzQzck9ITGt5TWxqKzZkdW5QRGdVRkwyRzBzOWgxcDVqM2Z5bThCczV3MnNPSnhZcjU0RnhIRmRGcmd4M0dHeXE5VW9sNDYrM2oweXRnYm84OEoxT2Q2Ni9FWG45czdjRlRseTBSREd0UWV6eUxmM0c1c1haMlcvc216UlpJL3hYYWYyWXhLbmR6aTAzYjBoTDV3VWhlcUVBWHJaZkgzQlhNMVJuOHRT
/// MTgrVEJpd1l3VXp0MlhIbStDR3ZyNTRwVGs3WUdEdHR6dmhPYzRmM1hEemNhV2ZTOE45TFZpVUdEd253R093NmFOak1DZU5mNUU3TmZOZnY0TDVwWCt4eE8vSEp3cTgvRGo3d3B1OHZtVXN2SDQ1NmY5MGdqeUdNNzlUZUU2WXliMnoxdWZ2Rm03S05DeGVNNk9zemVKRGZoRUdib2lmZXpWOVFYamp0YXBIdjdqZEd1RTZ4R3pXeXk3S3BReGVONnp4cnN1M3FzRUduRlFuWDVHR1Zxc1UvZmpiTGY2eWorNVRCNDhiWnhZWDFQNU96N0k5TXpocWZFZTY5bmYyOGVzL3pkanl3WTk2aHQwTG1UeGd4cFYrditjT3NYNXBwZlRyVDkyaTYvOXk1UFNkTUhUNXAyS1JJTi8rTXFQa250Z1lWZlJTWTg0N3J3UlIvMFR0akQreWVkdlVnNzVRMDVKM1lYZ3ZITXI2REdRaFZkcjRXSzl1
/// M2ZYbVl6OXlwbldhTVplYTdNcEt0NDdScVgzeGRvcHFpazArdEZMdmZGMCsvbzF4NHM0QmYvdjJidW10aTBuaUttTy9qZHdTTnVJWm9pL2tpV1FBcEFQNWtEZnpDaUJGSGNKaUJXUEJNK0FrQU8wL2RucmVQQXo5SWJEYmd0MzdvcTVwSE5lZjIzMVlHR25QZGlOS0ZaSTNBRVovcXFiV0NNYVRRMXlDYWVXVDF3RzN6ZTY2YjEzZmxmTWUxUzYwM2hGdS9FbTY5WVRHekxvQjVKWkQ1S0lJNStQYkFXK3E1bCtXTGxGdGRkNFFOM2J5ZzM3cHB6TXNCSGVhN09MZ010dzRPR1BYMkdxK2puMDRwSzE1MFI3cEV1Y2w5SzkrVHQzanNBaDhtYVpIVDJ3dTdKNHhpWHB6ZDg0T2t5ZUx0WHBjbFM4bWgwUFB2akh4aG1VMTRVT2ZZcVA1dkx4OVlKVnh3L3UzUmJ5eTIzaGpTYi8zU01U
/// dVRQTzdtOFJzTDVoUGxOQ0p3SlRtQlJMYXdYTzV4THMxbmcwZnZIWFBHWlhFNzF5cVhWR1J6ZGkvcytjYk1BUzlONy9GcDJJQmpId1ZlTEZxNWM1M3Jpd3RkdG9XNGZCQnBkMUhrL1h2T2pIZERuRjhNY0ZrZDRNYWZZYjloaWRVYmk1ak5jNW5OUWN5TGM1aHQ4NWlkb2N5cDFMNFhwRzV2Und4NWVjbTROUXQ2NTM4NDcwb3U5OHRQcG43SzY3QjVzZVA2SmYxWHplMjdZWGFYUTIrNEdZdm1hMld1cE1UL25qUmdXMlRmRll1R3JsNDBhbnZvd1BPZlRORUpYWWxzSXBHNU51UXRPYlpqeXE3RWdXc0M3U0xkbURoZmgxZy9KKzQwcS9WenVpU3ZHSHQ0dTJlbG1xc3ZqcWlSK0dsVU14cVY3cFhDOGRVRmZtZEZnYTlHZFZvUlA0WVhQdVFkM3JETGFTRlZtVE9yQlZNZUZMczlP
/// dTU1TzNma1E5bjRHc0gwZ3JYREUvejdKU3lhc09mbEdXY2wwWTl5dzhvSytIbnZMRmkzYVBDbTRGR3ZCVHFmM1RHcFVicEEvZks0TFpIRFZrVk5XeHM1NnZEYlkrNktBNzdidC9pVm9ONGJJb2E5c0tUM1ovR0RiZ29XMVFtbWFhU3VOWG0rMlJ1N0pZUTVoeTdwa3JDc3AvcE5MNU55RVpINGtyd0YxYkxnWHo1Y21obzc5YVc1UFdNREhMbnpyY1BuV2tYUDc1cTBzTjkyN2lqbEpzL0xLWE0weWlWRXZzQXNtR1VRNHF2aXhnTFhtaEx2MzFJQzBsZTd2RHgvOVBLQWdTRWV6TXZjTG54Zkp0NnJ3NGNSMDNOV3ovbDUzOUtLRTJzL1dEMXNRK1RJK0ZuajQvMUh2N2lveitZdyt5MUxtVmNDbUkxdXpOdisxcnRESGI5OGYrTGwzRms1Vy9zbnpySk5XaklnTnJ6UG5yYzhidWRG
/// SGRycXNtVmh2MWVXamx1M1pNeWVOUzRWdVhOcWMxMUtEMHc3dUgvc3FwamV2S0RCcndlUGZYRm05NWNXZDk3LzB2QmJlUkUxK1VHa0tPUjI2dHlYRm5kUENoMFN2YVRqT3l2NjM4cGVhQ2hjZWVMdDhGMkpmcHY0by9qK3pBdVRtUTltRCtST0hyTiszc3lVeEJtSDMvQ29QYmprY3Q2Y3hJanU0VUhqZVlFKzYvMDlQNTQxYk8rOEh1OEZPMjROWjFiUFpWYk5ZVDVKY3ZnK00rRE9nZmp2VXhidld6M3F0V1U5NDJZNHJsbllMMzVPajhXVG1lWHpuSGJFOTkvMzB2QS9WTXRLMWI0VkNzK0hNcDg3c29BNzZ1Q0s0eS9vejM1RzdxaEozYzlFZncxWFV6YzNFcE1KVjlzQVpxQTBZVUtIQXRmcEFRQ0pZSVFDdmdhY0FZY1I5THlXay84cDRzQTN2WEF2K0ovZThWYkYyVSt1eVgw
/// YWxlT0ljZ3krKzhtSG9IU3NWamFNNUUwaUNvL3lQWk5yQll2S3hFc2VTR2ZmVWZqZStQL2FlNjdnTnBMc3J2em5qM1BaZFhXK3RDdnRLbENrUklvNTV5aUtTV0cxaXFzOVJWSlVQSVU5bmUvc1QxZlpMbis0N0Rvck1ZQklBMkNRQTRQQ0txNnl0Q3RwSlNvd2dna2tjcGdaREFiQTgrdUJ0Q1ZYM1gzSVpYOFpyeDZIalpudTE2OWZkNzk1M2RPdlcxMDJwcTZjVkRmT2FwcG01RlVPZWFGTFNaYmNSc3dsWVdPZFI5NDhmYjdlMlZXMUlHOHgvVU5lWjlWZmZKYnlvNE1GUDlKMS9paWtXQTNXbG9oeGg4ZjYxYWp4MlAzZTJzZm5DK2N1MUR2UE5zNzByQThZdDRXc1RSRTZINlFyb1d2RlNGL3hTL082SjNUVGlMUUN6TFZvQkUyZno1aFJyNWxXN3JEM3JRdG9TK0tHTEZCbGs1
/// RmhieFZRRlhIRFlnKzkyS3RwZFZLYjV2cHl3bVFGU3ZYVXVZSUZaYlZQMCtqcHJoYTByWkdMbThka2ExNmQzMkx2MlRKek5qMnV6d1picGJPcmZFRjJhRUYxYWxhenlhMWY0NWVYZWVURmM1cXFzYjVDbjZyTWc4d01wY0d0bWlscDJ4eTlmMVRlNmphMGdLMEpXV0lVQlhOZEJaTzlhNmRWRzJld2dhSk5icW4wbjEwVzdGa1pNZGNPeTR2ZldOZTlNbTE0TGErSkc1cEFWdzJxUEtGN3NXQktENXJ6Z3RvYUQ5VThJMjNHTmpyYTB6WWwzNFQ2SXFUZkhGSTFnckV4VGhYRXBCbWd6WTdKVTBLOW40Q3BESFRyeHM5VmY2OXB1SzhzZUNGSkNSbFdnMzRGbUZMbjFNdGNwbXdHVFVWTkJWRDF3cm1LMGZQVlUzVGJsS3d5M3Q4VTFaU0JwY21yMy9qeVFwTlR2ZFBadFM3OGI4VkF0
/// N2t1Vk9FUTc1bG0vVk5wVll3dVJjYkNoc2JoczZVamlvMXZwQnRHenRZSzZnYlE1QU9WRXVuN2RLcDcyYkNxNnBWcDQ1ajJzNEN1RGRCMHVyQWljaTRWcmFlNFprMVFVK2ZRbEUvcVM0ZlZ4WThreGQ5MjE0MVNyVDdMV3NGV0J2bzBVSHdLdmFqWjgwR1dIZTlkTENqK0dpeWZ3T1hxNk1DNmVXcjk2OTdhVi9JY3U3N2c2Ym5WYnk1VSs5VzdRNnFkSVhXZFUxRXdxNjIyMHh2c3lvNXAxV0VIdldPQmJuRW9pK1o2OGtHemhlbHBjNTBwNFpDTnkrVnVROEc0dkdIQjF2RkV0bm1NM2dqWDEvT2EzQmxKMGJ4MncvT3UxaWxaUzBTZUwwaVhnRFVyT0ZENm1LcDVRbTF3MFR0bWU1cGMydWFBdVpFM1ZvYTYwMEdDN0ZXK1BsZHV0MndaczdTT0tjcjQzZ3FRTnJHeUxXN1Zqa25O
/// K3VjWFN1Yk81UGw3MTQ1YzJEMmxQQktrdDNIcWNqQ21PWlNMWHVpcW4xdStHRGNjY1ZEN2ZlZHJQV2RXVC9lbXpDaFdNSVpjVnB2THFvb2pWSFdVYWhLb2RVRloyNEprN2F5c2NmaEM4WXZla2pGVmhjZlc0alExMkdVbDdPV3RJeWplUzd2bjdwenlQZjNueUZndnpBOEM4d1NpVXhCMVFUUUlQQU5oam53cWVic29BLy9JU28zRVJJWkFwa0lUQ3pkK1dDMzY3aGhJRXZuUGFnMkVEMVVjU0RLRXViS0VLR3FwbDQ3di9tV01ybUlOMlJIcE1xQlNZNm8wUnJrMHFGNFNWS2ZnTUp1NDVjbEV6enh0SHEvUER1cHl5V3BaMDVxWXRUV21yd2RqQmVnell0U2lxSHd4cU5KSkMxWlhCODR0QjBNbGI5bmdwRGZOVTl2bUpJMitybFNRclF6OWNWWHdmSVZQdWlWazNNa08xQWQxMmNT
/// blNGMERtdHFZcWpTcVdnV3lSWERoRnlCTEFYT1p6MVFadE5Zd3FqeGlCUFVoWTJsNEV3WTJoaFJsQWNYU2lIcEpWSmtwOU9iRXVndEJuaG5YL1RTcyswbmNVaGJTVndTTnE1enFqOTNxWlp3cGt6ZG1nQ2tQdEdXZ0tHVGttV0ZERlJnL0EzMExHUEl3citpNW40TWtKNnI0UENqL25OUFV4TFFGWkRHNE5rOHdsdnJWdVdEQlZDbGN6MS94aWtWZVNUR25hNHRhNmdLeWRQYnNNdWhiaVlJaTNqUjBOUXkxOGJZU2p5b0Z0RmtSU1dxNEY3dDB2c2VVNDcxWTR1b3Y4ZXFMWWxRSldYbmRseDQ2OXpPLzRpZngvcFJBMTZmRWpZcXV3WWJGVVhVeFEzT0VidkIxNTBha2VYRkpPbi91RStqNUZEUW9qYVdSbnNXZ3lTTnJvdW5haUsyTXVaakQyWmFHTkQrTnFQNDJTaThLYUZPeE9r
/// QlRDdElTT0pNTlhibmtXNHk1R0hSWm9NdGt6eXptZTFZRkZXVDFLcGhhUWRrQVp6Rm1UYnl2T0dLcUNnNVVNcVlDTU9iRGhVOUFzVXJRRkVKL0sxemFLcWpyQmV4TDhsV2tJcVFmZ1c1VjFGckIyZXA1YzRPZ0xnVkpHa2hUU0VWcmtTWGlxU2xvTXlMbWRNYVk2ZFZrUjB5TkVXTjlWSnNiVlgwS2lyOEI2VTlCc2hMNmNrQ2VUcFNJN01maG5yOWtlMzRlVWFhandoTDBKUXlkeW1xWGg1RmJVdzNvMTRHK0ZVeFZvTTVpbGF1dzE0WFZyYXpxTTFiVEZLYXJjZXdNK25MUXRwRDNSRTh1S0RKNHhlS0E3Qk8vQXZWN1EwaS8xUzNEVm9TNS9BSjB5MkdvREpVK2c4TllWVDVwUE5TS3VESEhwU3YxR21yQnZBYjBsVUFYZ3JsSWtLWEd1cGNSbjVTZVRGNlZIN0pVY3YxVnlCVjBa
/// Uk5ob21HbHJSUDBOV2gzZ3o0TEcxdVFXaHVpV3NsYWF1S0U5VEdZbGpoMU9UT0dHcmV1bWRldkJYMHhZR096cElCMXFhRDRDTFFyeVhwemVUYjBaSlBQSmRxMVlGN0gwV3RucGVVTDJqWCsvbzBMaHVZcHF0NmpXeGUrZGRUMzRsOEQweFNFcmdBOEV6Y0ttSWE0bDNpYThHRnlUaDNMdnpzY1Z4eUdDT3k3Zzhxd0I3TUNzTkYzcXpiRW85YmVyUmI5UDFBY2FHcDR5WjRjNUhSaUh1SnY1ci8vanpGOVN4QUhKdW9DMEpheTZrSy9Kbyt4a1VYMUFSVXExMGJpQzBUbFljWEVOS2xoMVNwR21SVkNUU2twRFo3UDRYdlNRYjRVMUV1QStvUzRBTWp5UVYwRTFsd3dyUEpLVnpzbEpieDJFeGcrQjBXSmNDRURqQnRCdFNuWTFScVUxWUVsVzlCK0pFZ1drVzhINm56K3dvb1lhZ2Zz
/// TGNvVjJJN2ppc3o1Y3lrc0RrWlFjWnovRkNSTFFiWWlJazhEUTFsWW5zVm9NbEROb1ZuQjZFczRiU0dxczVoeG1XQlk3bEhrekVnelhMYmxEdHV2WEFPL1lvYnd6aElPTzdteUFMb3pBbDFMNDRhaUdGMHV5SE5KMStwZFJEU1VxUkxVamNHK0NrNlpTK2ozcFpBSktrT2h0eWNWSktrZ3hYd1hvV1lFdWlJZ0x3cHIwamxNMHIwYXBEbWdYQTU5aTVrTGFaN3ViTlF5ODczTHNIbVJnaHZUd1pMRmFOTVhsR2xPWlNhdkx4YUlyeUNPWUxFenAzUDBFakNuQTdVYXFBS1E1M085dVl3a1A2SXFpMnRSNFJZQmFpdmkzWUNHM2lxME9FZ1NaVFpRMkk1UmorUUsxRXBldnpwbXpna29sb2VWcVJ5MU1tWXFqdW1MaUxMQUV2MFJHY09FZVR4cUxua0tXWEV2UTdhTHNVR0hxV3lVSjVv
/// SnhEZEhVaFNYNWdyYWZCK2R6aEdYaWx3NHV4U1VhWmdkY2YvVGxIQ3lYTFpySmZtK1JwWXFyZ1JVVElxY1FOY3FwaStUazZSRDN3clFaMGU3UDQ3MXBNYTdpdVBkRmVTbG9rSHR2MXBRcFBPU29uQnZxZEFqK2huaXNCZkg3ZGhzWkhuWU0wR2RCd1lzUzFwTWtoYVZaS09taTh1S1VDY0thTk5waXRCbVpNNFVNbWZ5aGE2Y0NPWk9peDZTeW5KQlZzbktpamxGb1VEbG9oYUlkT2NLNTBXYXhnS2cwNEJHTFYvS1NFdGlxbWF1cDRUVVhkL1A0dFF2NDVxbGpEU1ZpRjJMaWpJTHBHVEtQeWpEMFhlR1FQd2VVOW56aTdFS1NOYjRxdEFWZzNSVmpFcDNTVkxjV0VDc0JlTG5sZ2wwWHBUSzRpUW8waXd3cmdqTFB5YU80OG95NkN2RTRqRC8va3UyYTBtWUpyNS9ibm1wWDFaQVBo
/// NHBsL0hLanhqWnI0QmV6Y3RTSTdJbHhLZE9ueUdvVnJ0NnNrZlBGQVZ0aDJmMFg5a3QvK2k1ZVM1MFh3SWpSbUJ1UVBnTzJUR1E3Q2ZvRUxjWERZaHptdGpweFRFR0lnWUppbHFERDBJNElNNWl2RFU2eFBVYXhQUWdSZ0JHeHBFSnFneEVjWWlTSVBEbjRNTVZSOHlKaWdOekprUWpFOVBmbm4rbVdHK1hWdm1sdFNGNXZVTmFnNk9TV1dPRG5hNmJrcTl4SzF1OHZSVkJTWkZmbnVOVDVmanBVcitteHFkb0NraGJvZitMcUtxQmxlWncxR3BXbmV0VjRyQ2xJYUJ0bVpkbUJlaDh6dExBR0ZxZHNuVUxrdVlBVlJQUk5tSVNiL2VHMmJOdEM3MTFBVHJEclZyczZrM2psQ1ZnV1JPVUZnYjZpc0tLVWxhU0crck5ZMVYxdktITnA2d1hqTTB4YlRYb0tzUHFLbnh6aHVsS1ZsODVT
/// K1hQMGFWejJzWTVldTJjdXNhQmxVZmx1NVFGd3NCbXA2NXAybEkyWnM2Y3RLeDBXdk9EMmpvd2ZRYUtSbDVXNVZHV0JFM1ZUbldwUXlKNlJzb0tpQXVmZHExTFdqc3JyWFpyaUlzTnZyMEZaWEZJVytWUmxBbG9hcWxLVUJYeThoS1B2SHF5cDhCbnpBK2J5a0c5QWVUNEFpZnVQSDVWall0cVpHMGJGalJWb2t0cjNvSTBIYVhFR3NwWlE2MVBYUjIxcmc5UzlYNWx0VmRaaVMvdE9iTGFJZzlMR3VvclpSUTFySFp0VU5mc1ZqZk1LeXVjOGpLZnNoaU5jRjVkRXBMbWVYdnkvZEp5djZMZUo2M2daUVhJbUtldjBLVW85K25xWE9vcWo3ckdwNnBiNkt0eFNXb1lSVjFZWGgyV29VbFlBK1ltUmxVVjdNbmxwRVZCVlUxQTErQTFrR0ZVV0ZjU0ovMnpuSlZoOVZXNWRMVXpxbklY
/// VlFsVWJieXZCTzArZkdkNE1GT3ExRXRYZVZVVitKSVBLOHFEWjNLaWt2S1lyRFpPTllDeG1kWFd6c3Z5SE5Jc3dWSWFOZFJHVkJ2RGlzL0Q4alpXVmh2cUsvVDNGQWlLdHFoaWM1VGF6Q2xiaVhPVHJNZ2xLMGZSTGZTVWVXWFZERlhEcW1vam1yVlJiV3RjczE1UXRYRHl1b1V6aFp5OGdWYzJjakxpVVNMUVRhQnZ4RGJBOUdZRkpTVUJlWlZmWGUvWHJ2SFJkZGpxNHBaV1hsUExxOHFEMGdMbitkVW9FRWE5QmcwQlFiT09UTDZnWWFJcDRsVFpBU29yb0M0SzYydGQzVVhlM3JLQXRKYWxHakZtaUtya3FDTGl1YU1wNStuSytiNXl0N1FjZFhkRWtoVTJWQVQwdFg2NkpheHRpL1dWY2QyWlhpclRyY3JGS3NBY25jcU1HVm1xbnk1ak5QVXhUUk1nL3lxMHRadWRzdko1VmMy
/// OHV0NUJWVHRrWmZOOXBSNWxsWmR1V3RCdG1sUzIySlYxUG5NemYzbGo5TWFYOE8xdlllUS80WlVLSFBmQVB3RzhIeUorc3VHdzRDQW5QY1ZDWXEva0k1RXdMMFQ0R1BrMGt1ajdpUmtLY2p4bFJCQVBrOE1CUzJJS1E1elVFSWNxL1BzTHZkNXFtYmMveERVZHFGUHc5NStBRHgrcXhJT29ycEJrRlBuaVBhNFhwa25yeWFEdFFGamZ3ZW5hdllZREMrYU9hZHZlNllGMmgrWElqUEdvby8rNFkvQ29ZNmhqOXVMZXFmNjlrNVlEMC9yZnpHbFAyZVdkRTdKZFUvVFcrZjZkODFmYXh5OGUvTjU4OG9uaHhPakEwVmZHM1c4TSs4Yk1uV1A2d3hPbXpvbUJuU05rRExuZmJ2N04vTUR2WFpkUExGelpQRE80WWRLMGYxeC9hRlN6WTFML2E0Zmx1SFB3OU56UVVhUnZOeDJidFo1K296
/// NU1rdHM2Uml4N3g0MkhSL1h0TCttdGsvMWJaeTV0bXhyNGN0cDhjdGIwaHdYelZ5N1RFWmRwdjl2Y2JsZTNUK21PVFJoUFRGdFB6RmdPem1nN0ZxaVREdWx4dituVW5PbVFmYWp6MWRDZTRjR2RyMjNicC9SZnVrMEhuSVpPNzlESjE4YjIxME1IWHc4ZEdEYnRXckR0SDFkdGZVNXRzMXYyZTYzN1dHdTdXOWMrcmQ1djd6ODJmZlhvcTRIUHgydzdwOVNuN2RJVGs4cXRkdU8yOFlIams1ZCsvOGJVT1dVN2lHeFBXVHBtekh0bkRXUTNpam5kTnJ0Nis1eSs0NDFpdjExLzRwWDYwUHpsMzAwT2R0b0hEc3haRHN5WURreVlEbzFZRDcrMkhSMjJIUnJ1N3hnZDdCanIzejFxM0dFM2Z6bGozajJtMnoxdVBEalYvOVdFOWVUVXdPRUpjOGVFNWNTbzhkaUkrZUJFUCtiVlBtczl0
/// cUE3N1RIOHZjZjArM256OGFuKy9XT0RlNGY3OTc4MGQvZ3ZublphajJNdGZHZlovOGk0NTVsbDE2aGh5N1JsMDdTMWJheC8wNXRMKzRZdkhuM1pmM3JVY25yYWNNUnQ2WnhTYlowMWJwOGQyR2tmK3ZYVXRmYUpyenRlR0hhTjZsRSt4OTMwTVkvcWlJcytORy9zbk96dmVIMjVmZmpLcnVlV2pjUEd6MTlwOXJ6UmRFelNlK2NNK3p5V0RnWWJpZnFVUS9OM3MvcXZ4ckNtREZ1R3JWdEhMaDJjdnZuYjJac25KaTRkZW1QdFJFR05HVHJIZFFmR05lMFQ2bmJmME8rbTZRTk8yN0ZaWS91c1pkOXMvNzdueWswVHV1MWU4MjZmYWJmVHVtZlcxbzRTR3hub2ZHblorOEswYTlpd2RkUzBmZEt5YzhhMmQ5YldPV005aHMxcHlueGtWcjk3d2JSbld0OCtwVDh3cVcxSDBVMmE5NHla
/// dmh4RG1oZVB6UTZjbkRFZm43ZitaczdVT2FuOXdxN2Y0VER0SHRQdmV6UDR1OUhCVTFOWVU5WnRZOVpkcjB5ZEwzVy9IZGVmbWpmdmNRNXRuL2g2KytqRkx5WjErMGFvL2VPWGpvMS9mV3pNMWo1dTJEdE83eGxYNzdicjk0N3B2cHk3dE05eDdjRDg3UlB6ZC84d2YrZWZYTGZQTUhjcDVqdWI1L1hWd053OUNENkY4REF3MzRIL0lZUmZrQjErV1J5R29FMFJJbHVRUnlOc2lDSGRHMS9nckdoa1lBRDdJeW9FOFQ4ZkJ5WkdvakppQWd4akZOUU9iNU1naWpGUlpYRGl5Z3BFWGt4STdvcTJCcW9NQVVJNGxoSDNCUHNUOE1HVG95U2pPSEhmUjVPSGVPRDZSOEUrQko0cjRMa0c3dXNRdUEzQlcrQzVCTXgxNE82RDd3NTQ3MERvTG9SdkEzY0RnbGZCZndzQzN3TDdBaGJ1a2Uy
/// WWhidkFYWVBnMThEZWdjZ3dSRjREaDhLNkRlR0hFSDBNekQxZ2IwSHNDdkFERUVVNjM1QzltLzNYd0tlRDhDQkVud0h6RkVJM1FYaEFST3g5RE54RDRCK0E5eUc0SDRIL0NmanVRL2d1aVJCNUJySHZ3WU5KcmtCMEVKZ3JKSUw3QlRtUno0OHhrZklkY3RSaytDVjRoOEgzRXR5UHdmRUFmT05rMzJuZkUvQitBOXczVWY4UUNEaVMvQWJjVnlCMGp4Qm5IcEU5cWVMM2dVZXVya0wwSVhpdWtoeWo5OEUxQk03TEVFQWk5MG54MlJ2QUR3SjNsV3hreStKTEEvbThDY3g5Q0Q0QzMyMklQb0hRUXdqY0FlWU8rSzhUYVFTK0pqU3grTzc3RUJtQitRZkFQWVBnSGVEdVFPQWJranY3a0NSSENmUDNpTDNLWG9mb2JmQU9RaEFMK0FEWXUwVHlnVWNFdVFmZ1JoRzlJanRmZXJBZ3lP
/// b044cFZ1N2pGNFhvTHZPZmdmQUgrYmJKWVh2Z0d4N3lENExiaVI1Z09JM0FQNERnQXBYQUhXQW1FRFJDd1F1d0hjUGVCZVFtaVlTQXd6d3VvSVhBYmhHdml0d0E0QmZ5T09qVUY0Q3V4eklrYlhJN0tJd0hNVDJHOEE3a0xzR3NRd01rYTRDNUdId040bXlkM1h3SE1IUE0vQis1emtqZ0tNWFljWVNoSkZkSXNVTFhRTnd2ZUlsQ0xJM2gwSVluTjZETDU3NEx3RmtjZmttRkQyS3ZCSXh3b3hKSGlWYkJjV3VBck1WV0J2QW5lTGxDNkNCZndhSW5qek1xR0c3U1Q0QUR6WU51NEJnOFJ2Z3ZlMktLdm5FSGtLTVh4NkZVTFhTYnNLM0lYNUcrQy9EK3dEMHZ3WUpIZ1h2RGZKOXVMQ0MvQmZBaDRidzNWZ1VPWnZ3UCtNTkZkdUlCN1NrUTBIVWZMY3N6aFNqbU1yeFRxNkRjeGQw
/// a0dpandnUDhSc1F3WWFOQW5tRWVnR2licklGVjRoOGVVaDhKZVhKd2s1ODJ4UFRnSXY0dzhDZ2RlQmtmV3ppZzRqb25rNU1CZXlHK0J1dkdCYU5CYlFuT0hMZVBhSHpQaElOZzlFdzJUdkZnU253UG1vTnZHSjhmQ0xxalI4VVIySUc1SDlIY1NDSTFreUNQQW1FeFZNeVhRVEplUTF1OFVoZE44VHg2aFV4c1NrNktrc1J5Y3lObjh6MzRwVTh4WnN1OFJIR1FhTUxVVHpsbC94TUlENFNqNFJJeE1GVVpBTWhjWWZZT0lhRDVDZkpTd3duRW1JZ0ppTFp1RmtrUW1KaU9FRUswNG9UenRHUWVFVm1SRFlTWEpHYmlmdEJFRUlFTVlBOHYrVUVXWFc5S3hyeS96NmZtSXZJU1NKbVFnaUVjaUpPSW11OEtkTEg1Q1FtUGhLWlRNZ0VyeVNBY1JJbmF2K1FDOFlSOFcwdUNjUzBDVXpr
/// anRSRS9JRUhRaGFUSkdRaWhnbUs4Uk1Va0kxRTZRaUhpZVJJUnl3VXVaT2duTGhpcVJOeVN3eWs4V1lJNGxpS0JPZVlveWlXdC9ndWQyU2JpQkdsaXVIM21Ydy8yanRCWVlTRTVFbldpUndSRTZsK1FNeE9mSnJnUDhFbkNmOUFVOFMzQkJOeUVITWgrSDRjZkNSeVNCQURXS0dJNzBSTmFDWVNpbWxKUVJJb1pwUkFRakRSVUJOazhZcXBrSGtVQzRZVHpmVWRUU0t1UktHUXdqdDhtekNSVnFSR2RzSEF0ekxwWUQ5MFlCSEU3a2ErWmhMRVIrOTM3N2YvRWxIZTNpS1FDQ1lpdjQva09mNGxJdi8zT0JnVzc3MEZNVHRCMUJvWSswL0EvMEJ4SkNFSlNmai9Ea25Ga1lRa0pPR0RJYWs0a3BDRUpId3dKQlZIRXBLUWhBK0dwT0pJUWhLUzhNR1FWQnhKU0VJU1BoaVNpaU1KU1Vq
/// Q0J3TEFmd0dPcllzQUFzWDh6d0FBQUFCSlJVNUVya0pnZ2c9PQGfB1NFTEVDVCAgICAgbWguaWRjb21tb2RpdHksIG1oLmNvbW1vZGl0eSwgZGJvLkRNVU5JVC5zaWduLCBTVU0oZHQucXVhbnRpdHkpIEFTIHF1YW50aXR5LCBkYm8uZm5QYWRSaWdodChDT05WRVJUKHZhcmNoYXIoMyksIFNVTShkdC5xdWFudGl0eSkpLCBDT05WRVJUKHZhcmNoYXIsICcgJyksIDQpIA0KICAgICAgICAgICAgICAgICAgICAgICsgQ09OVkVSVCh2YXJjaGFyLCAnJykgKyBkYm8uRE1VTklULnNpZ24gQVMgc3RycXVhbnRpdHksIGR0LnByaWNlLA0KICAgICAgICAgICAgICAgICAgICAgIENPTlZFUlQoaW50LCAwKSBBUyBhbW91bnRkaXNjb3V0LCBjb252ZXJ0KGludCwwKSBBUyBh
/// bW91bnR2YXQsQ09OVkVSVChpbnQgLDApIEFTIGFtb3VudHN1cmNoYWdlLA0KICAgICAgICAgICAgICAgICAgICAgIENPTlZFUlQodmFyY2hhcigxMCksICcxMi8wNC8yMDE1JykgQVMgbmdheSwNCiAgICAgICAgICAgICAgICAgICAgICBDT05WRVJUKGludCwgMCkgQVMgdG9uZ2hkDQpGUk9NICAgICAgICAgZGJvLkVYUE9SVERFVEFJTCBBUyBkdCBJTk5FUiBKT0lODQogICAgICAgICAgICAgICAgICAgICAgZGJvLkVYUE9SVCBBUyBtdCBPTiBkdC5pZGV4cG9ydCA9IG10LmlkZXhwb3J0IElOTkVSIEpPSU4NCiAgICAgICAgICAgICAgICAgICAgICBkYm8uUkVDRUlQVCBBUyBwdCBPTiBtdC5pZGV4cG9ydCA9IHB0LmlkZXhwb3J0IElOTkVSIEpPSU4NCiAgICAg
/// ICAgICAgICAgICAgICAgICBkYm8uRE1DT01NT0RJVFkgQVMgbWggT04gZHQuaWRjb21tb2RpdHkgPSBtaC5pZGNvbW1vZGl0eSBJTk5FUiBKT0lODQogICAgICAgICAgICAgICAgICAgICAgZGJvLkRNVU5JVCBPTiBtaC5pZHVuaXQgPSBkYm8uRE1VTklULmlkdW5pdA0KR1JPVVAgQlkgbWguaWRjb21tb2RpdHksIG1oLmNvbW1vZGl0eSwgZGJvLkRNVU5JVC5zaWduLCBkdC5wcmljZQ==</Resource>
///   </Resources>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class XR_Report : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.TopMarginBand TopMargin;
        private DevExpress.XtraReports.UI.BottomMarginBand BottomMargin;
        private System.Data.SqlClient.SqlDataAdapter sqlDataAdapter1;
        private System.Data.SqlClient.SqlCommand sqlCommand1;
        private System.Data.SqlClient.SqlConnection sqlConnection1;
        private XtraReportSerialization.dsDataSet dsDataSet1;
        private DevExpress.XtraReports.UI.FormattingRule formattingRule1;
        private DevExpress.XtraReports.Parameters.Parameter field;
        private DevExpress.XtraReports.Parameters.Parameter logo;
        private DevExpress.XtraReports.Parameters.Parameter company;
        private DevExpress.XtraReports.Parameters.Parameter address;
        private DevExpress.XtraReports.Parameters.Parameter companyid;
        private DevExpress.XtraReports.Parameters.Parameter email;
        private DevExpress.XtraReports.Parameters.Parameter fax;
        private DevExpress.XtraReports.Parameters.Parameter Licence;
        private DevExpress.XtraReports.Parameters.Parameter rep;
        private DevExpress.XtraReports.Parameters.Parameter sign;
        private DevExpress.XtraReports.Parameters.Parameter tax;
        private DevExpress.XtraReports.Parameters.Parameter tel;
        private DevExpress.XtraReports.Parameters.Parameter website;
        private DevExpress.XtraReports.Parameters.Parameter MS;
        private DevExpress.XtraReports.Parameters.Parameter EMP1;
        private DevExpress.XtraReports.Parameters.Parameter EMP2;
        private DevExpress.XtraReports.Parameters.Parameter EMP3;
        private DevExpress.XtraReports.Parameters.Parameter EMP4;
        private DevExpress.XtraReports.Parameters.Parameter EMP5;
        private DevExpress.XtraReports.Parameters.Parameter EMP6;
        private DevExpress.XtraReports.Parameters.Parameter EMP7;
        private DevExpress.XtraReports.Parameters.Parameter EMP8;
        private DevExpress.XtraReports.Parameters.Parameter EMP9;
        private DevExpress.XtraReports.Parameters.Parameter EMP10;
        private System.Resources.ResourceManager _resources;
        private string _resourceString;
        public XR_Report() {
            this._resourceString = DevExpress.XtraReports.Serialization.XRResourceManager.GetResourceFor("XtraReportSerialization.XR_Report");
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(this._resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.TopMargin = new DevExpress.XtraReports.UI.TopMarginBand();
            this.BottomMargin = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.sqlDataAdapter1 = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand1 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection1 = new System.Data.SqlClient.SqlConnection();
            this.dsDataSet1 = new XtraReportSerialization.dsDataSet();
            this.formattingRule1 = new DevExpress.XtraReports.UI.FormattingRule();
            this.field = new DevExpress.XtraReports.Parameters.Parameter();
            this.logo = new DevExpress.XtraReports.Parameters.Parameter();
            this.company = new DevExpress.XtraReports.Parameters.Parameter();
            this.address = new DevExpress.XtraReports.Parameters.Parameter();
            this.companyid = new DevExpress.XtraReports.Parameters.Parameter();
            this.email = new DevExpress.XtraReports.Parameters.Parameter();
            this.fax = new DevExpress.XtraReports.Parameters.Parameter();
            this.Licence = new DevExpress.XtraReports.Parameters.Parameter();
            this.rep = new DevExpress.XtraReports.Parameters.Parameter();
            this.sign = new DevExpress.XtraReports.Parameters.Parameter();
            this.tax = new DevExpress.XtraReports.Parameters.Parameter();
            this.tel = new DevExpress.XtraReports.Parameters.Parameter();
            this.website = new DevExpress.XtraReports.Parameters.Parameter();
            this.MS = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP1 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP2 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP3 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP4 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP5 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP6 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP7 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP8 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP9 = new DevExpress.XtraReports.Parameters.Parameter();
            this.EMP10 = new DevExpress.XtraReports.Parameters.Parameter();
            ((System.ComponentModel.ISupportInitialize)(this.dsDataSet1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.HeightF = 112.5F;
            this.Detail.Name = "Detail";
            this.Detail.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.Detail.Scripts.OnAfterPrint = "Detail_AfterPrint";
            this.Detail.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // TopMargin
            // 
            this.TopMargin.Name = "TopMargin";
            this.TopMargin.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.TopMargin.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // BottomMargin
            // 
            this.BottomMargin.Name = "BottomMargin";
            this.BottomMargin.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.BottomMargin.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // sqlDataAdapter1
            // 
            this.sqlDataAdapter1.SelectCommand = this.sqlCommand1;
            // 
            // sqlCommand1
            // 
            this.sqlCommand1.CommandText = resources.GetString("sqlCommand1.CommandText");
            this.sqlCommand1.Connection = this.sqlConnection1;
            // 
            // sqlConnection1
            // 
            this.sqlConnection1.ConnectionString = "Data Source=MUONG-PC\\SQLEXPRESS;Database=eps; User ID=sa;Password=123456;";
            this.sqlConnection1.FireInfoMessageEventOnUserErrors = false;
            // 
            // dsDataSet1
            // 
            this.dsDataSet1.DataSetName = "ds";
            this.dsDataSet1.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // formattingRule1
            // 
            this.formattingRule1.Name = "formattingRule1";
            // 
            // field
            // 
            this.field.Description = "field";
            this.field.Name = "field";
            this.field.ValueInfo = "2- Thương mại";
            // 
            // logo
            // 
            this.logo.Description = "logo";
            this.logo.Name = "logo";
            this.logo.Type = typeof(System.Drawing.Image);
            this.logo.ValueInfo = resources.GetString("logo.ValueInfo");
            // 
            // company
            // 
            this.company.Description = "company";
            this.company.Name = "company";
            this.company.ValueInfo = "CÔNG TY TNHH MTV KỸ THUẬT VÀ CÔNG NGHỆ EPS VIỆT NAM";
            // 
            // address
            // 
            this.address.Description = "address";
            this.address.Name = "address";
            this.address.ValueInfo = "235/60 Lê Văn Thọ, Phường 9, Quận Gò Vấp, TP.HCM";
            // 
            // companyid
            // 
            this.companyid.Description = "companyid";
            this.companyid.Name = "companyid";
            this.companyid.ValueInfo = "CTY1409070001";
            // 
            // email
            // 
            this.email.Description = "email";
            this.email.Name = "email";
            this.email.ValueInfo = "eps-asia@vnn.vn";
            // 
            // fax
            // 
            this.fax.Description = "fax";
            this.fax.Name = "fax";
            this.fax.ValueInfo = "+848 6257 2456";
            // 
            // Licence
            // 
            this.Licence.Description = "Licence";
            this.Licence.Name = "Licence";
            // 
            // rep
            // 
            this.rep.Description = "rep";
            this.rep.Name = "rep";
            this.rep.ValueInfo = "NGUYỄN VĂN VÂN";
            // 
            // sign
            // 
            this.sign.Description = "sign";
            this.sign.Name = "sign";
            this.sign.ValueInfo = "EPS";
            // 
            // tax
            // 
            this.tax.Description = "tax";
            this.tax.Name = "tax";
            // 
            // tel
            // 
            this.tel.Description = "tel";
            this.tel.Name = "tel";
            this.tel.ValueInfo = "0913 635 131";
            // 
            // website
            // 
            this.website.Description = "website";
            this.website.Name = "website";
            this.website.ValueInfo = "http://www.epsasia.com.vn/";
            // 
            // MS
            // 
            this.MS.Description = "MS";
            this.MS.Name = "MS";
            this.MS.ValueInfo = "0";
            // 
            // EMP1
            // 
            this.EMP1.Description = "EMP1";
            this.EMP1.Name = "EMP1";
            this.EMP1.ValueInfo = "5555";
            // 
            // EMP2
            // 
            this.EMP2.Description = "EMP2";
            this.EMP2.Name = "EMP2";
            // 
            // EMP3
            // 
            this.EMP3.Description = "EMP3";
            this.EMP3.Name = "EMP3";
            // 
            // EMP4
            // 
            this.EMP4.Description = "EMP4";
            this.EMP4.Name = "EMP4";
            // 
            // EMP5
            // 
            this.EMP5.Description = "EMP5";
            this.EMP5.Name = "EMP5";
            // 
            // EMP6
            // 
            this.EMP6.Description = "EMP6";
            this.EMP6.Name = "EMP6";
            // 
            // EMP7
            // 
            this.EMP7.Description = "EMP7";
            this.EMP7.Name = "EMP7";
            // 
            // EMP8
            // 
            this.EMP8.Description = "EMP8";
            this.EMP8.Name = "EMP8";
            // 
            // EMP9
            // 
            this.EMP9.Description = "EMP9";
            this.EMP9.Name = "EMP9";
            // 
            // EMP10
            // 
            this.EMP10.Description = "EMP10";
            this.EMP10.Name = "EMP10";
            // 
            // XR_Report
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.TopMargin,
                        this.BottomMargin});
            this.DataAdapter = this.sqlDataAdapter1;
            this.DataSource = this.dsDataSet1;
            this.Extensions.Add("DataSerializationExtension", "SomeName");
            this.Extensions.Add("DataEditorExtension", "SomeName");
            this.Extensions.Add("ParameterEditorExtension", "SomeName");
            this.FormattingRuleSheet.AddRange(new DevExpress.XtraReports.UI.FormattingRule[] {
                        this.formattingRule1});
            this.Margins = new System.Drawing.Printing.Margins(100, 99, 100, 100);
            this.Name = "XR_Report";
            this.PageHeight = 1100;
            this.PageWidth = 850;
            this.Parameters.AddRange(new DevExpress.XtraReports.Parameters.Parameter[] {
                        this.field,
                        this.logo,
                        this.company,
                        this.address,
                        this.companyid,
                        this.email,
                        this.fax,
                        this.Licence,
                        this.rep,
                        this.sign,
                        this.tax,
                        this.tel,
                        this.website,
                        this.MS,
                        this.EMP1,
                        this.EMP2,
                        this.EMP3,
                        this.EMP4,
                        this.EMP5,
                        this.EMP6,
                        this.EMP7,
                        this.EMP8,
                        this.EMP9,
                        this.EMP10});
            this.Version = "13.1";
            ((System.ComponentModel.ISupportInitialize)(this.dsDataSet1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDataSet : global::System.Data.DataSet {
        private DataDataTable tableData;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataDataTable Data {
            get {
                return this.tableData;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsDataSet cln = ((dsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableData = ((DataDataTable)(base.Tables["Data"]));
            if ((initTable == true)) {
                if ((this.tableData != null)) {
                    this.tableData.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableData = new DataDataTable();
            base.Tables.Add(this.tableData);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeData() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDataSet ds = new dsDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataRowChangeEventHandler(object sender, DataRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnidcommodity;
            private global::System.Data.DataColumn columncommodity;
            private global::System.Data.DataColumn columnsign;
            private global::System.Data.DataColumn columnquantity;
            private global::System.Data.DataColumn columnstrquantity;
            private global::System.Data.DataColumn columnprice;
            private global::System.Data.DataColumn columnamountdiscout;
            private global::System.Data.DataColumn columnamountvat;
            private global::System.Data.DataColumn columnamountsurchage;
            private global::System.Data.DataColumn columnngay;
            private global::System.Data.DataColumn columntonghd;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataDataTable() {
                this.TableName = "Data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idcommodityColumn {
                get {
                    return this.columnidcommodity;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn commodityColumn {
                get {
                    return this.columncommodity;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn signColumn {
                get {
                    return this.columnsign;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strquantityColumn {
                get {
                    return this.columnstrquantity;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountdiscoutColumn {
                get {
                    return this.columnamountdiscout;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountvatColumn {
                get {
                    return this.columnamountvat;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountsurchageColumn {
                get {
                    return this.columnamountsurchage;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ngayColumn {
                get {
                    return this.columnngay;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn tonghdColumn {
                get {
                    return this.columntonghd;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRow this[int index] {
                get {
                    return ((DataRow)(this.Rows[index]));
                }
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataRowChangeEventHandler DataRowChanging;
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataRowChangeEventHandler DataRowChanged;
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataRowChangeEventHandler DataRowDeleting;
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataRowChangeEventHandler DataRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataRow(DataRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRow AddDataRow(string idcommodity, string commodity, string sign, int quantity, string strquantity, int price, int amountdiscout, int amountvat, int amountsurchage, string ngay, int tonghd) {
                DataRow rowDataRow = ((DataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        idcommodity,
                        commodity,
                        sign,
                        quantity,
                        strquantity,
                        price,
                        amountdiscout,
                        amountvat,
                        amountsurchage,
                        ngay,
                        tonghd};
                rowDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataRow);
                return rowDataRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataDataTable cln = ((DataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnidcommodity = base.Columns["idcommodity"];
                this.columncommodity = base.Columns["commodity"];
                this.columnsign = base.Columns["sign"];
                this.columnquantity = base.Columns["quantity"];
                this.columnstrquantity = base.Columns["strquantity"];
                this.columnprice = base.Columns["price"];
                this.columnamountdiscout = base.Columns["amountdiscout"];
                this.columnamountvat = base.Columns["amountvat"];
                this.columnamountsurchage = base.Columns["amountsurchage"];
                this.columnngay = base.Columns["ngay"];
                this.columntonghd = base.Columns["tonghd"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnidcommodity = new global::System.Data.DataColumn("idcommodity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcommodity);
                this.columncommodity = new global::System.Data.DataColumn("commodity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommodity);
                this.columnsign = new global::System.Data.DataColumn("sign", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsign);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columnstrquantity = new global::System.Data.DataColumn("strquantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrquantity);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columnamountdiscout = new global::System.Data.DataColumn("amountdiscout", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamountdiscout);
                this.columnamountvat = new global::System.Data.DataColumn("amountvat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamountvat);
                this.columnamountsurchage = new global::System.Data.DataColumn("amountsurchage", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamountsurchage);
                this.columnngay = new global::System.Data.DataColumn("ngay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnngay);
                this.columntonghd = new global::System.Data.DataColumn("tonghd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntonghd);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRow NewDataRow() {
                return ((DataRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataRowChanged != null)) {
                    this.DataRowChanged(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataRowChanging != null)) {
                    this.DataRowChanging(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataRowDeleted != null)) {
                    this.DataRowDeleted(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataRowDeleting != null)) {
                    this.DataRowDeleting(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataRow(DataRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDataSet ds = new dsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataRow : global::System.Data.DataRow {
            private DataDataTable tableData;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData = ((DataDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string idcommodity {
                get {
                    try {
                        return ((string)(this[this.tableData.idcommodityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idcommodity\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.idcommodityColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string commodity {
                get {
                    try {
                        return ((string)(this[this.tableData.commodityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commodity\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.commodityColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sign {
                get {
                    try {
                        return ((string)(this[this.tableData.signColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sign\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.signColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int quantity {
                get {
                    try {
                        return ((int)(this[this.tableData.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.quantityColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strquantity {
                get {
                    try {
                        return ((string)(this[this.tableData.strquantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strquantity\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.strquantityColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int price {
                get {
                    try {
                        return ((int)(this[this.tableData.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.priceColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int amountdiscout {
                get {
                    try {
                        return ((int)(this[this.tableData.amountdiscoutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amountdiscout\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.amountdiscoutColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int amountvat {
                get {
                    try {
                        return ((int)(this[this.tableData.amountvatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amountvat\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.amountvatColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int amountsurchage {
                get {
                    try {
                        return ((int)(this[this.tableData.amountsurchageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amountsurchage\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.amountsurchageColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ngay {
                get {
                    try {
                        return ((string)(this[this.tableData.ngayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ngay\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.ngayColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int tonghd {
                get {
                    try {
                        return ((int)(this[this.tableData.tonghdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tonghd\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.tonghdColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidcommodityNull() {
                return this.IsNull(this.tableData.idcommodityColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidcommodityNull() {
                this[this.tableData.idcommodityColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommodityNull() {
                return this.IsNull(this.tableData.commodityColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcommodityNull() {
                this[this.tableData.commodityColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssignNull() {
                return this.IsNull(this.tableData.signColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsignNull() {
                this[this.tableData.signColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsquantityNull() {
                return this.IsNull(this.tableData.quantityColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetquantityNull() {
                this[this.tableData.quantityColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrquantityNull() {
                return this.IsNull(this.tableData.strquantityColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrquantityNull() {
                this[this.tableData.strquantityColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspriceNull() {
                return this.IsNull(this.tableData.priceColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpriceNull() {
                this[this.tableData.priceColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsamountdiscoutNull() {
                return this.IsNull(this.tableData.amountdiscoutColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetamountdiscoutNull() {
                this[this.tableData.amountdiscoutColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsamountvatNull() {
                return this.IsNull(this.tableData.amountvatColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetamountvatNull() {
                this[this.tableData.amountvatColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsamountsurchageNull() {
                return this.IsNull(this.tableData.amountsurchageColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetamountsurchageNull() {
                this[this.tableData.amountsurchageColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsngayNull() {
                return this.IsNull(this.tableData.ngayColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetngayNull() {
                this[this.tableData.ngayColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstonghdNull() {
                return this.IsNull(this.tableData.tonghdColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettonghdNull() {
                this[this.tableData.tonghdColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataRowChangeEvent : global::System.EventArgs {
            private DataRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowChangeEvent(DataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
